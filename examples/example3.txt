==============================================================================
# Path Conditions Examples (from Souper testsuite)
# This file discusses the examples involving 'pc' and 'blockpc' instructions.
# Example: test/Solver/zeros.ll
==============================================================================

zeros.ll
------------------------------------------------------------------------------
define void @foo(i32 %x) {
entry:
  %cmp0 = icmp eq i32 %x, 0
  br i1 %cmp0, label %zero, label %nonzero

zero:
  %noones = call i32 @llvm.ctpop.i32(i32 %x)
  %cmp1 = icmp eq i32 %noones, 0, !expected !1

  %allZeros1 = call i32 @llvm.ctlz.i32(i32 %x)
  %cmp2 = icmp eq i32 %allZeros1, 32, !expected !1

  %allZeros2 = call i32 @llvm.cttz.i32(i32 %x)
  %cmp3 = icmp eq i32 %allZeros2, 32, !expected !1

  br label %out

nonzero:
  %ones = call i32 @llvm.ctpop.i32(i32 %x)
  %cmp4 = icmp sgt i32 %ones, 0, !expected !1
  %cmp5 = icmp sle i32 %ones, 32, !expected !1
  %zeros = sub i32 32, %ones

  %leadZeros = call i32 @llvm.ctlz.i32(i32 %x)
  %cmp6 = icmp sge i32 %leadZeros, 0, !expected !1
  %cmp7 = icmp slt i32 %leadZeros, 32, !expected !1

  %trailZeros = call i32 @llvm.cttz.i32(i32 %x)
  %cmp8 = icmp sge i32 %trailZeros, 0, !expected !1
  %cmp9 = icmp slt i32 %trailZeros, 32, !expected !1

  %ltZeros = add i32 %leadZeros, %trailZeros
  %cmp10 = icmp sge i32 %ltZeros, 0, !expected !1
  %cmp11 = icmp slt i32 %ltZeros, 32, !expected !1

  %cmp12 = icmp slt i32 %zeros, %ltZeros, !expected !0
  br label %out

out:
  ret void
}

!0 = !{i1 0}
!1 = !{i1 1}
------------------------------------------------------------------------------
Optimization (origin/master)

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 1:i1
%2:i32 = ctpop %0
%3:i1 = eq 0:i32, %2
cand %3 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 1:i1
%2:i32 = ctlz %0
%3:i1 = eq 32:i32, %2
cand %3 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 1:i1
%2:i32 = cttz %0
%3:i1 = eq 32:i32, %2
cand %3 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i32 = ctpop %0
%3:i1 = slt 0:i32, %2
cand %3 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i32 = ctpop %0
%3:i1 = sle %2, 32:i32
cand %3 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i32 = ctlz %0
%3:i1 = sle 0:i32, %2
cand %3 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i32 = ctlz %0
%3:i1 = slt %2, 32:i32
cand %3 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i32 = cttz %0
%3:i1 = sle 0:i32, %2
cand %3 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i32 = cttz %0
%3:i1 = slt %2, 32:i32
cand %3 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i32 = cttz %0
%3:i32 = ctlz %0
%4:i32 = add %2, %3
%5:i1 = sle 0:i32, %4
cand %5 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i32 = cttz %0
%3:i32 = ctlz %0
%4:i32 = add %2, %3
%5:i1 = slt %4, 32:i32
cand %5 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i32 = ctpop %0
%3:i32 = sub 32:i32, %2
%4:i32 = cttz %0
%5:i32 = ctlz %0
%6:i32 = add %4, %5
%7:i1 = slt %3, %6
cand %7 0:i1

------------------------------------------------------------------------------
Optimization (with DFA)

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 1:i1
%2:i32 = ctpop %0
%3:i1 = eq 0:i32, %2
cand %3 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 1:i1
%2:i32 = ctlz %0
%3:i1 = eq 32:i32, %2
cand %3 1:i1

; Static profile 1
; Function: foo
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 1:i1
%2:i32 = cttz %0
%3:i1 = eq 32:i32, %2
cand %3 1:i1
