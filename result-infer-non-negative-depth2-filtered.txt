; Inspecting 285396 Redis values


------------------------------------------------------

%0:i64 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = var (00000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = or %0, %1
%3:i64 = lshr %2, 32:i64
%4:i64 = or %2, %3
%5:i64 = add 1:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i1 = ult 64:i32, %1
%3:i32 = select %2, %1, 64:i32
%4:i1 = eq 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ashrexact %0, 3:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 2305843009213693951:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 2305843009213693951:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = addnw 63:i64, %0
%2:i64 = lshr %1, 6:i64
%3:i32 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ashrexact %0, 4:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 1152921504606846975:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 1152921504606846975:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ashrexact %0, 2:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 4611686018427387903:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 4611686018427387903:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 24:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 768614336404564650:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 768614336404564650:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = var (000000000000000000000000000xxxxx) (n)
%3:i32 = or 32:i32, %2
%4:i32 = sub 32:i32, %0
%5:i32 = lshr %3, %4
%6:i32 = select %1, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 31:i32, %0
%2:i32 = or 32:i32, %1
%3:i32 = var
%4:i32 = sub 32:i32, %3
%5:i32 = lshr %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 1:i32, 1:i32, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ashrexact %0, 5:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 576460752303423487:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 576460752303423487:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 48:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 384307168202282325:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 384307168202282325:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = and 7:i64, %0
%2:i64 = shl 16384:i64, %1
%3:i64 = addnsw 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 40:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 461168601842738790:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 461168601842738790:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 128:i32, %0
infer %1

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = phi %0, 4:i64, 1:i64
%2:i64 = or 8:i64, %1
%3:i64 = addnsw 18446744073709551615:i64, %2
%4:i64 = urem %3, %1
%5:i64 = subnsw %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = slt 4294967295:i32, %1
%3:i32 = and 2147483647:i32, %1
%4:i32 = select %2, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 4:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 34
%1 = block 15
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 3:i8, 1:i8
%3:i8 = phi %0, %2, 3:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 3:i8, 1:i8
%3:i8 = phi %0, %2, 3:i8
%4:i8 = or 1:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ashrexact %0, 6:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 288230376151711743:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 288230376151711743:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = sext %0
%2:i64 = lshr 208:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 1:i32, %0
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 1:i32, %0
%2:i32 = shl 4:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 1:i32, %0
%2:i32 = shl 8:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = udiv 65536:i64, %0
infer %1

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = slt 4294967295:i32, %1
%3:i32 = and 2147483647:i32, %1
%4:i32 = select %2, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 3:i8, 1:i8
%4:i8 = phi %1, %3, 3:i8
%5:i8 = phi %0, %4, 2:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = var (0000000000000000000000000000xxxx) (n)
%3:i32 = or 16:i32, %2
%4:i32 = sub 32:i32, %0
%5:i32 = lshr %3, %4
%6:i32 = select %1, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 15:i32, %0
%2:i32 = or 16:i32, %1
%3:i32 = var
%4:i32 = sub 32:i32, %3
%5:i32 = lshr %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i8 = add 208:i8, %0
%2:i55 = zext %1
%3:i55 = lshr 18014398505287678:i55, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = udiv 512:i64, %1
%3:i64 = phi %0, %2, 1:i64
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = var (0000000000000000000000000xxxxxxx) (n)
%3:i32 = or 128:i32, %2
%4:i32 = sub 32:i32, %0
%5:i32 = lshr %3, %4
%6:i32 = select %1, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 127:i32, %0
%2:i32 = or 128:i32, %1
%3:i32 = var
%4:i32 = sub 32:i32, %3
%5:i32 = lshr %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000000xx) (n)
%2:i32 = var (00000000000000000000000000000x11) (zn)
%3:i32 = phi %0, %1, %2
%4:i32 = addnsw 4294967292:i32, %3
%5:i1 = ult %4, 3:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 16:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 32:i64
%4:i64 = phi %0, %3, 4294967296:i64, 4294967296:i64, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 16384:i32, %0
infer %1

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i64 = phi %1, 4294967296:i64, 0:i64, 0:i64
%3:i64 = phi %0, %2, 4294967296:i64, 4294967296:i64, 0:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshrexact %0, 3:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = sdiv %2, 2:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %3, %4, 15:i32
%6:i32 = phi %0, 0:i32, %2, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshr %0, 58:i64
%2:i64 = shl 18446744073709551615:i64, %1
%3:i64 = xor 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i24 = var (00000000xxxxxxxxxxxxxxxx) (n)
%1:i24 = addnw 3:i24, %0
%2:i24 = var (0000000000000000xxxxxxxx) (n)
%3:i24 = and 1:i24, %2
%4:i24 = addnw %1, %3
%5:i1 = eq 2:i24, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %3, %4, 18:i32
%6:i32 = phi %0, 0:i32, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 18:i32
%7:i32 = phi %1, 0:i32, %3, %6
%8:i32 = phi %0, 0:i32, 1:i32, %7, 1:i32, 1:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2:i8 = xor 1:i8, %1
%3:i8 = phi %0, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var (00000000000000000xxxxxxxxxxxxxxx) (n)
%3:i32 = select %1, %2, 64:i32
%4:i1 = eq 0:i32, %3
%5:i32 = select %4, 1:i32, %3
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i8 = trunc %0
%2:i8 = lshr 74:i8, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 4293918720:i32, %0
%2:i32 = sub %0, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, 0:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000x000000) (n)
%1:i64 = var
%2:i64 = cttz %1
%3:i64 = or %0, %2
%4:i32 = trunc %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = cttz %1
%3:i32 = trunc %2
%4:i64 = var
%5:i1 = eq 18446744073709551615:i64, %4
%6:i32 = var (00000000000000000000000000xxxxxx) (n)
%7:i32 = subnsw 64:i32, %6
%8:i32 = select %5, 0:i32, %7
%9:i32 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 56:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 329406144173384850:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 329406144173384850:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = udiv 16384:i64, %0
infer %1

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3:i32 = var (000000000000000000000000000000xx) (znp)
%4:i32 = phi %1, %2, %3
%5:i32 = addnsw 1:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000000xxxx) (n)
%1:i64 = shl 1:i64, %0
%2:i64 = lshr %1, 1:i64
%3:i32 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or 2:i32, %2
%4:i32 = addnw 1:i32, %2
%5:i32 = phi %0, %3, %4
%6:i32 = addnsw 4294967295:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or 2:i32, %2
%4:i32 = addnw 1:i32, %2
%5:i32 = phi %0, %3, %4
%6:i32 = addnsw 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = addnw 1:i32, %2
%5:i32 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000001x) (zn)
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3:i32 = phi %0, %1, %2
%4:i1 = eq 1:i32, %3
%5:i32 = addnsw 4294967295:i32, %3
%6:i32 = select %4, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 4293918720:i32, %0
%2:i32 = sub %0, %1
%3 = block 2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = shlnw %4, 4:i32
%6:i32 = var
%7:i32 = var
%8:i32 = add %6, %7
%9:i32 = phi %3, %5, %8
%10:i32 = urem %2, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 4293918720:i32, %0
%2:i32 = sub %0, %1
%3 = block 2
%4:i32 = var (00000000000000000000xxxxxxxx0000) (n)
%5:i32 = var
%6:i32 = phi %3, %4, %5
%7:i32 = urem %2, %6
%8:i32 = sub %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = ult %0, 8:i64
%2:i64 = sub 8:i64, %0
%3:i32 = trunc %2
%4:i32 = select %1, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = var (00000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxx) (n)
%2:i64 = select %0, %1, 128:i64
%3:i1 = eq 0:i64, %2
%4:i32 = trunc %2
%5:i32 = shlnw %4, 1:i32
%6:i32 = select %3, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000xxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 31:i32, %1
%3:i32 = addnw 5:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 15:i32, %0
%2:i1 = var
%3:i32 = select %2, 48:i32, 87:i32
%4:i32 = addnw %1, %3
%5:i8 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = srem %0, 64:i64
%2:i1 = slt %1, 0:i64
%3:i64 = addnsw 64:i64, %1
%4:i64 = select %2, %3, %1
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = srem %0, 64:i64
%2:i1 = slt %1, 0:i64
%3:i64 = addnsw 64:i64, %1
%4:i64 = select %2, %3, %1
%5:i32 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i64 = var (0000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxx) (n)
%3:i64 = select %1, %2, 64:i64
%4:i1 = eq 0:i64, %3
%5:i64 = select %4, 1:i64, %3
%6:i64 = phi %0, %5, 0:i64
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = var (00000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxx) (n)
%2:i64 = select %0, %1, 128:i64
%3:i32 = trunc %2
%4:i32 = shlnw %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = add %1, %2
%4:i32 = var
%5:i32 = shl %4, 4:i32
%6:i32 = phi %0, %3, %5
%7:i32 = udiv 16384:i32, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = ashrexact %2, 3:i64
%4:i64 = subnsw 2305843009213693951:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 96:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 192153584101141162:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 192153584101141162:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = ctlz %0
%2:i32 = subnsw 32:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var (00000000000000000000000000001xx0) (zn)
%3:i32 = var (00000000000000000000000000000xx0) (n)
%4:i32 = select %1, %2, %3
%5:i32 = or 128:i32, %4
%6:i32 = phi %0, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i32 = var (00000000000000000000000000001xx0) (zn)
%5:i32 = var (00000000000000000000000000000xx0) (n)
%6:i32 = select %3, %4, %5
%7:i32 = or 128:i32, %6
%8:i32 = phi %2, %7, %7
%9:i32 = phi %1, %8, %7
%10:i32 = phi %1, %8, %6
%11:i32 = phi %0, %9, %10, %10, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000000000000000000000000001x0x) (zn)
%1:i64 = addnsw 18446744073709551615:i64, %0
%2 = block 2
%3:i64 = var (0000000000000000000000000000000000000000000000000000000000000x0x) (zn)
%4:i64 = urem %1, %3
%5:i64 = subnsw %1, %4
%6:i32 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 63:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000xxx0) (n)
%3:i32 = or 128:i32, %2
%4:i32 = phi %1, %3, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i64 = shlnw %1, 8:i64
%3:i64 = or 1:i64, %2
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshrexact %0, 4:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = sdiv %2, 2:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 15:i8, %1
%3:i8 = xor 15:i8, %2
%4:i8 = phi %0, %3, 15:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 512:i32, %0
infer %1

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var
%3:i64 = add %1, %2
%4:i64 = var
%5:i64 = shl %4, 4:i64
%6:i64 = phi %0, %3, %5
%7:i64 = udiv 16384:i64, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 3:i8, 1:i8
%3:i8 = phi %0, %2, 3:i8
%4:i8 = or 1:i8, %3
%5:i1 = ne 1:i8, %4
%6:i8 = select %5, %3, 2:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 80:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 230584300921369395:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 230584300921369395:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000xxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 131064:i32, %1
%3:i32 = or 1:i32, %2
%4:i32 = or 2:i32, %2
%5:i32 = or 3:i32, %2
%6:i32 = phi %0, %3, %4, %5, %2
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 4:i32, 1:i32, 1:i32, 0:i32, 0:i32, 1:i32, 0:i32, 1:i32, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 4294967295:i32, %0
%2:i32 = ctlz %1
%3:i32 = subnsw 32:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i32 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 3:i64
%4:i64 = phi %0, 8:i64, 16:i64, 8:i64, %3, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = srem %0, 10:i32
%2:i32 = addnsw 48:i32, %1
%3:i8 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000x00000000000000000000000000000000) (n)
%1:i64 = lshrexact %0, 32:i64
%2:i8 = trunc %1
%3:i8 = xor 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = srem %0, 10:i32
%2:i32 = addnsw 48:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000xxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = ctlz %1
%3:i32 = var (000000000000000000000000000xxxxx) (n)
%4:i32 = or 32:i32, %3
%5:i32 = phi %0, %2, %4
%6:i32 = addnsw 4294967285:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i8 = var (0000000x) (n)
%3:i32 = zext %2
%4:i32 = sub 32:i32, %0
%5:i32 = lshr %3, %4
%6:i32 = select %1, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i8 = var (00000xxx) (n)
%3:i32 = zext %2
%4:i32 = sub 32:i32, %0
%5:i32 = lshr %3, %4
%6:i32 = select %1, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000xxxxxxxxxx) (n)
%2:i32 = and 31:i32, %1
%3:i32 = addnw 5:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = addnw 1:i32, %1
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %0, 1:i32, %2, %4
%6:i32 = var (000000000000xxxxxxxxxxxxxxxxxxxx) (n)
%7:i32 = and 15:i32, %6
%8:i32 = var (000000000000000000xxxxxxxxxxxxxx) (n)
%9:i32 = and 16:i32, %8
%10:i32 = or %7, %9
%11:i32 = addnsw %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnsw %0, %1
%3:i64 = srem %2, 64:i64
%4:i64 = addnsw 64:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i64 = var (00000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxx) (n)
%3:i64 = select %1, %2, 128:i64
%4:i1 = eq 0:i64, %3
%5:i64 = select %4, 1:i64, %3
%6:i64 = phi %0, %5, 0:i64
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3:i32 = var (000000000000000000000000000000xx) (znp)
%4:i32 = phi %1, %2, %3
%5:i32 = addnsw 1:i32, %4
%6:i32 = phi %0, %5, %4
%7:i32 = addnsw 4294967295:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx0xx) (n)
%1:i64 = or 4:i64, %0
%2:i64 = subnsw 0:i64, %1
%3:i64 = and %2, %1
%4:i32 = trunc %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = shl %1, 4:i64
%3:i64 = var
%4:i64 = var
%5:i64 = add %3, %4
%6:i64 = phi %0, %2, %5
%7:i64 = udiv 65536:i64, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ashr %0, 63:i64
%2:i64 = xor %0, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%3:i64 = select %1, 1:i64, %2
%4:i64 = phi %0, %3, 0:i64
%5:i32 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = lshr %1, 3:i64
%3:i64 = addnw 2147450881:i64, %2
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = trunc %1
%3:i32 = ctlz %2
%4:i32 = var
%5:i32 = ctlz %4
%6:i32 = or 32:i32, %5
%7:i32 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i8 = and 1:i8, %0
%2:i32 = zext %1
%3:i32 = var
%4:i32 = sub 32:i32, %3
%5:i32 = lshr %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (0xxxxxxx) (n)
%1:i8 = and 7:i8, %0
%2:i32 = zext %1
%3:i32 = var
%4:i32 = sub 32:i32, %3
%5:i32 = lshr %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000000000000000xxxxx) (n)
%1:i64 = shl 1:i64, %0
%2:i64 = lshr %1, 1:i64
%3:i32 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = ashrexact %2, 2:i64
%4:i64 = subnsw 4611686018427387903:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ashrexact %0, 1:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult %4, %1
%6:i1 = slt %4, 0:i64
%7:i1 = or %5, %6
%8:i64 = select %7, 9223372036854775807:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = and 4294967295:i64, %1
%3:i64 = mulnw 48:i64, %2
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 6:i32
%3:i32 = var
%4:i32 = lshr %3, 6:i32
%5:i1 = ult %2, %4
%6:i32 = select %5, %2, %4
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%2:i64 = lshr %1, 3:i64
%3:i64 = addnw 2147450879:i64, %2
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%1:i32 = addnsw 4294967131:i32, %0
%2:i64 = zext %1
%3:i64 = lshr 2251796592459779:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or 2:i32, %2
%4:i32 = addnw 1:i32, %2
%5:i32 = phi %0, %3, %4
%6:i32 = mulnsw 12:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000xxxxx) (n)
%2:i64 = zext %1
%3:i64 = phi %0, %2, 32:i64
%4:i64 = subnsw 32:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = zext %1
%3:i64 = shlnw %2, 32:i64
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = select %0, 8:i32, 16:i32
%2:i32 = addnsw 4294967295:i32, %1
%3:i64 = sext %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = xor 1:i32, %2
%4:i32 = phi %0, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (0000xxxx) (n)
%1:i8 = addnw 1:i8, %0
%2:i32 = zext %1
%3:i32 = shl 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = var (000000000000000000000000000xxxxx) (n)
%2:i32 = var (000000000000000000000000000xxxxx) (n)
%3:i32 = select %0, %1, %2
%4:i32 = shl 1:i32, %3
%5:i32 = add 4294967295:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 24:i64
%4:i64 = subnsw 768614336404564650:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = ashr %0, 31:i32
%2:i32 = xor %0, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i8 = var
%2:i64 = zext %1
%3:i64 = urem %0, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i16 = var (00000000000xxx00) (n)
%1:i32 = zext %0
%2:i32 = lshrexact %1, 2:i32
%3:i8 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (000000xxx0000000) (n)
%1:i32 = zext %0
%2:i32 = lshrexact %1, 7:i32
%3:i8 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (000xxxxx) (zn)
%1:i32 = zext %0
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 16:i32, %0
%2:i32 = udiv 1048576:i32, %1
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = add 4294967295:i32, %1
%3:i32 = ctlz %2
%4:i32 = subnsw 32:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i128 = var (0000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i128 = shlnuw %0, 64:i128
%2:i64 = var
%3:i128 = zext %2
%4:i128 = or %1, %3
%5:i128 = ashr %1, 127:i128
%6:i128 = xor %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000xxxxxx) (n)
%1:i32 = subnsw 64:i32, %0
%2:i64 = zext %1
%3:i64 = lshr 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = udiv %1, 4294967295:i64
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, %3, 1:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = addnsw 4294967283:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 70578692288760:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = ctlz %0
%2:i32 = subnsw 31:i32, %1
%3:i32 = addnsw 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = var
%3:i64 = udiv %1, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i1 = var
%4:i8 = zext %3
%5:i8 = or %2, %4
%6:i8 = phi %0, 0:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7:i32 = phi %0, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 72:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 256204778801521550:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 256204778801521550:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = slt 4294967295:i32, %0
%2:i32 = select %1, %0, 1000:i32
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var
%2:i16 = and 32767:i16, %1
%3:i32 = zext %2
%4 = block 4
%5:i1 = var
%6:i1 = var
%7:i1 = var
%8:i1 = var
%9:i1 = phi %4, %5, %6, %7, %8
%10:i16 = var (0xxxxxxxxxxxxxxx) (n)
%11:i32 = zext %10
%12:i32 = select %9, %3, %11
%13:i32 = phi %0, %3, %3, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3
%5:i8 = phi %1, %4, 0:i8, 0:i8
%6:i8 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 8
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000xxxxx) (n)
%2:i32 = phi %0, %1, 32:i32
%3:i32 = subnsw 31:i32, %2
%4:i32 = addnsw 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 112:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 164703072086692425:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 164703072086692425:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 8
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var
%3:i1 = eq 61951:i16, %2
%4:i1 = var
%5:i32 = var (000000000000000000000000000001x0) (zn)
%6:i32 = var (000000000000000000000000000000x0) (n)
%7:i32 = select %4, %5, %6
%8:i32 = or 8:i32, %7
%9:i32 = select %3, %8, %7
%10:i32 = or 128:i32, %9
%11:i32 = phi %1, %10, %10
%12:i32 = phi %0, %11, %9
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = zext %1
%3:i64 = shlnw %2, 32:i64
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 19
%1:i8 = var
%2:i1 = eq 1:i8, %1
%3:i1 = var
%4:i32 = select %3, 43:i32, 0:i32
%5:i32 = select %2, 42:i32, %4
%6:i32 = phi %0, 0:i32, 6:i32, 20:i32, 21:i32, 22:i32, 16:i32, 14:i32, 12:i32, 41:i32, 8:i32, 5:i32, 1:i32, 3:i32, 27:i32, 26:i32, 26:i32, 10:i32, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = addnw 1:i32, %1
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %0, 1:i32, %2, %4
%6:i32 = shlnw %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2, %2
%4:i64 = sext %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = or 536870912:i64, %1
%3:i64 = addnsw 18446744073709551615:i64, %2
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000x0000) (n)
%2:i32 = lshrexact %1, 4:i32
%3:i8 = trunc %2
%4:i8 = phi %0, %3, 1:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 7:i32, %0
%2:i32 = or 8:i32, %1
%3:i32 = var
%4:i32 = sub 32:i32, %3
%5:i32 = lshr %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 136:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 135637824071393761:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 135637824071393761:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = and 4294967295:i64, %1
%3:i64 = phi %0, %2, 0:i64
%4:i64 = var (000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = shlnw %4, 32:i64
%6:i64 = phi %0, %5, 0:i64
%7:i64 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000000xxxxx) (n)
%2:i64 = phi %0, %1, 32:i64
%3:i64 = subnsw 32:i64, %2
%4:i64 = addnsw 4294967295:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = or 8:i32, %2
%4:i32 = sub 32:i32, %0
%5:i32 = lshr %3, %4
%6:i32 = select %1, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var
%3:i1 = eq 65521:i16, %2
%4:i1 = var
%5:i32 = var (000000000000000000000000000001x0) (zn)
%6:i32 = var (000000000000000000000000000000x0) (n)
%7:i32 = select %4, %5, %6
%8:i32 = or 8:i32, %7
%9:i32 = select %3, %8, %7
%10:i32 = or 128:i32, %9
%11:i32 = phi %1, %10, %10
%12:i32 = phi %0, %11, %9
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = and 4294967295:i64, %0
%2:i64 = var
%3:i64 = udiv %1, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000xxxxx) (n)
%2:i64 = zext %1
%3:i64 = phi %0, %2, 32:i64
%4:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = subnsw 32:i64, %4
%6:i64 = addnsw 4294967295:i64, %5
%7:i64 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = lshr %0, 30:i32
%2:i1 = eq 0:i32, %1
%3:i32 = addnsw 4294967295:i32, %1
%4:i32 = select %2, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = addnw 3:i64, %0
%2:i1 = ult 8:i64, %1
%3:i64 = select %2, %1, 8:i64
%4:i1 = ult 2305843009213693951:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i16 = select %1, 256:i16, 64:i16
%3:i1 = var
%4:i16 = zext %3
%5:i16 = or %2, %4
%6:i16 = or 4:i16, %5
%7:i16 = or 2:i16, %5
%8:i16 = or 16:i16, %5
%9:i16 = phi %0, %5, %6, %7, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i32 = sext %0
%2:i32 = addnsw 128:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 19
%1:i8 = var
%2:i1 = eq 1:i8, %1
%3:i1 = var
%4:i32 = select %3, 43:i32, 0:i32
%5:i32 = select %2, 42:i32, %4
%6:i32 = phi %0, 0:i32, 7:i32, 20:i32, 19:i32, 22:i32, 15:i32, 14:i32, 11:i32, 41:i32, 8:i32, 5:i32, 1:i32, 3:i32, 27:i32, 26:i32, 26:i32, 9:i32, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i1 = eq 0:i32, %2
%4:i32 = select %3, 1:i32, %2
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 104:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 177372539170284150:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 177372539170284150:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i32 = udiv 128:i32, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 2:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 160:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 115292150460684697:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 115292150460684697:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = ashrexact %2, 4:i64
%4:i64 = subnsw 1152921504606846975:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = var (000000xxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = and 1:i32, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, 1:i32, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%1:i16 = var
%2:i32 = zext %1
%3:i32 = and %0, %2
%4:i8 = var
%5:i32 = zext %4
%6:i32 = lshr %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = xor 1:i8, %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (00000xxx) (n)
%1:i8 = addnw 1:i8, %0
%2:i32 = zext %1
%3:i32 = shl 256:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = var (0000000000000000000000000000xxx0) (n)
%2:i32 = or %0, %1
%3:i8 = trunc %2
%4:i8 = or 64:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000111111111111111111111111xxx) (zn)
%1:i32 = and 1:i32, %0
%2:i32 = var (000000000000000000000000000000x0) (n)
%3:i32 = var (0000000000000000000000000000xx00) (n)
%4:i32 = or %2, %3
%5:i32 = or %1, %4
%6:i8 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var
%2:i32 = lshr %1, 6:i32
%3:i1 = sle %0, %2
%4:i32 = select %3, 0:i32, %0
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = udivexact %0, 24:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = sdiv %2, 2:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (0000xxxx) (zn)
%1:i32 = zext %0
%2:i32 = shl 256:i32, %1
%3:i32 = addnsw 4294967040:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (n)
%1:i64 = addnsw 18446744073709551608:i64, %0
%2:i64 = ashrexact %1, 3:i64
%3:i64 = addnsw 1:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 64:i32, %0
infer %1

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i1 = ult %1, %2
%4:i1 = var
%5:i32 = select %4, 38:i32, 37:i32
%6:i32 = select %3, 36:i32, %5
%7:i32 = phi %0, 47:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = phi %1, 1:i16, 0:i16
%3:i16 = or 2:i16, %2
%4:i16 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = and 7:i32, %1
%3:i32 = var (000000000000000000000000000x0000) (n)
%4:i32 = var (0000000000000000000000000xx01000) (zn)
%5:i32 = or %3, %4
%6:i32 = or %2, %5
%7:i8 = trunc %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = or %2, %3
%5:i8 = phi %1, 0:i8, %4
%6:i8 = var
%7:i8 = and 1:i8, %6
%8:i1 = var
%9:i8 = zext %8
%10:i8 = or %7, %9
%11:i8 = phi %0, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = phi %1, 1:i16, 0:i16
%3:i16 = or 2:i16, %2
%4:i16 = phi %0, %3, %2
%5:i16 = or 16:i16, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 12:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 1537228672809129301:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 1537228672809129301:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = and 255:i64, %1
%3:i64 = addnw 4294967169:i64, %2
%4:i64 = var
%5:i64 = and 255:i64, %4
%6:i64 = addnw 4294967169:i64, %5
%7:i64 = phi %0, %3, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5:i32 = phi %0, 1:i32, 0:i32, 1:i32, %2, %4, 4:i32, 0:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = lshr %1, 8:i32
%3:i32 = and 255:i32, %1
%4:i32 = udiv %2, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 67:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i64 = zext %0
%2:i64 = lshr 7720476292799415:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ashrexact %0, 7:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 144115188075855871:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 144115188075855871:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var
%2:i64 = zext %1
%3:i64 = urem %0, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i8 = var
%1:i64 = zext %0
%2:i64 = lshr 117804817335:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 67:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 168:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 109802048057794950:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 109802048057794950:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000000xx) (n)
%1:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = mulnuw %0, %1
%3:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = shl 256:i32, %3
%5:i32 = add %2, %4
%6:i32 = udiv 16384:i32, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4:i32 = phi %1, %2, %3
%5:i64 = zext %4
%6:i64 = urem %0, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 327680:i32, %3
%5:i32 = var (000000000000000000000000xxxxxx00) (n)
%6:i32 = var (000000000000xx00xxxxxxxx00000000) (zn)
%7:i32 = or %5, %6
%8:i32 = or 1:i32, %7
%9:i32 = var (00000000xxxxxxxxxxxxxxxx00000000) (n)
%10:i32 = or %1, %9
%11:i32 = or 1:i32, %10
%12:i32 = var (000000000000000000000000xxxxxx00) (n)
%13:i32 = or %12, %2
%14:i32 = or 262144:i32, %13
%15:i32 = phi %0, %4, %4, %8, %8, %11, %11, %14, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 15:i32, %1
%3:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%4:i32 = and 255:i32, %3
%5:i32 = addnw %2, %4
%6:i32 = phi %0, 6:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i32 = ctlz %1
%3:i32 = addnw 1:i32, %2
%4:i64 = var
%5:i32 = trunc %4
%6:i32 = ctlz %5
%7:i32 = phi %0, 33:i32, %3, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = subnw 10:i64, %0
%2:i64 = lshr 1023:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = shlnw %0, 8:i64
%2:i8 = var
%3:i64 = zext %2
%4:i64 = or %1, %3
%5:i64 = shl %4, 8:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = shl %1, 4:i32
%3:i32 = var
%4:i32 = var
%5:i32 = add %3, %4
%6:i32 = phi %0, %2, %5
%7:i32 = udiv 16384:i32, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = subnw 10:i32, %0
%2:i32 = lshr 1023:i32, %1
%3:i32 = shl %2, %1
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000000000000000000000000000xxx) (n)
%1:i64 = shlnw %0, 1:i64
%2:i1 = var
%3:i64 = zext %2
%4:i64 = or %1, %3
%5:i64 = shl %4, 1:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 1:i32, 3:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 0:i32, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = addnsw 4294967283:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 140689662192:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000000xxx0) (n)
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i64 = or %0, %1
%3:i64 = shl %2, 1:i64
%4:i64 = var (00000000000000000000000000000000xxxxxxxx000000000000000000000000) (n)
%5:i1 = ne 0:i64, %4
%6:i64 = zext %5
%7:i64 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, 1:i32, %3
%5:i32 = phi %0, 0:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7:i32 = phi %0, 0:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxx00000000) (n)
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = or %0, %1
%3:i64 = shl %2, 8:i64
%4:i8 = var
%5:i64 = zext %4
%6:i64 = or %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var
%3:i1 = eq %1, %2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000xxxxxxx) (n)
%5:i32 = trunc %4
%6:i32 = select %3, %5, 32:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (zp)
%1:i32 = ashr %0, 1:i32
%2:i32 = var (zp)
%3:i32 = ashr %2, 1:i32
%4:i1 = ult %1, %3
%5:i32 = select %4, %1, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2:i32 = phi %1, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 1:i32, 2:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32
%4:i32 = shlnsw %3, 25:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = var (0000000x) (n)
%3:i8 = and %1, %2
%4:i8 = phi %0, 1:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = addnsw 4294967283:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 2181221121396487:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 20:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 922337203685477580:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 922337203685477580:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = subnw 10:i32, %0
%2:i32 = lshr 1023:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 4:i32
%3:i32 = and 15:i32, %2
%4:i32 = var (000000000000xxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = and 240:i32, %4
%6:i32 = or %3, %5
%7:i32 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 200:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 92233720368547758:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 92233720368547758:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = subnw 10:i64, %0
%2:i64 = lshr 1023:i64, %1
%3:i64 = shl %2, %1
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i16 = var (0000000x0x000000) (znp)
%2:i16 = var (000000000000000x) (n)
%3:i16 = or %1, %2
%4:i16 = or 4:i16, %3
%5:i16 = or 2:i16, %3
%6:i16 = or 16:i16, %3
%7:i16 = phi %0, %3, %4, %5, %6
%8:i8 = var (xxx00000)
%9:i8 = and 128:i8, %8
%10:i16 = zext %9
%11:i16 = or %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 6:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var (000000000000000x) (n)
%2:i8 = trunc %1
%3:i8 = xor 1:i8, %2
%4:i8 = phi %0, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 8:i32
%3:i32 = and 15:i32, %2
%4 = block 2
%5:i32 = var (000000000000000000000000xxxxxxxx) (n)
%6:i32 = addnw %3, %5
%7:i32 = phi %4, 6:i32, %6
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i8 = var
%2:i8 = and 15:i8, %1
%3:i32 = zext %2
%4:i32 = urem %0, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 16:i32, %0
infer %1

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 88:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 209622091746699450:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 209622091746699450:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%3:i32 = and 30:i32, %2
%4 = block 2
%5:i32 = var (000000000000000000000000000xxxx0) (n)
%6:i32 = phi %4, %5, 0:i32
%7:i32 = phi %1, %3, %3, %6
%8:i32 = phi %0, 0:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = phi %1, %4, 0:i8, 0:i8
%6:i8 = phi %0, %5, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = lshr %3, 3:i64
%5:i64 = addnsw %2, %4
%6:i64 = urem %5, %1
%7:i64 = subnsw %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = lshr %0, 1:i64
%2:i32 = trunc %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%2:i32 = sub 0:i32, %1
%3:i32 = and 30:i32, %2
%4 = block 2
%5:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%6:i32 = and 30:i32, %5
%7:i32 = phi %4, %6, 0:i32
%8:i32 = phi %0, %3, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %3, %5, 0:i8
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8, 0:i8
%4:i1 = var
%5:i8 = zext %4
%6:i8 = or %3, %5
%7:i8 = phi %0, %6, %3, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %5
%7:i8 = phi %0, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ctlz %0
%2:i64 = subnsw 64:i64, %1
%3:i32 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or 2:i32, %2
%4:i32 = addnw 1:i32, %2
%5:i32 = phi %0, %3, %4
%6:i32 = mulnsw 9:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i32 = zext %0
%2:i16 = var
%3:i32 = zext %2
%4:i32 = mulnw %1, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i16 = var
%1:i32 = zext %0
%2:i32 = lshr 128:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or 2:i32, %2
%4:i32 = addnw 1:i32, %2
%5:i32 = phi %0, %3, %4
%6:i32 = shlnsw %5, 3:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 10:i32, %0
%2:i32 = lshr 1023:i32, %1
%3:i32 = shl %2, %1
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (00000xxx) (n)
%1:i8 = addnw 1:i8, %0
%2:i32 = zext %1
%3:i32 = shl 16:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 10:i32, %0
%2:i32 = lshr 1023:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (0000xxxx) (zn)
%1:i32 = zext %0
%2:i32 = shl 16:i32, %1
%3:i32 = addnw 65520:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 1:i32, 2:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 8:i32, %0
infer %1

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var (0000xxxx0000xxxx0000xxxx0000xxxx000xxxxx000xxxxx000xxxxx000xxxxx) (n)
%1:i32 = trunc %0
%2:i32 = lshr %1, 16:i32
%3:i32 = addnw %2, %1
%4:i32 = lshr %3, 8:i32
%5:i32 = addnw %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sub 10:i64, %0
%2:i64 = lshr 1023:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = srem %0, 64:i64
%2:i64 = srem %1, 32:i64
%3:i64 = subnsw 32:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = add %0, %1
%3:i64 = add 31:i64, %2
%4:i64 = and 18446744073709551584:i64, %3
%5:i64 = and 18446744073709551608:i64, %2
%6:i64 = sub %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx) (n)
%1:i64 = var (000000000000000000000000000000000000xxxx0000xxxx0000xxxx0000xxxx) (n)
%2:i64 = addnw %0, %1
%3:i32 = trunc %2
%4:i32 = lshr %3, 16:i32
%5:i32 = addnw %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 4:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i8 = var
%2:i64 = zext %1
%3:i64 = urem %0, %2
%4:i32 = trunc %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8
%4:i8 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = lshr %0, 3:i32
%2:i32 = lshr %0, 7:i32
%3:i32 = udiv %1, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = or 4:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i1 = var
%4:i32 = zext %3
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = and 1099511627775:i64, %1
%3:i64 = addnw 8192:i64, %2
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 26:i32, 22:i32
%3:i32 = addnw 4:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = srem %0, 32:i64
%2:i64 = subnsw 32:i64, %1
%3:i64 = srem %2, 32:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8
%4:i8 = phi %0, %3, 0:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sub 10:i64, %0
%2:i64 = lshr 1023:i64, %1
%3:i64 = shl %2, %1
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (znp)
%4:i32 = phi %2, %3, 1:i32
%5:i32 = phi %1, %4, 0:i32
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var
%2:i32 = add %0, %1
%3:i32 = add 31:i32, %2
%4:i32 = and 4294967264:i32, %3
%5:i32 = and 4294967288:i32, %2
%6:i32 = sub %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = add %0, %1
%3:i64 = sub 0:i64, %2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = urem %3, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = var (00000000000000000000000000000x0x) (zn)
%3:i32 = phi %1, 1:i32, 2:i32, %2
%4:i32 = phi %0, 2:i32, 2:i32, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = subnsw 0:i32, %0
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = subnsw 2:i32, %2
%4:i32 = and %1, %3
%5:i32 = var (000000000000000000000000000xx000) (n)
%6:i32 = var (00000000000000000000000000000x00) (n)
%7:i32 = or %5, %6
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = shlnw %8, 1:i32
%10:i32 = or %7, %9
%11:i32 = addnw %4, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ctlz %0
%2:i64 = subnsw 64:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 10:i32, 0:i32
%3:i32 = addnw 10:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000001x0) (zn)
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 8:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00x00000000000000000000000000000) (n)
%1:i64 = zext %0
%2:i64 = lshrexact %1, 29:i64
%3:i64 = subnsw 2:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = sub %0, %1
%3:i64 = srem %2, 64:i64
%4:i64 = addnsw 64:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = lshr 2305:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i8 = xor 1:i8, %2
%4:i8 = phi %0, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (n)
%1:i64 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = mulnuw %0, %1
%3:i64 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = shl 256:i64, %3
%5:i64 = add %2, %4
%6:i64 = udiv 16384:i64, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = shl %0, 4:i64
%2:i64 = udiv 16384:i64, %1
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var
%2:i64 = zext %1
%3:i64 = addnsw 18446744073709551615:i64, %2
%4:i64 = add %0, %3
%5:i64 = urem %4, %2
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 10:i32, 0:i32
%3:i32 = addnw 10:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000xxxxxx) (n)
%1:i64 = zext %0
%2:i64 = shl 18446744073709551615:i64, %1
%3:i64 = xor 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = or 4:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 8:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 3:i8, 1:i8
%3:i8 = phi %0, %2, 3:i8
%4:i8 = or 1:i8, %3
%5:i1 = eq 1:i8, %4
%6:i8 = select %5, 2:i8, %3
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (00000000xxxxxxxxxxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 2:i32, %3
%5:i32 = var (000000000000000000000000xxxxxx00) (n)
%6:i32 = var (00000000xxxxxxxxxxxxxxxx00000000) (n)
%7:i32 = or %5, %6
%8:i32 = or 3:i32, %7
%9:i32 = var (000000000000000000000000xxxxxx00) (n)
%10:i32 = var (00000000xxxxxxxxxxxxxxxx00000000) (n)
%11:i32 = or %9, %10
%12:i32 = or 3:i32, %11
%13:i32 = phi %0, %4, %4, %8, %8, %12, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = addnsw 4294967283:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 70438002626568:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i64 = zext %0
%2:i64 = lshr 482528531504055:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 1024:i32, %0
infer %1

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 15:i32, %1
%3:i8 = var (0000xxxx) (n)
%4:i32 = zext %3
%5:i32 = xor %2, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000xxxxxx) (n)
%2:i64 = shl 1:i64, %1
%3:i64 = add 18446744073709551615:i64, %2
%4:i64 = and %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 120:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 153722867280912930:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 153722867280912930:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = var (0000000x) (n)
%3:i8 = xor 1:i8, %2
%4:i8 = and %1, %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 4:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3:i32 = shlnw %2, 30:i32
%4:i32 = phi %0, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%2:i64 = and 34359738360:i64, %1
%3:i64 = var (000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (n)
%4:i64 = addnw %2, %3
%5:i64 = phi %0, %4, %2
%6:i64 = addnw 40:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000x00000000) (n)
%1:i1 = eq 0:i32, %0
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = addnw %2, %3
%5:i32 = and 508:i32, %4
%6:i32 = select %1, %4, %5
%7 = block 2
%8:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%9:i32 = phi %7, 0:i32, %8
%10:i32 = add 4294967272:i32, %9
%11:i32 = lshr %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000001x0) (zn)
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 8:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = or 128:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%2:i64 = and 34359738360:i64, %1
%3:i1 = var
%4:i64 = var (000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (n)
%5:i64 = select %3, %4, 0:i64
%6:i64 = addnw %2, %5
%7:i64 = phi %0, %6, %2
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i1 = ne 0:i64, %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = select %2, %4, 0:i64
%6:i64 = phi %0, %5, 0:i64
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (00000000xxx00000) (n)
%1:i32 = zext %0
%2:i32 = lshrexact %1, 5:i32
%3:i8 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = cttz %1
%3:i32 = addnw 33:i32, %2
%4:i32 = var
%5:i32 = cttz %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %3, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 13
%2:i32 = phi %1, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 4:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i32 = var (00000000000000000000000000000xx0) (n)
%4:i32 = phi %2, 6:i32, 8:i32, %3
%5:i32 = phi %1, 6:i32, %4
%6:i32 = phi %0, %5, 6:i32, 3:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxx0000)
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i32 = add 16:i32, %3
%5:i32 = udiv 1048576:i32, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = var
%3 = block 2
%4:i32 = var
%5:i32 = phi %0, %1, %2, %4
%6:i32 = and 4293918720:i32, %5
%7:i32 = sub %5, %6
%8 = block 2
%9:i32 = var (000000000000000000000000xxxxxxxx) (n)
%10:i32 = shlnw %9, 4:i32
%11:i32 = var
%12:i32 = var
%13:i32 = add %11, %12
%14:i32 = phi %8, %10, %13
%15:i32 = urem %7, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000xxx) (zn)
%1:i32 = addnsw 4294967295:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i1 = var
%6:i32 = zext %5
%7:i32 = addnw %4, %6
%8:i32 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw 2147450880:i64, %1
%3:i64 = var
%4:i64 = sub 0:i64, %3
%5:i64 = and %2, %4
%6:i64 = var
%7:i64 = sub 0:i64, %6
%8:i64 = and %2, %7
%9:i64 = phi %0, %5, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = lshr %1, 2:i32
%3:i32 = and 4:i32, %2
%4 = block 2
%5:i32 = var (000000000000000000000000000000xx) (n)
%6:i32 = shl 4:i32, %5
%7:i32 = phi %4, %6, 0:i32
%8:i32 = lshr %1, 1:i32
%9:i32 = and 8:i32, %8
%10:i32 = phi %0, %3, %7, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (000000000000000000000000000x0000) (n)
%2:i32 = lshrexact %1, 4:i32
%3:i8 = trunc %2
%4:i8 = phi %0, %3, %3, 1:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000x00x000000000000000000000) (n)
%2:i1 = eq 2097152:i32, %1
%3 = block 2
%4:i32 = var (000000000000000000000000000000x1) (zn)
%5:i32 = phi %3, %4, 3:i32
%6:i32 = select %2, 1:i32, %5
%7:i1 = var
%8:i1 = var
%9:i1 = or %7, %8
%10:i32 = select %9, 1:i32, %6
%11:i32 = phi %0, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var
%2:i64 = and 2147483647:i64, %1
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, %3, %3, 0:i64, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = var
%2:i32 = select %0, %1, 16:i32
%3:i1 = ult %2, 24:i32
%4:i32 = select %3, %2, 24:i32
%5:i32 = shl 11:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i1 = ult %1, 5:i32
%3:i32 = select %2, %1, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = ctlz %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, 33:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (xxxxx000)
%2:i8 = and 24:i8, %1
%3:i8 = or 36:i8, %2
%4:i8 = phi %0, %3, 20:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ult %0, 6:i32
%2:i32 = select %1, %0, 0:i32
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = subnsw %0, %1
%3:i1 = slt 18446744073709551615:i64, %2
%4:i64 = subnsw 0:i64, %2
%5:i64 = select %3, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %1, %3, %3, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = shlnsw %7, 1:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var (0000000000000000000000000000x0xx) (n)
%3:i32 = phi %1, 4:i32, 4:i32, %2, 1:i32
%4:i32 = phi %0, 4:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (000000xxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = and 1:i32, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, 1:i32, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = addnw 7:i64, %0
%2:i64 = lshr %1, 3:i64
%3:i32 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 0:i64, 1:i64
%3:i64 = phi %0, 1:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000100xx) (zn)
%1:i64 = zext %0
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = shl 1:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 3:i32, 3:i32, 0:i32
%3:i32 = phi %0, 0:i32, 2:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 192:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 96076792050570581:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 96076792050570581:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000001x) (zn)
%1:i8 = trunc %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%1:i32 = addnsw 4294963683:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 49200:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = subnsw 18:i32, %0
%2:i64 = zext %1
%3:i64 = addnsw 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ult 128:i32, %1
%3:i1 = var
%4:i32 = select %3, 512:i32, 256:i32
%5:i32 = select %2, %4, 128:i32
%6 = block 2
%7:i32 = var
%8:i32 = var
%9:i32 = phi %6, %7, %8
%10:i32 = udiv %5, %9
infer %10

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%1:i32 = and 15:i32, %0
%2:i32 = addnsw 4294967295:i32, %1
%3:i32 = shl 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = var
%3 = block 2
%4:i32 = var
%5:i32 = var
%6:i32 = phi %3, %4, %5
%7:i32 = phi %0, %1, %2, %6
%8:i32 = and 4293918720:i32, %7
%9:i32 = sub %7, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 1:i8, %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = and %3, %5
%7:i8 = phi %0, %6, %3, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000xxxx10) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000001xx10) (zn)
%5:i32 = phi %1, %2, %4
%6:i32 = addnw 2:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = var
%3:i32 = var
%4:i32 = select %1, %2, %3
%5:i64 = zext %4
%6:i64 = zext %2
%7:i32 = var
%8:i64 = zext %7
%9:i1 = ult %6, %8
%10:i64 = select %9, %8, %6
%11:i64 = phi %0, %5, %10, %6
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000xx000) (zn)
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i64 = sext %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 184:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 100254043878856258:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 100254043878856258:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = slt 4294967295:i32, %0
%2:i64 = sext %0
%3:i64 = subnsw 0:i64, %2
%4:i64 = select %1, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 32:i32, %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, 32:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = slt %0, 0:i32
%2:i32 = select %1, 8:i32, %0
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 2:i32, %1
%3:i1 = var
%4:i32 = select %3, 2:i32, 3:i32
%5:i32 = select %2, 0:i32, %4
%6:i32 = phi %0, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 304:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 60680079189834051:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 60680079189834051:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 73:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 26:i32, 22:i32
%3:i32 = addnw 4:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnw 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i32 = select %1, 66:i32, 34:i32
%3:i32 = select %1, 70:i32, 38:i32
%4:i32 = select %1, 69:i32, 37:i32
%5:i32 = select %1, 68:i32, 36:i32
%6:i32 = select %1, 67:i32, 35:i32
%7:i64 = var
%8:i1 = ne 0:i64, %7
%9:i32 = select %1, 65:i32, 33:i32
%10:i32 = select %8, %9, %2
%11:i32 = phi %0, %2, %3, %4, %5, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = ashr %0, 31:i32
%2:i32 = addnsw 256:i32, %1
%3:i32 = and 4294967040:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 4294967288:i32, %0
%2:i32 = sub %0, %1
%3:i32 = shl %2, 24:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, %2, 0:i32
%5:i32 = phi %0, %2, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = ashrexact %2, 5:i64
%4:i64 = subnsw 576460752303423487:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshr 278:i64, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 3:i32
%3:i32 = addnw 536870913:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 3:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = phi %0, 16:i32, 8:i32
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = var (000000000000000000000000000000xx) (n)
%2:i32 = var (000000000000000000000000000001xx) (zn)
%3:i32 = select %0, %1, %2
%4:i8 = var
%5:i32 = zext %4
%6:i32 = and %3, %5
%7:i8 = trunc %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 4
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32, 1:i32
%6:i32 = phi %1, %5, 1:i32, 1:i32
%7:i32 = phi %0, %6, 1:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 48:i64
%4:i64 = subnsw 384307168202282325:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000)
%2:i64 = or 3:i64, %1
%3:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000)
%4:i64 = or 2:i64, %3
%5:i1 = var
%6:i64 = zext %5
%7:i64 = phi %0, %2, %4, %6
%8:i32 = trunc %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %1, %3, %3, %3, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = shlnsw %7, 1:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = slt 15:i32, %1
%3:i32 = select %2, 1967:i32, 1966:i32
%4:i1 = var
%5:i1 = var
%6:i1 = or %4, %5
%7:i1 = var
%8:i32 = select %7, 1965:i32, 1972:i32
%9:i32 = select %7, 1964:i32, 1963:i32
%10:i32 = select %6, %8, %9
%11:i32 = phi %0, %3, 1971:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = lshr %1, 3:i64
%3:i64 = addnw 2147450880:i64, %2
%4:i64 = phi %0, %3, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ult 65535:i32, %0
%2:i32 = select %1, 0:i32, %0
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1073741824:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i1 = ult %1, 6083:i32
%3:i32 = select %2, %1, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 201603:i32, 0:i32
%4:i32 = phi %1, %3, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (zp)
%1:i32 = ashr %0, 1:i32
%2:i1 = ult 4:i32, %1
%3:i32 = select %2, %1, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = ashr %1, 31:i32
%3:i32 = addnsw 256:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000000000xxxxxx0xxxx) (n)
%1:i32 = trunc %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = addnw 1:i32, %1
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %0, 1:i32, %2, %4
%6:i32 = mulnw 3:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = slt 15:i32, %1
%3:i32 = select %2, 1350:i32, 1348:i32
%4:i1 = var
%5:i1 = var
%6:i1 = or %4, %5
%7:i1 = var
%8:i32 = select %7, 1347:i32, 1355:i32
%9:i32 = select %7, 1346:i32, 1345:i32
%10:i32 = select %6, %8, %9
%11:i32 = phi %0, %3, 1354:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var
%2:i64 = zext %1
%3:i64 = mul %0, %2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = urem %3, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = addnw 29:i32, %1
%3:i32 = or 2:i32, %1
%4:i32 = phi %0, 30:i32, %2, 3:i32, %3
%5:i64 = sext %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = phi %0, 1:i32, 2:i32
%2:i32 = subnsw 2:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 3:i64
%4:i64 = phi %0, %3, 128:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshrexact %0, 2:i64
%2:i64 = addnw 1:i64, %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = addnuw %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = var
%3:i1 = or %1, %2
%4:i1 = var
%5:i32 = select %4, 1965:i32, 1972:i32
%6:i32 = select %4, 1964:i32, 1963:i32
%7:i32 = select %3, %5, %6
%8:i32 = phi %0, %7, 1971:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = var (000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = trunc %1
%3:i1 = ult %0, %2
%4:i32 = select %3, %0, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 73:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i64 = zext %3
%5:i64 = phi %1, %4, 0:i64
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i64 = zext %8
%10:i64 = phi %6, %9, 0:i64
%11:i64 = phi %0, %5, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var (zp)
%2:i32 = addnsw 4294967295:i32, %1
%3:i64 = sext %2
%4:i64 = and %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = sub 0:i32, %1
%3:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = or 536870912:i32, %3
%5:i32 = and %2, %4
%6:i32 = var
%7:i32 = sub 0:i32, %6
%8:i32 = and %7, %4
%9:i32 = phi %0, %5, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = add %0, %1
%3:i64 = and 4294967295:i64, %2
%4:i64 = addnw 3:i64, %3
%5:i64 = var
%6:i64 = and 3:i64, %5
%7:i64 = subnsw %4, %6
%8:i64 = subnsw %7, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var (0000000x0000000x0000000x00000000) (znp)
%2:i32 = addnsw 4294967295:i32, %1
%3:i64 = sext %2
%4:i64 = and %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 11:i32, 48:i32
%3:i32 = phi %0, %2, 48:i32, 48:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 288:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 64051194700380387:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 64051194700380387:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000x0x000) (n)
%1:i32 = subnsw 64:i32, %0
%2:i64 = zext %1
%3:i64 = lshr 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = phi %0, 64:i32, 32:i32
%2:i32 = subnsw 64:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 18
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 3
%4:i8 = phi %3, 0:i8, 1:i8, 0:i8
%5:i8 = phi %0, %2, %2, %2, %2, %2, %2, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000xxxxxxxx) (n)
%1:i32 = addnsw 4294967261:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 32750:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 5:i32, 6:i32
%3:i32 = phi %0, 6:i32, 5:i32, 2:i32, 1:i32, 7:i32, 4:i32, 3:i32, 0:i32, 0:i32, %2
%4:i64 = sext %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = var
%3 = block 2
%4:i32 = var
%5:i32 = phi %0, %1, %2, %4
%6:i32 = and 4293918720:i32, %5
%7:i32 = sub %5, %6
%8 = block 2
%9:i32 = var (00000000000000000000xxxxxxxx0000) (n)
%10:i32 = var
%11:i32 = phi %8, %9, %10
%12:i32 = urem %7, %11
%13:i32 = sub %7, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000xxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 15:i32, %0
%2:i1 = eq 15:i32, %1
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = xor 3:i32, %4
%6:i32 = phi %3, %5, 3:i32
%7:i32 = select %2, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = var
%3:i1 = or %1, %2
%4:i1 = var
%5:i32 = select %4, 1347:i32, 1355:i32
%6:i32 = select %4, 1346:i32, 1345:i32
%7:i32 = select %3, %5, %6
%8:i32 = phi %0, %7, 1354:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 6:i32, 0:i32
%4:i32 = phi %1, 6:i32, 8:i32, %3
%5:i32 = phi %0, 6:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2:i32 = var
%3:i32 = lshr %2, 8:i32
%4:i32 = phi %1, %3, %3, %3, %3, 4:i32, 2:i32
%5:i32 = phi %0, %4, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 0:i32, 1073741824:i32, 536870912:i32, 0:i32
%3:i32 = phi %0, %2, 1073741824:i32, 536870912:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i64 = zext %1
%3:i64 = subnsw 2:i64, %2
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = phi %1, %2, 2:i32, 1:i32, 2:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = var
%3:i64 = sub %1, %2
%4:i32 = var
%5:i64 = zext %4
%6:i1 = ult %3, %5
%7:i64 = select %6, %3, %5
%8:i64 = phi %0, 0:i64, 0:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = ctlz %1
%3:i32 = subnsw 32:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var
%2:i1 = eq 115:i8, %1
%3:i1 = var
%4:i32 = select %3, 2:i32, 0:i32
%5:i32 = select %2, 1:i32, %4
%6:i32 = phi %0, 0:i32, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = bswap %0
%2:i1 = slt 4294967295:i32, %1
%3:i64 = sext %1
%4:i64 = subnsw 0:i64, %3
%5:i64 = select %2, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = addnsw 4294967283:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 1163317931411460:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (00000000000000xx) (n)
%1:i16 = shlnw %0, 2:i16
%2:i32 = zext %1
%3:i32 = shl 15:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000xxxxxxxxxxxxxx) (n)
%2:i32 = and 127:i32, %1
%3:i64 = zext %2
%4:i1 = var
%5:i1 = var
%6:i1 = xor %4, %5
%7:i64 = select %6, 0:i64, %3
%8:i64 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var (00000000000000xx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 3:i32, %1
%3:i32 = shl 4:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = lshr %3, 3:i64
%5:i64 = addnsw %2, %4
%6:i64 = urem %5, %1
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (000000000000000000000000000000xx) (znp)
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3:i32 = phi %0, 1:i32, %1, %2
%4:i32 = mulnw 3:i32, %3
%5:i32 = var (000000000000xxxxxxxxxxxxxxxxxxxx) (n)
%6:i32 = and 15:i32, %5
%7:i32 = var (000000000000000000xxxxxxxxxxxxxx) (n)
%8:i32 = and 16:i32, %7
%9:i32 = or %6, %8
%10:i32 = add %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = lshr %1, 3:i32
%3:i32 = or 536870912:i32, %2
%4:i32 = phi %0, %3, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = subnsw %0, %1
%3:i1 = slt 18446744073709551615:i64, %2
%4:i64 = subnsw 0:i64, %2
%5:i64 = select %3, %2, %4
%6:i32 = var
%7:i64 = zext %6
%8:i64 = addnsw %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = addnw 3:i64, %0
%2:i64 = lshr %1, 2:i64
%3:i32 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%1:i32 = addnsw 4294967294:i32, %0
%2:i52 = zext %1
%3:i52 = lshr 2224964858010536:i52, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (00000000000xxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 29:i32, %2
%4:i32 = or 2:i32, %2
%5:i32 = phi %0, 30:i32, %3, 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = and 4294967295:i64, %0
%2:i64 = addnw 3:i64, %1
%3:i64 = add 3:i64, %0
%4:i64 = and 3:i64, %3
%5:i64 = subnsw %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = slt 0:i32, %0
%2:i32 = select %1, %0, 0:i32
%3:i32 = shlnw %2, 1:i32
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = lshr 146:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (0000000x) (n)
%1:i1 = ne 0:i8, %0
%2:i32 = select %1, 8:i32, 4:i32
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000x0x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 1:i32, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = trunc %1
%3:i32 = ctlz %2
%4:i32 = var
%5:i32 = ctlz %4
%6:i32 = or 32:i32, %5
%7:i32 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 12:i32
%4:i32 = phi %0, 1:i32, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i8 = var (0000xxxx) (n)
%2:i32 = zext %1
%3:i32 = urem %0, %2
%4:i32 = shlnw %3, 3:i32
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 0:i32, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var
%2:i32 = mul %0, %1
%3:i32 = lshr %2, 3:i32
%4:i32 = var
%5:i32 = udiv %3, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = slt 4294967295:i32, %1
%3:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = zext %3
%5:i64 = select %2, %4, 0:i64
%6:i64 = phi %0, 0:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5 = block 2
%6:i8 = phi %5, %4, %3
%7:i8 = phi %1, %4, %6
%8:i1 = var
%9:i8 = zext %8
%10:i8 = phi %0, %7, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = var
%4:i64 = zext %3
%5:i64 = phi %1, %2, %4
%6:i64 = phi %0, 0:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, 1:i8, %2
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = lshr %1, 3:i32
%3:i32 = addnw 536870913:i32, %2
%4:i32 = phi %0, %3, 0:i32, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i24 = zext %0
%2:i24 = shlnw %1, 20:i24
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (0000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw %0, %1
%3:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = zext %3
%5:i64 = urem %2, %4
%6:i32 = trunc %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = ctlz %0
%2:i32 = subnsw 31:i32, %1
%3:i32 = addnsw 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (zp)
%1:i32 = lshr %0, 1:i32
%2:i32 = ctlz %1
%3:i32 = subnsw 32:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i64 = sext %0
%2:i64 = addnw 4294967293:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, 0:i64, %3
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = addnsw 4294967283:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 2106385072258815:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ult 39:i32, %0
%2:i64 = zext %0
%3:i64 = subnsw 40:i64, %2
%4:i64 = select %1, 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000000x0000) (n)
%2:i64 = or 40:i64, %1
%3:i64 = phi %0, 56:i64, %2
%4:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = mulnw 48:i64, %4
%6:i64 = phi %0, %5, 0:i64
%7:i64 = addnsw %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 65527:i32, %0
%2:i16 = trunc %1
%3:i16 = lshr 3585:i16, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (zp)
%1:i32 = ashr %0, 1:i32
%2:i32 = ctlz %1
%3:i32 = subnsw 32:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = or 536870912:i32, %1
%3:i32 = phi %0, %2, %2, %2
%4:i32 = addnsw 4294967295:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i1 = ult %0, %1
%3:i1 = var
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = select %3, 6:i32, %4
%6:i32 = select %2, 7:i32, %5
%7:i32 = shl 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 152:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 121360158379668102:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 121360158379668102:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = var (0000000x) (n)
%6:i1 = ne 0:i8, %5
%7:i8 = select %6, %4, 1:i8
%8:i8 = phi %0, %4, %4, %4, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 40:i64
%4:i64 = subnsw 461168601842738790:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8
%4 = block 2
%5:i8 = phi %4, %3, %2
%6:i8 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i64 = shlnw %1, 4:i64
%3:i64 = or 40:i64, %2
%4:i64 = phi %0, 56:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (0000000000000000000000000000001x) (zn)
%5:i32 = phi %1, %3, %4
%6:i32 = or 4:i32, %5
%7:i32 = phi %0, %5, %6
%8:i32 = or 8:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = shlnw %1, 2:i64
%3:i64 = phi %0, 0:i64, %2, 0:i64, 0:i64
%4:i64 = ashrexact %3, 2:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = shlnw %1, 2:i64
%3:i64 = phi %0, 0:i64, %2
%4:i64 = ashrexact %3, 2:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (000000000000xx0xxxxxxxxx00000000) (zn)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5:i32 = var (000000000000000000000000xxxxxx00) (n)
%6:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%7:i32 = or %5, %6
%8:i32 = or 327680:i32, %7
%9:i32 = phi %0, %4, %4, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = and 1:i64, %1
%3 = block 2
%4:i64 = phi %3, %2, %2
%5:i64 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ult 19:i32, %0
%2:i64 = zext %0
%3:i64 = subnsw 20:i64, %2
%4:i64 = select %1, 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000xxxxxx) (n)
%2:i64 = zext %1
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00)
%2:i32 = and 252:i32, %1
%3:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%4:i32 = or %2, %3
%5:i32 = or 262144:i32, %4
%6:i32 = var (000000000000000000000000xxxxxx00) (n)
%7:i32 = or %6, %3
%8:i32 = or 327680:i32, %7
%9:i32 = var (000000000000000000000000xxxxxxxx) (n)
%10:i32 = shlnw %9, 16:i32
%11:i32 = or %7, %10
%12:i32 = or 1:i32, %11
%13:i32 = or 655361:i32, %7
%14:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%15:i32 = or %3, %14
%16:i32 = or %2, %15
%17:i32 = phi %0, %5, %5, %8, %8, %11, %11, %11, %11, %12, %12, %13, %13, %16, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = zext %1
%3:i64 = addnw %0, %2
%4:i32 = var
%5:i32 = lshr %4, 2:i32
%6:i64 = zext %5
%7:i64 = urem %3, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 3:i32
%3 = block 2
%4:i32 = var
%5:i32 = lshr %4, 3:i32
%6:i32 = phi %3, %5, %2
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = lshr %1, 3:i64
%3:i64 = addnw 2147450881:i64, %2
%4:i64 = phi %0, %3, 0:i64, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 5
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 0:i8, 0:i8
%4:i8 = phi %0, %1, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = ctlz %0
%2:i64 = zext %1
%3:i64 = subnsw 32:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = addnw 3:i64, %0
%2:i1 = ult 8:i64, %1
%3:i64 = select %2, %1, 8:i64
%4:i1 = ult 2305843009213693951:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3:i32 = phi %1, 1:i32, %2
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = addnw %4, %5
%7:i32 = addnw %3, %6
%8:i32 = phi %0, %7, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 2:i64
%4:i64 = phi %0, 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 17
%5:i32 = var (000000000000000000000000000000xx) (n)
%6:i32 = phi %3, 1:i32, %5
%7:i32 = phi %2, %6, 0:i32
%8:i32 = phi %1, 4:i32, %7
%9 = block 2
%10 = block 2
%11:i32 = phi %10, %8, 4:i32
%12:i32 = phi %9, %11, %6
%13:i32 = phi %0, %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 56:i64
%4:i64 = subnsw 329406144173384850:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = addnsw 18446744073709551615:i64, %0
%2:i32 = var
%3:i64 = zext %2
%4:i64 = addnsw %1, %3
%5:i32 = var
%6:i64 = zext %5
%7:i64 = urem %4, %0
%8:i64 = subnsw %6, %7
%9:i64 = addnsw %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = var
%4:i1 = ne 0:i32, %3
%5:i32 = select %4, 2:i32, %2
%6:i32 = phi %0, %2, %2, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = select %0, 8:i32, 4:i32
%2:i32 = addnsw 4294967295:i32, %1
%3:i64 = var (00000000000000000000000000000000000000000000000000000000000x0000) (n)
%4:i1 = ne 0:i64, %3
%5:i32 = var
%6:i32 = and 1073741823:i32, %5
%7:i32 = var
%8:i32 = lshr %7, 3:i32
%9:i32 = select %4, %6, %8
%10:i32 = addnsw %2, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000000000000000000000000xxxxxx) (n)
%1:i64 = subnsw 64:i64, %0
%2:i64 = addnw 4294967295:i64, %1
%3:i32 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i64 = sext %0
%2:i64 = shlnsw %1, 3:i64
%3:i64 = addnsw 4294967293:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i8 = var (z)
%2:i1 = eq 5:i8, %1
%3:i32 = select %2, 8:i32, 4:i32
%4:i32 = addnsw 4294967295:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = or 2:i32, %3
%5:i32 = phi %1, %3, %4
%6:i32 = or 4:i32, %5
%7:i32 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (00000000xxxxxxxxxxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%6:i32 = or %1, %5
%7:i32 = or 262144:i32, %6
%8:i32 = phi %0, %4, %4, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4, %4
%6:i32 = or 4:i32, %5
%7:i32 = phi %0, %6, %5, %5
%8:i32 = or 8:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = shl %1, 4:i64
%3:i64 = var
%4:i64 = var
%5:i64 = add %3, %4
%6:i64 = phi %0, %2, %5
%7:i64 = udiv 16384:i64, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = ctlz %1
%3:i32 = phi %0, %2, 32:i32
%4:i32 = subnsw 32:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000x00000000000000000000000000) (n)
%2:i32 = lshrexact %1, 26:i32
%3:i8 = trunc %2
%4:i8 = phi %0, %3, 1:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 0:i64, 1:i64
%3:i64 = or 2:i64, %2
%4:i64 = phi %0, %2, %3
%5:i64 = or 4:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 8:i32, 4:i32
%3:i32 = addnsw 4294967295:i32, %2
%4:i1 = var
%5:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%7:i32 = select %4, %5, %6
%8:i32 = addnsw %3, %7
%9:i32 = subnsw 0:i32, %2
%10:i32 = and %8, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 262144:i32, %3
%5:i32 = or 262145:i32, %3
%6:i32 = var (000000000000000000000000xxxxxx00) (n)
%7:i32 = or %6, %2
%8:i32 = or 524289:i32, %7
%9:i32 = or 589825:i32, %7
%10:i32 = or 3997697:i32, %7
%11:i32 = phi %0, %4, %4, %5, %5, %5, %5, %8, %8, %9, %9, %10, %10, %10, %10, %4, %4
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = trunc %1
%3:i32 = and 16777215:i32, %2
%4:i64 = var
%5:i64 = lshr %4, 40:i64
%6:i32 = trunc %5
%7:i32 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 3:i32, %1
%3:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00)
%4:i32 = and 12:i32, %3
%5:i32 = or %2, %4
%6:i32 = var
%7:i32 = and 3:i32, %6
%8:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00)
%9:i32 = and 12:i32, %8
%10:i32 = or %7, %9
%11:i32 = phi %0, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 0:i64, 1:i64
%3:i64 = or 2:i64, %2
%4:i64 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = addnsw %2, %4
%6:i64 = urem %5, %1
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i1 = eq 0:i32, %1
%3:i1 = var
%4:i32 = select %3, 1:i32, 3:i32
%5:i32 = select %2, %4, 1:i32
%6:i32 = phi %0, 0:i32, %5, 1:i32, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i64 = phi %2, 0:i64, 1:i64
%4:i64 = or 2:i64, %3
%5:i64 = phi %1, %3, %4
%6:i64 = or 4:i64, %5
%7:i64 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (000000000000xx00xxxxxxxx00000000) (zn)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5:i32 = var (000000000000000000000000xxxxxx00) (n)
%6:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%7:i32 = or %5, %6
%8:i32 = or 262144:i32, %7
%9:i32 = phi %0, %4, %4, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 1:i64, 0:i64
%3:i64 = or 2:i64, %2
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (00000000xxxxxxxxxxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5:i32 = phi %0, %4, %4, %4, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = shl %0, 4:i32
%2:i32 = udiv 16384:i32, %1
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = and 4294967295:i64, %3
%5:i64 = addnsw %2, %4
%6:i64 = urem %5, %1
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 2:i64
%4:i64 = phi %0, 0:i64, %3, 0:i64, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = and 4294967295:i64, %3
%5:i64 = addnsw %2, %4
%6:i64 = urem %5, %1
%7:i64 = subnsw %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (00000000xxxxxxxxxxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 2:i32, %3
%5:i32 = var (000000000000000000000000xxxxxx00) (n)
%6:i32 = var (00000000xxxxxxxxxxxxxxxx00000000) (n)
%7:i32 = or %5, %6
%8:i32 = or 3:i32, %7
%9:i32 = phi %0, %4, %4, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = phi %0, 0:i1, 1:i1
%2:i32 = select %1, 8:i32, 4:i32
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%2:i64 = lshr %1, 3:i64
%3:i64 = addnw 2147450880:i64, %2
%4:i64 = phi %0, %3, 1:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 2:i64, 0:i64
%3:i64 = phi %0, 2:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i64 = var
%3:i64 = and 1099511627775:i64, %2
%4:i64 = addnw 8192:i64, %3
%5:i64 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = shlnw %1, 2:i64
%3:i64 = addnw 4:i64, %2
%4:i64 = phi %0, 4:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000000000000000xxxxx) (n)
%1:i64 = shl 11:i64, %0
%2:i64 = addnw 4096:i64, %1
%3:i64 = addnsw 18446744073709551611:i64, %0
%4:i64 = shl 1:i64, %3
%5:i64 = add %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = phi %1, %2, %3
%5:i8 = var (0000000x) (n)
%6:i8 = phi %0, %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%1:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00)
%2:i64 = add %0, %1
%3:i64 = and 4294967294:i64, %2
%4:i64 = var
%5:i64 = udiv %3, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000001x) (zn)
%5:i64 = phi %1, %3, %4
%6:i64 = or 4:i64, %5
%7:i64 = phi %0, %5, %6
%8:i64 = or 8:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 5:i32, 0:i32, 4:i32
%3:i32 = phi %0, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 4:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = or 8:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 0:i32, %2
%4:i32 = xor 1:i32, %3
%5 = block 2
%6:i1 = var
%7:i32 = zext %6
%8:i32 = phi %5, 0:i32, %7
%9:i32 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var
%2:i32 = lshr %1, 3:i32
%3:i64 = zext %2
%4:i64 = urem %0, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = shlnw %1, 2:i32
%3:i32 = or 3:i32, %2
%4:i32 = or 2:i32, %2
%5:i32 = or 1:i32, %2
%6:i32 = phi %0, %3, %4, %5, %2, 132:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 63:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = var
%5:i32 = and 63:i32, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 0:i32, %0
%2:i1 = slt 4294967292:i32, %1
%3:i32 = select %2, %1, 4294967292:i32
%4:i32 = add %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8, 0:i8
%5:i8 = var (0000000x) (n)
%6:i8 = or %4, %5
%7:i8 = phi %1, %6, %4, %4
%8:i8 = and 1:i8, %7
%9:i1 = var
%10:i8 = zext %9
%11:i8 = or %8, %10
%12:i8 = phi %0, %11, %7, %7
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw 2147450880:i64, %1
%3:i64 = phi %0, %2, %2, %2
%4:i64 = addnsw 18446744073709551615:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4, %4
%6:i32 = or 4:i32, %5
%7:i32 = phi %0, %6, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = shlnw %1, 2:i32
%3:i32 = or 3:i32, %2
%4:i32 = or 2:i32, %2
%5:i32 = or 1:i32, %2
%6:i32 = phi %0, 132:i32, %3, %4, %5, %2
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = slt 4294967295:i32, %1
%3:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = zext %3
%5:i64 = select %2, %4, 0:i64
%6:i64 = phi %0, 0:i64, %5, 0:i64
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%2:i32 = lshr %1, 3:i32
%3:i32 = or 536870912:i32, %2
%4:i32 = phi %0, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = select %0, 8:i32, 4:i32
%2:i32 = addnsw 4294967295:i32, %1
%3:i1 = var
%4:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i32 = select %3, %4, %5
%7:i32 = addnsw %2, %6
%8:i32 = subnsw 0:i32, %1
%9:i32 = and %7, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = ctlz %1
%3:i32 = phi %0, 32:i32, %2
%4:i32 = subnsw 32:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i64 = phi %1, 4:i64, 8:i64, 16:i64, 4:i64, 4:i64
%3:i64 = phi %0, %2, 16:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = or %2, %3
%5 = block 3
%6:i8 = var (0000000x) (n)
%7 = block 3
%8:i8 = var (0000000x) (n)
%9:i8 = phi %5, %6, %8, %8
%10:i8 = phi %1, %4, %9, %9
%11:i8 = and 1:i8, %10
%12:i1 = var
%13:i8 = zext %12
%14:i8 = or %11, %13
%15:i8 = phi %0, %14, %10, %10
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %2, %3
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 8:i32, 4:i32
%3:i32 = addnsw 4294967295:i32, %2
%4:i64 = var (00000000000000000000000000000000000000000000000000000000000x0000) (n)
%5:i1 = ne 0:i64, %4
%6:i32 = var
%7:i32 = and 1073741823:i32, %6
%8:i32 = var
%9:i32 = lshr %8, 3:i32
%10:i32 = select %5, %7, %9
%11:i32 = addnsw %3, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = xor 1:i32, %2
%4:i32 = phi %0, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, %3, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = udiv 128:i32, %1
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000xxxxxxxx) (n)
%1:i32 = and 15:i32, %0
%2:i32 = lshr %0, 4:i32
%3:i32 = subnsw %1, %2
%4:i32 = shl 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 80:i64
%4:i64 = subnsw 230584300921369395:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or 2:i32, %2
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %0, %4, %3
%6:i32 = addnsw 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %1, %4, 0:i8, %6
%8:i8 = and 1:i8, %7
%9:i1 = var
%10:i8 = zext %9
%11:i8 = or %8, %10
%12:i8 = phi %0, %11, %7
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (000000000000x000) (n)
%1:i32 = zext %0
%2:i32 = lshrexact %1, 3:i32
%3:i32 = subnsw 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i80 = zext %1
%3:i80 = shlnw %2, 71:i80
%4:i80 = phi %0, 2361183241434822606848:i80, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 66:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8
%4:i1 = var
%5:i8 = zext %4
%6:i8 = or %3, %5
%7:i8 = phi %0, %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %1, %3, %5, %7
%9:i1 = var
%10:i8 = zext %9
%11:i8 = or %8, %10
%12:i1 = var
%13:i8 = zext %12
%14:i8 = or %8, %13
%15:i8 = phi %0, %8, %11, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000001xx0) (zn)
%1:i32 = shl 1:i32, %0
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = var (zp)
%2:i32 = select %0, %1, 32:i32
%3:i64 = zext %2
%4:i64 = addnsw 18446744073709551615:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (0000000000000xxx) (n)
%1:i16 = shlnw %0, 1:i16
%2:i1 = var
%3:i16 = zext %2
%4:i16 = or %1, %3
%5:i16 = shl %4, 1:i16
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = urem %0, 25:i32
%2:i32 = addnw 97:i32, %1
%3:i8 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i1 = var
%3:i8 = select %2, 4:i8, 2:i8
%4:i8 = and %1, %3
%5:i8 = var
%6:i8 = and 1:i8, %5
%7:i8 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = sext %0
%2:i64 = lshr 16492674392062:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xxx0) (n)
%1:i32 = shl 1:i32, %0
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000xxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = or 858:i32, %2
%4:i32 = phi %0, %3, 947:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 2
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = phi %0, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, 0:i32
%4:i16 = trunc %3
%5:i16 = shl %4, 3:i16
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = or %2, %3
%5 = block 3
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = var (0000000x) (n)
%9:i8 = phi %5, %7, 0:i8, %8
%10:i8 = phi %1, %4, %9
%11:i8 = phi %0, %10, %10, %9
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx1x) (zn)
%1:i32 = shl 2:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (00000xxx) (zn)
%1:i32 = zext %0
%2:i32 = shl 16:i32, %1
%3:i32 = addnw 65520:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or 2:i32, %2
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or %1, %2
%4:i8 = trunc %3
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i8 = trunc %5
%7:i8 = xor 1:i8, %6
%8:i8 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000001xx) (zn)
%1:i32 = shl 32:i32, %0
%2:i32 = addnw 65520:i32, %1
%3:i32 = var (00000000000000000000000000xxxxxx) (n)
%4:i32 = and 1:i32, %3
%5:i1 = var
%6:i32 = select %5, 14:i32, 15:i32
%7:i32 = shl %4, %6
%8:i32 = or %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (000x0000) (n)
%2:i8 = var (000xxxxx) (n)
%3:i8 = and 7:i8, %2
%4:i8 = var (xxxxxx00)
%5:i8 = and 8:i8, %4
%6:i8 = or %3, %5
%7:i8 = or %1, %6
%8:i8 = xor 16:i8, %7
%9:i8 = phi %0, %8, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000xxx) (n)
%1:i32 = var (000000000000000000000000000x0000) (n)
%2:i32 = or %0, %1
%3:i1 = var
%4:i32 = select %3, 104:i32, 8:i32
%5:i32 = or %2, %4
%6:i8 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 71:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 50:i64
%4:i64 = phi %0, %3, 1125899906842624:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i8 = var
%2:i8 = and 15:i8, %1
%3:i64 = zext %2
%4:i64 = urem %0, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i72 = var (00000000000000000000000000000000000000000000000000000000000000000x000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 6:i32
%3:i32 = subnsw 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = xor 1:i32, %0
%2:i16 = var (00000xxxxxxxxxxx) (n)
%3:i32 = zext %2
%4:i32 = or %1, %3
%5:i16 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2 = block 4
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, %3, %3, 0:i8, 0:i8
%5:i8 = phi %0, %4, %4, %4, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx1x) (zn)
%1:i32 = shl 2:i32, %0
%2:i32 = addnsw 4294967294:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000xxxxxx) (n)
%1:i64 = zext %0
%2:i64 = shl 1:i64, %1
%3:i64 = add 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = lshr %1, 3:i64
%3:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = zext %3
%5:i64 = addnw %2, %4
%6:i64 = var
%7:i64 = lshr %6, 3:i64
%8:i64 = addnw 1:i64, %7
%9:i64 = phi %0, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 128:i32, %0
%2:i32 = lshr %1, 1:i32
%3:i32 = shl 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = udivexact %0, 12:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = sdiv %2, 2:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = lshr 1092:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 255:i32, %1
%3:i32 = var
%4:i32 = and 256:i32, %3
%5:i32 = or %2, %4
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4:i32, 0:i32
%3:i32 = phi %0, %2, 5:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 8:i32, 8:i32, 12:i32, 12:i32
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000001xx0) (zn)
%1:i32 = shl 1:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = subnsw 32:i64, %1
%3:i64 = shl 1:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2:i8 = var (0000000x) (n)
%3:i8 = or %1, %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = or %3, %5
%7:i8 = var (0000000x) (n)
%8:i8 = or %1, %7
%9:i1 = var
%10:i8 = zext %9
%11:i8 = or %8, %10
%12 = block 3
%13 = block 3
%14:i8 = var (0000000x) (n)
%15:i8 = var (0000000x) (n)
%16:i8 = var (0000000x) (n)
%17:i8 = phi %13, %14, %15, %16
%18:i8 = var (0000000x) (n)
%19:i8 = or %17, %18
%20:i8 = var (0000000x) (n)
%21:i8 = or %17, %20
%22:i8 = phi %12, %17, %19, %21
%23:i8 = phi %0, %6, %11, %22
infer %23

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000)
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = or %0, %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = urem %2, %4
%6:i64 = addnw %5, %4
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = udivexact %0, 6:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = sdiv %2, 2:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (x0000000)
%1:i8 = ashrexact %0, 7:i8
%2:i64 = sext %1
%3:i64 = subnsw 0:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = udiv %2, 4294967295:i64
%4:i64 = addnw 1:i64, %3
%5:i64 = phi %0, %4, 1:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 28
%1:i32 = phi %0, 1:i32, 4:i32, 16:i32, 8:i32, 2:i32, 1:i32, 16:i32, 8:i32, 4:i32, 2:i32, 1:i32, 4:i32, 8:i32, 4:i32, 2:i32, 2:i32, 1:i32, 1:i32, 2:i32, 1:i32, 16:i32, 8:i32, 4:i32, 2:i32, 1:i32, 4:i32, 8:i32, 8:i32
%2:i32 = addnsw 4294967295:i32, %1
%3:i64 = var
%4:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = add %3, %4
%6:i32 = trunc %5
%7:i32 = and %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 0:i32, 17:i32, 1:i32
%3:i8 = var (0000xxxx) (n)
%4:i32 = zext %3
%5:i32 = addnw %2, %4
%6:i32 = phi %0, 0:i32, %5, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i32 = phi %1, 0:i32, 26:i32
%3 = block 3
%4:i32 = phi %3, 0:i32, 0:i32, 28:i32
%5 = block 3
%6:i32 = phi %5, 0:i32, 0:i32, 13:i32
%7 = block 3
%8:i32 = phi %7, 0:i32, 0:i32, 27:i32
%9 = block 3
%10:i32 = phi %9, 0:i32, 0:i32, 26:i32
%11 = block 3
%12:i32 = phi %11, 0:i32, 0:i32, 11:i32
%13:i32 = phi %0, 0:i32, %2, %4, %6, %8, %10, %12, 0:i32, 0:i32, 0:i32, 0:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000xxxxxxxx) (n)
%1:i32 = lshr %0, 6:i32
%2:i32 = shl 1:i32, %1
%3:i8 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = and 15:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = and 15:i32, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = var (000000000000000000000000xxxxxxxx) (n)
%8:i32 = and 15:i32, %7
%9:i32 = addnw 1:i32, %8
%10:i32 = var (000000000000000000000000xxxxxxxx) (n)
%11:i32 = and 15:i32, %10
%12:i32 = addnw 1:i32, %11
%13:i32 = phi %0, 0:i32, %3, 0:i32, %6, 0:i32, %9, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8, %4
%6:i8 = phi %1, %5, 1:i8, %5
%7:i8 = phi %0, %6, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 71:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i72 = var (00000000000000000000000000000000000000000000000000000000000000000x000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 6:i32
%3:i32 = subnsw 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = lshr 255:i32, %1
%3:i64 = sext %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %2, %3, %5
%7:i8 = var (0000000x) (n)
%8:i8 = var (0000000x) (n)
%9:i8 = or %7, %8
%10:i8 = var (0000000x) (n)
%11:i8 = or %7, %10
%12:i8 = phi %1, %6, %9, %11
%13:i8 = and 1:i8, %12
%14:i1 = var
%15:i8 = zext %14
%16:i8 = or %13, %15
%17:i1 = var
%18:i8 = zext %17
%19:i8 = or %13, %18
%20:i8 = phi %0, %12, %16, %19
infer %20

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 4:i32, 6:i32
%3:i1 = var
%4:i32 = select %3, 8:i32, 4:i32
%5:i32 = mulnw %2, %4
%6:i32 = phi %0, %5, 8:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i128 = var (0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx) (n)
%1:i64 = trunc %0
%2:i64 = lshr %1, 32:i64
%3:i64 = addnw %2, %1
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (00000000xxxxxxxx) (n)
%1:i16 = and 1:i16, %0
%2:i16 = var (0000000000000xx0) (n)
%3:i16 = var (00000000000xx000) (n)
%4:i16 = or %2, %3
%5:i16 = or %1, %4
%6:i8 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = xor 1:i32, %0
%2:i1 = var
%3:i32 = zext %2
%4:i32 = or %1, %3
%5:i8 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000xxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 15:i32, %0
%2:i32 = addnsw 4294967295:i32, %1
%3:i32 = shl 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (z)
%2:i64 = xor 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = lshr %3, 1:i64
%5:i64 = and %2, %4
%6:i64 = phi %0, 0:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1 = block 4
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = shlnuw 1:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
%5:i32 = and %0, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 5:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000xxxxx000xxxxx000xxxxx000xxxxx00xxxxxx00xxxxxx00xxxxxx00xxxxxx) (n)
%1:i32 = trunc %0
%2:i32 = lshr %1, 16:i32
%3:i32 = add %2, %1
%4:i32 = lshr %3, 8:i32
%5:i32 = add %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 4:i32, 1:i32, 1:i32, 1:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = sext %0
%2:i64 = lshr 7696581427200:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %0, %4, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (0000xxxx) (zn)
%1:i32 = zext %0
%2:i32 = shl 1024:i32, %1
%3:i32 = addnsw 4294966272:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or %1, %2
%4:i8 = trunc %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 4:i64
%4:i64 = phi %0, 16:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i128 = var (0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx0000xxxx000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx) (n)
%1:i64 = trunc %0
%2:i64 = lshr %1, 32:i64
%3:i64 = addnw %2, %1
%4:i32 = trunc %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000000010x) (zn)
%1:i64 = shlnuw 1:i64, %0
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = var
%5:i64 = sub %3, %4
%6:i64 = and %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (000000xx) (n)
%1:i8 = addnw 1:i8, %0
%2:i32 = zext %1
%3:i32 = shl 16:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = lshr 255:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000010x) (zn)
%1:i64 = zext %0
%2:i64 = shlnuw 1:i64, %1
%3:i64 = addnsw 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = and 18446744073709547520:i64, %0
%2:i64 = sub %0, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000x0000) (n)
%2:i32 = var (0000000000000000000000000000xxxx) (n)
%3:i32 = or %1, %2
%4:i8 = trunc %3
%5:i8 = var (000xxxxx) (n)
%6:i8 = and 7:i8, %5
%7:i8 = var (xxxxxxx0)
%8:i8 = and 8:i8, %7
%9:i8 = or %6, %8
%10:i8 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = phi %0, 4:i32, 1:i32, 1:i32
%2:i32 = var (0000000000000000000000000000xxxx) (n)
%3:i32 = shl 1:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
%5:i32 = mulnsw %1, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = mulnw 20:i64, %1
%3:i64 = addnw 8:i64, %2
%4:i64 = shlnw %1, 5:i64
%5:i64 = or 8:i64, %4
%6:i64 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 4:i32, %5
%7:i32 = phi %0, %6, %5
%8:i64 = sext %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%1:i64 = zext %0
%2:i64 = var
%3:i64 = srem %1, %2
%4:i32 = trunc %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, 3:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = xor 4398046511104:i64, %1
%3:i64 = or 131941395333120:i64, %2
%4:i64 = addnw 87960930222080:i64, %2
%5:i64 = phi %0, %3, %2, %4
%6:i64 = var
%7:i64 = lshr %6, 42:i64
%8:i64 = and 7:i64, %7
%9:i64 = add %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %0, %4, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 2
%2:i32 = var (0000000000000000000000000xxxxxxx) (n)
%3:i32 = phi %1, 0:i32, %2
%4:i32 = phi %0, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, 0:i32
%5:i16 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2292:i32, 3561:i32
%3:i32 = phi %0, 2292:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx0x) (zn)
%1:i32 = shl 1:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 0:i8
%7:i8 = phi %1, %3, %6
%8:i8 = and 1:i8, %7
%9:i1 = var
%10:i8 = zext %9
%11:i8 = or %8, %10
%12:i1 = var
%13:i8 = zext %12
%14:i8 = or %8, %13
%15:i8 = phi %0, %7, %11, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (00000xxx) (n)
%1:i8 = addnw 1:i8, %0
%2:i32 = zext %1
%3:i32 = shl 1024:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3 = block 3
%4:i8 = phi %3, 1:i8, %2, %2
%5:i8 = phi %0, 0:i8, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 16:i32
%3:i32 = and 255:i32, %2
%4 = block 2
%5:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i32 = and 255:i32, %5
%7:i32 = and 255:i32, %1
%8:i32 = phi %4, %6, %7
%9:i32 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (00000000000x0000) (n)
%1:i32 = zext %0
%2:i32 = lshrexact %1, 4:i32
%3:i32 = subnsw 975:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i80 = zext %1
%3:i80 = shlnw %2, 72:i80
%4:i80 = phi %0, 4722366482869645213696:i80, 4722366482869645213696:i80, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = trunc %0
%2:i1 = ult 80:i32, %1
%3:i32 = select %2, 0:i32, %1
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = and 15:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = and 15:i32, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = var (000000000000000000000000xxxxxxxx) (n)
%8:i32 = and 15:i32, %7
%9:i32 = addnw 1:i32, %8
%10:i32 = var (000000000000000000000000xxxxxxxx) (n)
%11:i32 = and 15:i32, %10
%12:i32 = addnw 1:i32, %11
%13:i32 = phi %0, 0:i32, 0:i32, %3, 0:i32, %6, %9, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%2:i32 = sub %0, %1
%3:i32 = and 1:i32, %2
%4:i1 = var
%5:i32 = zext %4
%6:i32 = or %3, %5
%7:i32 = lshr %2, 1:i32
%8:i32 = addnw %6, %7
infer %8

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = var
%6:i8 = and 1:i8, %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = or %6, %8
%10:i8 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %0, 0:i8, %2, %4, 0:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %3, %5, %2
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = addnw 3:i32, %2
%4:i32 = addnw 2:i32, %2
%5:i32 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = subnsw 2:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = zext %1
%3:i64 = urem %0, %2
%4:i32 = trunc %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i72 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000)
%2:i72 = and 67108864:i72, %1
%3:i72 = xor 67108864:i72, %2
%4:i72 = phi %0, 0:i72, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%2:i64 = addnsw 4294967293:i64, %1
%3:i64 = and 4294967293:i64, %2
%4:i64 = lshr %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1 = block 4
%2:i32 = phi %1, 4:i32, 1:i32, 1:i32, 1:i32
%3:i32 = var
%4:i32 = mul %2, %3
%5:i32 = add %0, %4
%6:i32 = addnsw 4294967295:i32, %2
%7:i32 = and %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = phi %0, 4:i32, 3:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2559:i32, 2906:i32
%4:i32 = select %2, 2906:i32, 2559:i32
%5:i32 = phi %1, %3, %4
%6 = block 2
%7:i1 = var
%8:i32 = select %7, 91:i32, 533:i32
%9:i32 = select %7, 533:i32, 91:i32
%10:i32 = phi %6, %8, %9
%11:i32 = phi %0, 0:i32, 0:i32, 2603:i32, 2742:i32, %5, 0:i32, 164:i32, 323:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 2:i8, %1
%3:i8 = addnw 43:i8, %2
%4:i8 = phi %0, 45:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = lshr 128:i32, %1
%3:i64 = sext %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000xxx1x) (zn)
%1:i32 = shl 1:i32, %0
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 66:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = phi %1, %2, 4:i32
%4:i32 = phi %0, 4:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 4:i32, 1:i32, 1:i32, 1:i32
%2:i32 = var (00000000000000000000000000001x00) (zn)
%3:i32 = shl 1:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
%5:i32 = mulnsw %1, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i80 = zext %1
%3:i80 = shlnw %2, 73:i80
%4:i80 = phi %0, 9444732965739290427392:i80, 9444732965739290427392:i80, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 1:i8, %2
%4:i8 = phi %0, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 302:i32, 20:i32
%3:i1 = var
%4:i32 = select %3, 219:i32, 8:i32
%5:i32 = select %3, 310:i32, 20:i32
%6:i32 = select %1, %4, %5
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = lshr 128:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = and 15:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = and 15:i32, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = var (000000000000000000000000xxxxxxxx) (n)
%8:i32 = and 15:i32, %7
%9:i32 = addnw 1:i32, %8
%10:i32 = phi %0, %3, 0:i32, 0:i32, %6, %6, 0:i32, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 4:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000000000000000000xxxxxxxxxxxx) (n)
%1:i64 = var (000000000000000000000000000000000000000000000000xxxx000000000000) (n)
%2:i64 = or %0, %1
%3:i32 = var (000000000000000000000000000x0000) (n)
%4:i64 = zext %3
%5:i64 = shl %2, %4
%6:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%7:i32 = var (000000000000000000000000000x0000) (n)
%8:i32 = shl %6, %7
%9:i64 = zext %8
%10:i64 = or %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (zn)
%4:i32 = phi %1, 0:i32, %3
%5:i32 = addnsw 2:i32, %4
%6:i32 = phi %0, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = shlnuw %0, 32:i64
%2:i32 = var
%3:i64 = zext %2
%4:i64 = or %1, %3
%5:i32 = var
%6:i64 = zext %5
%7:i64 = urem %4, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i8 = var (0000000x) (n)
%3:i8 = or %1, %2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000xxx) (zn)
%1:i32 = shl 16:i32, %0
%2:i32 = addnw 65520:i32, %1
%3:i16 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000x0000) (n)
%2:i32 = var (0000000000000000000000000000xxxx) (n)
%3:i32 = or %1, %2
%4:i8 = trunc %3
%5:i8 = var
%6:i8 = and 7:i8, %5
%7:i8 = var (xxxxx000)
%8:i8 = and 8:i8, %7
%9:i8 = or %6, %8
%10:i8 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000x0x) (zn)
%1:i32 = var (00000000000000000000000000001xx0) (zn)
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = mulnsw %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i80 = zext %1
%3:i80 = shlnw %2, 69:i80
%4:i80 = phi %0, 590295810358705651712:i80, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 64:i32, %0
%2:i32 = shl 1:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000xxx) (zn)
%1:i32 = var (0000000000000000000000000000xx0x) (zn)
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = mulnsw %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 2:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32
%4:i32 = shlnsw %3, 28:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000000000000xxxx000) (n)
%2:i32 = lshrexact %1, 3:i32
%3:i8 = var (000x0000) (n)
%4:i32 = zext %3
%5:i32 = or %2, %4
%6:i8 = var (0xxxx000) (n)
%7:i32 = zext %6
%8:i32 = lshrexact %7, 3:i32
%9:i8 = var (0xxxx000) (n)
%10:i32 = zext %9
%11:i32 = lshrexact %10, 3:i32
%12:i8 = var (0xxxx000) (n)
%13:i32 = zext %12
%14:i32 = lshrexact %13, 3:i32
%15:i32 = phi %0, %5, %8, %11, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, %3, 0:i64
%5:i64 = phi %0, 0:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 28
%1:i32 = phi %0, 1:i32, 4:i32, 16:i32, 8:i32, 2:i32, 1:i32, 16:i32, 8:i32, 4:i32, 2:i32, 1:i32, 4:i32, 8:i32, 4:i32, 2:i32, 2:i32, 1:i32, 1:i32, 2:i32, 1:i32, 16:i32, 8:i32, 4:i32, 2:i32, 1:i32, 4:i32, 8:i32, 8:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 2:i32, 1:i32, 0:i32, 0:i32
%2:i32 = shlnuw 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xxx0) (n)
%1:i32 = shl 1:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 268435456:i32, 536870912:i32, 805306368:i32, 1073741824:i32, 1342177280:i32, 1610612736:i32
%3:i32 = var
%4:i32 = and 268435455:i32, %3
%5:i32 = or %2, %4
%6:i32 = var
%7:i32 = and 268435455:i32, %6
%8:i32 = phi %0, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = shl %0, 1:i32
%2:i32 = udiv 128:i32, %1
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = or %0, %1
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = xor %3, %4
%6:i32 = or %2, %5
%7:i8 = trunc %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var (00000000000000000000000000xxxx00) (zn)
%2:i32 = addnw 8:i32, %1
%3:i64 = zext %2
%4:i64 = udiv %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2
%4:i32 = addnsw 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx0x) (zn)
%1:i32 = shl 1:i32, %0
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000001x0) (zn)
%1:i32 = addnsw 4294967294:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 13:i32, 12:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000xxxxx000xxxxx000xxxxx000xxxxx) (n)
%1:i64 = var (000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx000xxxxx) (n)
%2:i64 = addnw %0, %1
%3:i32 = trunc %2
%4:i32 = lshr %3, 16:i32
%5:i32 = add %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 1:i64, 0:i64
%3:i64 = or 2:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = or 4:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i24 = var
%1:i24 = and 255:i24, %0
%2:i24 = xor 255:i24, %1
%3:i24 = lshr %0, 16:i24
%4:i24 = udiv %2, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xxx0) (n)
%1:i32 = shl 1:i32, %0
%2:i32 = addnsw 4294967295:i32, %1
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = subnsw 0:i32, %3
%5:i32 = and %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

  br i1 %tmp0, label %cont0, laInl
%out
%0 = block 4
%1:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %3, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 16
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 2:i32, 2:i32, 1:i32, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2, %2, 0:i32, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%2:i32 = lshr %1, 3:i32
%3:i32 = addnw 536870911:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, 1:i8, %2
%5:i8 = phi %0, %2, %4
%6:i8 = shlnsw %5, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32
%3 = block 3
%4:i32 = var (0000000000000000000000000000001x) (zn)
%5:i32 = var (00000000000000000000000000000x0x) (n)
%6:i32 = phi %3, %4, %4, %5
%7:i32 = phi %0, %2, %6, 0:i32
%8:i32 = or 32:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i32 = ctlz %1
%3:i32 = addnw 1:i32, %2
%4:i32 = var
%5:i32 = xor 4294967295:i32, %4
%6:i32 = ctlz %5
%7:i32 = phi %0, 33:i32, %3, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, 0:i64, %3, 0:i64, 0:i64
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = select %1, %2, %3
%5:i32 = addnw 1:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 1:i32, 2:i32
%5:i32 = select %3, 2:i32, 1:i32
%6:i32 = phi %1, 0:i32, 3:i32, %4, %5
%7:i32 = phi %0, 1:i32, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = xor 1:i32, %2
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = xor 1:i32, %5
%7:i32 = phi %4, 1:i32, %6
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = select %1, 34:i32, 32:i32
%3:i32 = or 12:i32, %2
%4:i32 = or 4:i32, %2
%5:i32 = phi %0, %2, %3, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i24 = var (0000000000000000xxxxxxx1) (zn)
%6:i1 = eq 5:i24, %5
%7:i8 = zext %6
%8:i8 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i128 = var (000000000000000000000000000000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%2:i128 = lshr %1, 64:i128
%3:i64 = trunc %2
%4:i64 = phi %0, 0:i64, 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (00000000000000000000000x000x0001) (zn)
%3:i32 = xor 260:i32, %2
%4 = block 2
%5:i1 = var
%6:i32 = select %5, 17:i32, 1:i32
%7:i32 = phi %1, %3, %6
%8:i32 = or 2:i32, %7
%9:i32 = phi %0, %7, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = var
%3:i32 = lshr %2, 8:i32
%4:i32 = phi %1, %3, 2:i32, 4:i32
%5:i32 = phi %0, %4, %3, %3, %3, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, %2
%4:i8 = var (0000000x) (n)
%5:i8 = or %3, %4
%6:i8 = phi %0, %3, %5
%7:i1 = var
%8:i1 = xor 1:i1, %7
%9:i8 = zext %8
%10:i8 = or %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2
%4:i8 = select %3, 2:i8, 1:i8
%5:i8 = var (0000000x) (n)
%6:i8 = addnw 1:i8, %5
%7:i8 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, 1:i8, %2
%5:i8 = phi %0, %2, %2, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 4
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8, 0:i8
%4 = block 6
%5:i8 = phi %4, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8
%6:i8 = phi %1, 0:i8, 0:i8, 0:i8, %3, %5, 0:i8
%7:i8 = phi %0, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 36:i32, 35:i32, 37:i32, 38:i32, 40:i32, 39:i32, 43:i32
%3:i32 = phi %0, 36:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = shlnw %1, 3:i64
%3:i64 = addnw 368:i64, %2
%4:i64 = phi %0, %3, 48:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = cttz %1
%3:i32 = phi %0, %2, 32:i32
%4:i32 = shl 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8
%3 = block 6
%4:i8 = phi %3, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 0:i32, 2:i32
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2 = block 4
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8, 0:i8
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = select %1, 0:i32, 3035:i32
%3:i1 = var
%4:i32 = select %3, 0:i32, 3035:i32
%5 = block 4
%6:i32 = var (0000000000000000000010111xxxxxxx) (zn)
%7:i32 = phi %5, 0:i32, %6, 2970:i32, 3035:i32
%8:i32 = phi %0, %2, %4, %7
%9:i1 = ne 0:i32, %8
%10:i32 = var
%11:i32 = var
%12:i1 = ult %10, %11
%13:i1 = and %9, %12
%14:i32 = select %13, 3035:i32, %8
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000001x) (zn)
%1:i32 = addnsw 4294967295:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var
%2:i64 = zext %1
%3:i64 = add %0, %2
%4:i64 = add 18446744073709551615:i64, %3
%5:i64 = urem %4, %2
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var
%3:i1 = eq %1, %2
%4:i32 = var
%5:i32 = and 268435455:i32, %4
%6:i32 = select %3, 3:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i32 = trunc %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000000xxx) (n)
%2:i32 = phi %0, %1, 4294967295:i32
%3:i64 = zext %2
%4:i64 = lshr 232:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3 = block 5
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnw 3:i32, %5
%7:i32 = addnw 2:i32, %5
%8:i32 = phi %0, %6, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 4:i32, 1:i32
%4 = block 15
%5:i32 = var (00000000000000000000000000000x00) (n)
%6:i32 = phi %4, %5, 0:i32, 4:i32, 2:i32, 3:i32, 0:i32, 4:i32, 4:i32, 4:i32, 4:i32, 4:i32, 4:i32, 4:i32, 2:i32, 3:i32
%7:i32 = phi %1, %3, %6, 0:i32
%8:i1 = var
%9:i32 = select %8, 0:i32, 3:i32
%10:i32 = phi %0, %7, 0:i32, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32, 1:i32
%6:i32 = phi %1, %5, 1:i32, 1:i32
%7:i32 = phi %0, %6, 1:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 1:i1, %2
%4:i1 = var
%5:i32 = select %4, 246:i32, 86:i32
%6:i32 = select %4, 276:i32, 116:i32
%7:i32 = select %3, %5, %6
%8:i32 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (0000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = and 524280:i64, %1
%3:i64 = addnw 72:i64, %2
%4:i64 = phi %0, %3, 176:i64, 96:i64, 88:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2:i8 = var (0000000x) (n)
%3:i8 = xor 1:i8, %2
%4:i8 = phi %0, %1, %3, 2:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, %2, 1:i8
%5:i8 = phi %0, %2, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = shlnw %2, 3:i32
%4:i32 = subnsw 0:i32, %2
%5:i32 = var (000000000000000000000000000000xx) (n)
%6:i32 = shl 4:i32, %5
%7:i32 = and %4, %6
%8:i32 = phi %0, %3, %7, 16:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = phi %1, 4096:i32, 8192:i32
%3:i32 = phi %0, %2, 4096:i32, 8192:i32, 4096:i32, 8192:i32, 4096:i32, 4096:i32, 8192:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i1 = slt %1, 4294967293:i32
%3:i32 = sdiv %1, 4:i32
%4:i32 = subnsw 0:i32, %3
%5:i32 = select %2, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 7
%2:i1 = var
%3:i32 = select %2, 37:i32, 41:i32
%4:i32 = select %2, 36:i32, 40:i32
%5:i32 = select %2, 35:i32, 39:i32
%6:i32 = select %2, 34:i32, 38:i32
%7:i32 = phi %1, 33:i32, %3, %4, %5, %6, 32:i32, 32:i32
%8:i8 = var (0000x000) (n)
%9:i1 = ne 0:i8, %8
%10:i32 = select %9, %7, 38:i32
%11:i8 = var (0000x000) (n)
%12:i1 = ne 0:i8, %11
%13:i32 = select %12, 39:i32, %7
%14:i8 = var (0000x000) (n)
%15:i1 = ne 0:i8, %14
%16:i32 = select %15, %7, 41:i32
%17:i8 = var (0000x000) (n)
%18:i1 = ne 0:i8, %17
%19:i32 = select %18, 40:i32, %7
%20:i32 = phi %0, %7, %7, %10, 34:i32, %13, %16, 37:i32, %19, %7, %7, %7
infer %20

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1179:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000x000000000000000000000000000) (n)
%2:i32 = lshrexact %1, 27:i32
%3:i8 = trunc %2
%4:i8 = phi %0, %3, %3, 0:i8, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = phi %2, 0:i32, %3
%5:i32 = phi %1, 1:i32, %4, %4, %4, %4, %4
%6:i32 = phi %0, 2:i32, %5, 1:i32, 1:i32, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 2:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = and 89:i32, %1
%3:i32 = addnw 2972:i32, %2
%4:i32 = and 91:i32, %1
%5:i32 = addnw 2968:i32, %4
%6:i32 = phi %0, %3, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i32 = sext %0
%2:i32 = ashr %1, 4:i32
%3:i1 = ult %2, 10:i32
%4:i32 = select %3, 48:i32, 55:i32
%5:i32 = addnsw %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, 1:i8, %3, %3
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i32 = trunc %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i64 = var (000000000000000000000x000000000000000000000000000000000000000000) (n)
%6:i64 = lshrexact %5, 42:i64
%7:i32 = trunc %6
%8:i32 = addnw %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = and 4294967295:i64, %1
%3:i64 = xor 4294967295:i64, %2
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = var (0000000000000000000000000000xxxx) (n)
%3:i1 = eq %1, %2
%4:i32 = select %3, 1:i32, 3:i32
%5:i1 = var
%6:i1 = var
%7:i1 = or %5, %6
%8:i32 = select %7, 1:i32, %4
%9:i32 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 4294967280:i32, %0
%2:i32 = and 4293918720:i32, %1
%3:i32 = sub %1, %2
%4 = block 2
%5:i32 = var (000000000000000000000000xxxxxxxx) (n)
%6:i32 = shlnw %5, 4:i32
%7:i32 = var
%8:i32 = var
%9:i32 = add %7, %8
%10:i32 = phi %4, %6, %9
%11:i32 = urem %3, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = var (00000000000000000000x0xxxx0110xx) (zn)
%4:i32 = select %2, 2967:i32, %3
%5:i32 = phi %1, 2559:i32, 2970:i32, %4
%6:i1 = var
%7:i1 = var
%8:i1 = and %6, %7
%9:i1 = var
%10:i32 = select %9, 3059:i32, 533:i32
%11:i32 = select %8, 3058:i32, %10
%12:i32 = phi %0, %5, 2906:i32, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5 = block 2
%6:i8 = var (0000000x) (n)
%7 = block 2
%8:i8 = phi %7, %4, 0:i8
%9:i8 = phi %5, %6, %8
%10:i8 = phi %1, %4, %9
%11:i8 = phi %0, %10, %8
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = var
%3:i32 = lshr %2, 8:i32
%4:i32 = phi %1, %3, 4:i32
%5:i32 = phi %0, %4, %3, %3, %3, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 8:i32, %0
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = var (000000000000000000000000000000x0) (n)
%4:i32 = or %2, %3
%5:i32 = or %1, %4
%6:i8 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 0:i32, 2:i32
%4:i32 = or 1:i32, %3
%5:i32 = phi %1, %3, %4
%6:i32 = or 4:i32, %5
%7:i32 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = var
%3:i32 = select %0, %1, %2
%4:i64 = zext %3
%5:i64 = var
%6:i64 = udiv %4, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = sext %0
%2:i64 = lshr 35184372088830:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 2:i32
%5:i32 = phi %0, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = cttz %1
%3:i32 = phi %0, %2, 32:i32
%4:i32 = shl 12:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %4
%6:i8 = phi %0, %1, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, %3, 1:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 18
%1 = block 2
%2:i64 = phi %1, 0:i64, 4294967296:i64
%3 = block 2
%4:i64 = phi %3, 0:i64, 4294967296:i64
%5 = block 2
%6:i64 = phi %5, 0:i64, 4294967296:i64
%7 = block 2
%8:i64 = phi %7, 0:i64, 4294967296:i64
%9:i64 = phi %0, %2, %4, %6, %8, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 2:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = or 12:i64, %2
%4:i64 = phi %0, %3, 12:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 2
%2:i8 = var (0000xxxx) (n)
%3:i8 = xor 15:i8, %2
%4:i8 = phi %1, %3, 15:i8
%5 = block 2
%6:i8 = var (0000xxxx) (n)
%7:i8 = xor 15:i8, %6
%8:i8 = phi %5, %7, 15:i8
%9:i8 = var
%10:i8 = and 15:i8, %9
%11:i8 = xor 15:i8, %10
%12:i8 = var
%13:i8 = and 15:i8, %12
%14:i8 = xor 15:i8, %13
%15 = block 2
%16:i8 = var (0000xxxx) (n)
%17:i8 = xor 15:i8, %16
%18:i8 = phi %15, %17, 15:i8
%19:i8 = var
%20:i8 = and 15:i8, %19
%21:i8 = xor 15:i8, %20
%22:i8 = var
%23:i8 = and 15:i8, %22
%24:i8 = xor 15:i8, %23
%25 = block 2
%26:i8 = var (0000xxxx) (n)
%27:i8 = xor 15:i8, %26
%28:i8 = phi %25, %27, 15:i8
%29 = block 2
%30:i8 = var (0000xxxx) (n)
%31:i8 = xor 15:i8, %30
%32:i8 = phi %29, %31, 15:i8
%33 = block 2
%34:i8 = var (0000xxxx) (n)
%35:i8 = xor 15:i8, %34
%36:i8 = phi %33, %35, 15:i8
%37:i8 = phi %0, %4, %8, %11, %14, %18, %21, %24, %28, 15:i8, %32, %32, %36, %36, %36
infer %37

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4, %4, %4, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i8 = var (0000000x) (n)
%2:i8 = phi %0, 0:i8, 1:i8, 1:i8, 0:i8, 0:i8, %1
%3:i1 = eq 0:i8, %2
%4 = block 2
%5:i1 = var
%6 = block 6
%7:i8 = phi %6, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%8:i8 = select %5, %7, 0:i8
%9:i8 = phi %4, %8, %7
%10:i8 = select %3, %9, 0:i8
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i64 = zext %3
%5:i64 = phi %1, %4, %4
%6:i64 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var
%2:i32 = and 8191:i32, %1
%3:i1 = ult %2, 27:i32
%4:i32 = select %3, %2, 0:i32
%5:i32 = phi %0, %4, 0:i32, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 72:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var
%2:i1 = ult %1, 4:i32
%3:i8 = zext %2
%4 = block 2
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %4, %6, %3
%8:i8 = phi %0, %3, %7, 0:i8, %6, 0:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 7
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = addnsw 18446744073709551615:i64, %0
%2:i64 = ctlz %1
%3:i64 = subnsw 64:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%2:i1 = eq 0:i64, %1
%3:i64 = var
%4:i64 = lshr %3, 3:i64
%5:i64 = select %2, %4, 0:i64
%6:i64 = phi %0, 0:i64, 0:i64, 0:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 1586:i32, %0
%2:i32 = select %1, 64:i32, 32:i32
%3:i32 = subnsw 64:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3 = block 6
%4:i8 = phi %3, 1:i8, 0:i8, 1:i8, 0:i8, 0:i8, 1:i8
%5:i8 = select %2, %4, 0:i8
%6:i8 = phi %1, %5, %4
%7 = block 6
%8:i1 = var
%9:i8 = select %8, 0:i8, %6
%10:i8 = phi %7, %6, 0:i8, 0:i8, %6, %6, %9
%11:i8 = phi %0, %6, %10, %6
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var
%2:i32 = zext %1
%3 = block 17
%4:i16 = var
%5:i32 = zext %4
%6 = block 2
%7:i1 = var
%8:i32 = select %7, 2415:i32, 2424:i32
%9:i32 = select %7, 2413:i32, 2422:i32
%10:i32 = select %7, 2411:i32, 2420:i32
%11:i32 = select %7, 2409:i32, 2418:i32
%12:i32 = select %7, 114:i32, 128:i32
%13:i32 = select %7, 112:i32, 126:i32
%14:i32 = select %7, 110:i32, 124:i32
%15:i32 = select %7, 108:i32, 122:i32
%16:i32 = phi %3, %5, 2425:i32, %8, %9, 2423:i32, 2421:i32, %10, %11, 2419:i32, 129:i32, %12, %13, 127:i32, 125:i32, %14, %15, 123:i32
%17:i32 = phi %0, %2, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 4
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, %5, 1:i8, %5, %5
%7:i8 = phi %2, 1:i8, %6, %6
%8:i8 = phi %1, %7, %6, %6
%9:i8 = phi %0, %8, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 4:i32, 0:i32
%3:i32 = phi %0, 8:i32, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i16 = var (00000000000000xx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000xxxxxxxxxxxxx) (n)
%1:i64 = and 1:i64, %0
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000xxxx) (n)
%3:i64 = shlnw %2, 1:i64
%4:i64 = or %1, %3
%5:i64 = shl %4, 1:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 12:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var
%2:i32 = zext %1
%3:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%4:i32 = and 16128:i32, %3
%5:i8 = var
%6:i32 = zext %5
%7:i32 = or %4, %6
%8:i32 = var (000xxxxxxxxxxxxx0000000000000000) (n)
%9:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%10:i32 = or %8, %9
%11:i8 = var
%12:i32 = zext %11
%13:i32 = or %10, %12
%14:i32 = phi %0, %2, %7, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 16
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 2:i8, 2:i8, 2:i8, 2:i8, 2:i8, 2:i8, 2:i8, 2:i8, 0:i8, 0:i8, 0:i8, 0:i8, 3:i8, %3
%5:i8 = phi %0, %4, 3:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 4:i32, 2:i32, 4:i32, 2:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = shl %1, %2
%4 = block 2
%5:i32 = phi %4, %3, 8:i32
%6:i32 = phi %0, %3, %5, %3, %3, %3, %3
%7:i32 = udiv 16:i32, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000xxxx10) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000001xx10) (zn)
%5:i32 = phi %1, %2, %4
%6:i32 = addnw 2:i32, %5
%7:i32 = phi %0, %6, %5
%8:i16 = trunc %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var (00xxxxxxxxxxxxxx) (n)
%2:i16 = and 511:i16, %1
%3:i32 = var (00000000000000000000000xxxxxxxxx) (n)
%4:i16 = trunc %3
%5:i16 = phi %0, %2, %4
%6:i16 = or 16:i16, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (000000xx) (zn)
%1:i8 = addnsw 255:i8, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 80:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 3:i32, 8:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000xxxxxx) (n)
%2:i32 = and 48:i32, %1
%3:i32 = xor 48:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%2:i32 = and 2:i32, %1
%3:i32 = xor 3:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = phi %1, 0:i32, 26:i32
%3 = block 3
%4:i32 = phi %3, 0:i32, 0:i32, 28:i32
%5 = block 3
%6:i32 = phi %5, 0:i32, 0:i32, 27:i32
%7 = block 3
%8:i32 = phi %7, 0:i32, 0:i32, 26:i32
%9 = block 3
%10:i32 = phi %9, 0:i32, 0:i32, 13:i32
%11:i32 = phi %0, %2, %4, %6, %8, %10, 0:i32, 0:i32, 11:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = phi %0, 7:i32, 0:i32, 8:i32
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = var (00000000000000000000000000x00000) (n)
%3:i32 = var (00000000000000000000000010x00000) (zn)
%4:i32 = select %1, %2, %3
%5:i32 = or 18:i32, %4
%6:i32 = or 3:i32, %4
%7:i32 = or 2:i32, %4
%8:i32 = phi %0, %5, %6, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 4294967286:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 4208:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = mulnw 48:i64, %1
%3:i64 = addnw 96:i64, %2
%4:i64 = phi %0, %3, 96:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 3:i32, 8:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, %2
%4:i32 = shl 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 5
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8
%5 = block 2
%6:i8 = phi %5, 0:i8, %4
%7:i8 = phi %0, %4, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, 0:i32, %3, 3:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, %4, 1:i32
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 1:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 6
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4 = block 2
%5:i8 = phi %4, 1:i8, 0:i8
%6:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3, %5
%7 = block 2
%8:i8 = phi %7, 0:i8, 1:i8
%9 = block 2
%10:i8 = phi %9, 0:i8, 1:i8
%11 = block 2
%12:i8 = phi %11, 0:i8, 1:i8
%13 = block 2
%14:i8 = phi %13, 0:i8, 1:i8
%15 = block 2
%16:i8 = phi %15, 0:i8, 1:i8
%17:i8 = xor 1:i8, %16
%18:i8 = phi %0, %6, 1:i8, 0:i8, 0:i8, %8, %10, 0:i8, 0:i8, %12, %14, %16, %17, %16, %16
infer %18

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = addnsw 4294967295:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = addnsw 4294967294:i32, %0
%4:i1 = ult %1, %3
%5:i1 = and %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 8
%2:i32 = phi %1, 8:i32, 72:i32, 69:i32, 5:i32, 2:i32, 1:i32, 1:i32, 1:i32
%3:i32 = xor 13:i32, %2
%4:i1 = var
%5:i32 = var (0000000000000000000000000x00xxxx) (n)
%6:i32 = select %4, 0:i32, %5
%7:i32 = phi %0, %2, %3, %6
%8:i32 = and 12:i32, %7
%9:i1 = eq 0:i32, %8
%10:i32 = xor 12:i32, %7
%11:i32 = select %9, %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1 = block 2
%2:i32 = var
%3:i32 = lshr %2, 3:i32
%4:i64 = zext %3
%5:i64 = urem %0, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 2:i32, 0:i32
%4:i1 = var
%5:i32 = zext %4
%6:i32 = phi %1, %3, 0:i32, %5
%7:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (zp)
%2:i32 = phi %0, %1, 8:i32
%3:i32 = var
%4:i1 = ult %2, %3
%5:i32 = select %4, %2, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i8 = var (000000x0) (n)
%4:i32 = zext %3
%5:i32 = select %2, 4:i32, %4
%6:i1 = var
%7:i32 = select %6, 4:i32, %4
%8:i32 = select %2, 6:i32, %7
%9:i32 = phi %0, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = addnsw 18446744073709551615:i64, %2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = addnsw %3, %5
%7:i64 = urem %6, %2
%8:i64 = subnsw %6, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 0:i32, 3826:i32, 0:i32
%3:i32 = phi %0, 0:i32, 3833:i32, 3819:i32, 3823:i32, 3830:i32, %2, %2, %2, %2, %2, %2, %2, 0:i32, 0:i32, 0:i32
%4:i1 = var
%5:i32 = select %4, 4079:i32, 4078:i32
%6:i1 = var
%7:i32 = select %6, 4077:i32, 0:i32
%8:i1 = var
%9:i32 = select %8, 0:i32, 4075:i32
%10:i32 = phi %0, %5, 4070:i32, 4058:i32, 4059:i32, 4067:i32, %7, 4074:i32, 4074:i32, 4074:i32, 4074:i32, %7, 4076:i32, 0:i32, 0:i32, %9
%11:i32 = or %3, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i64 = phi %2, 1:i64, 0:i64
%4:i64 = phi %1, 2:i64, %3
%5:i64 = phi %0, 4:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i64 = phi %1, 15:i64, 15:i64, 12:i64, 12:i64, 19:i64, 19:i64
%3:i64 = phi %0, 15:i64, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = ashr %0, 31:i32
%2:i32 = addnsw 16:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 10:i64, 13:i64
%3:i64 = phi %0, 18:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i16 = var
%3:i1 = eq 86:i16, %2
%4:i1 = var
%5:i32 = select %4, 15:i32, 1:i32
%6:i32 = select %3, 2:i32, %5
%7:i32 = phi %0, 17:i32, 21:i32, 20:i32, 18:i32, 15:i32, %6, 14:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8, %3, %3
%5:i8 = phi %0, 1:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3 = block 6
%4:i8 = phi %3, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%5:i8 = select %2, %4, 0:i8
%6:i8 = phi %1, %5, %4
%7 = block 6
%8:i8 = var (0000000x) (n)
%9:i1 = eq 0:i8, %8
%10:i8 = select %9, %6, 0:i8
%11:i8 = phi %0, %6, %10, %6
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = phi %0, 4:i32, 3:i32, 2:i32, 1:i32, 0:i32
%2:i1 = var
%3:i32 = sext %2
%4:i32 = addnsw %1, %3
%5:i32 = addnsw 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 8
%2:i1 = var
%3:i32 = select %2, 33554432:i32, 0:i32
%4:i32 = or 536870912:i32, %3
%5:i32 = or 1342177280:i32, %3
%6:i32 = or 1073741824:i32, %3
%7:i32 = or 805306368:i32, %3
%8:i32 = or 268435456:i32, %3
%9:i32 = phi %1, %3, %3, %4, %5, %6, %7, %8, %3
%10:i32 = phi %0, %9, %9, %3
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = phi %0, %2, 0:i64, 0:i64, 4294967296:i64
%4:i32 = var
%5:i32 = var
%6:i32 = var (00000000000000000000000xxxxxxxxx) (n)
%7:i32 = var (000000000000000000000000xxxxxxxx) (n)
%8:i32 = phi %0, %4, %5, %6, %7
%9:i64 = zext %8
%10:i64 = or %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 68:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 4
%3:i32 = phi %2, 0:i32, 0:i32, 1:i32, 1:i32
%4:i32 = or 2:i32, %3
%5:i32 = phi %1, %3, %3, %4, %4
%6:i32 = or 4:i32, %5
%7:i32 = phi %0, %5, %5, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1:i128 = var (000000000000000000000000000000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%2:i128 = lshr %1, 64:i128
%3:i64 = trunc %2
%4:i64 = phi %0, 0:i64, 0:i64, 0:i64, 0:i64, %3, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%3:i32 = and 2:i32, %2
%4:i32 = phi %1, 2:i32, 2:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 11
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, %3, 2751:i32, 2893:i32, 2879:i32, 2900:i32, 2668:i32, 2676:i32, 2644:i32, 2660:i32, 2684:i32
%5:i32 = phi %0, %4, 0:i32, 2750:i32, 2892:i32, 2878:i32, 2899:i32, 2667:i32, 2675:i32, 2643:i32, 2659:i32, 2683:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 921:i32, 920:i32, 1743:i32
%3:i32 = var
%4:i1 = eq 917:i32, %3
%5:i32 = select %4, 920:i32, 921:i32
%6:i32 = var
%7:i1 = eq 917:i32, %6
%8:i32 = select %7, 921:i32, 920:i32
%9:i32 = phi %0, %2, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000000x0) (n)
%2:i32 = lshrexact %1, 1:i32
%3:i32 = xor 3:i32, %2
%4:i32 = phi %0, %3, 4:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i32 = zext %0
%2:i32 = subnsw 70:i32, %1
%3:i1 = var
%4:i32 = var
%5:i32 = select %3, %4, 4:i32
%6:i32 = lshr %5, 2:i32
%7:i32 = urem %2, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var (000000000000000000000000000000xx) (n)
%2:i32 = shl 1:i32, %1
%3:i32 = shlnw %2, 3:i32
%4:i32 = or 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3 = block 4
%4:i32 = phi %3, 1:i32, 0:i32, 0:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = ctlz %1
%3:i32 = xor 31:i32, %2
%4:i32 = phi %0, 2:i32, 1:i32, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = phi %0, 0:i8, 1:i8, 1:i8
%2:i1 = eq 0:i8, %1
%3 = block 6
%4 = block 2
%5:i8 = phi %4, 0:i8, 1:i8
%6 = block 2
%7:i8 = phi %6, 0:i8, 1:i8
%8 = block 2
%9:i8 = phi %8, 0:i8, 1:i8
%10 = block 2
%11:i8 = phi %10, 0:i8, 1:i8
%12:i8 = phi %3, %5, %7, %9, %11, 0:i8, 0:i8
%13:i8 = select %2, %12, 0:i8
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3
%5:i1 = var
%6:i8 = select %5, 1:i8, %4
%7:i8 = phi %1, 0:i8, %4, %6
%8:i1 = var
%9:i1 = var
%10:i1 = and %8, %9
%11:i8 = select %10, %7, 0:i8
%12:i8 = phi %0, %7, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = subnsw 2:i32, %2
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i64 = var
%2:i1 = ne 0:i64, %1
%3:i32 = select %2, 33554432:i32, 0:i32
%4:i32 = or 536870912:i32, %3
%5:i32 = or 1342177280:i32, %3
%6:i32 = or 1073741824:i32, %3
%7:i32 = or 805306368:i32, %3
%8:i32 = or 268435456:i32, %3
%9:i32 = phi %0, %3, %3, %4, %5, %6, %7, %8, %3
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 16
%2:i1 = var
%3:i8 = select %2, 0:i8, 64:i8
%4:i8 = phi %1, 64:i8, 64:i8, 0:i8, 32:i8, 0:i8, 32:i8, 0:i8, 32:i8, 0:i8, 32:i8, 64:i8, 64:i8, 64:i8, 64:i8, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i64 = zext %3
%5:i64 = phi %1, 9:i64, %4
%6:i64 = phi %0, 22:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 3:i32
%3:i32 = phi %0, 3:i32, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 14:i64, 13:i64
%3:i64 = phi %0, %2, 12:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %2, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 13:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i128 = var (00000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000) (n)
%1:i64 = trunc %0
%2:i64 = lshrexact %1, 53:i64
%3:i64 = subnsw 5:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i1 = var
%3:i32 = var (00000000000000000000000011xx00xx) (zn)
%4:i32 = var (000000000000000000000000xx0000xx) (zn)
%5:i32 = select %2, %3, %4
%6:i1 = var
%7:i32 = var (000000000000000000000000xx000000) (znp)
%8:i32 = select %6, %7, 0:i32
%9:i32 = phi %0, 0:i32, %5, %8
%10:i32 = var
%11:i1 = eq 32:i32, %10
%12:i32 = select %11, 256:i32, 512:i32
%13:i32 = or %9, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 0:i32, 3826:i32, 0:i32
%3:i32 = phi %0, 0:i32, 3833:i32, 3819:i32, 3823:i32, 3830:i32, %2, %2, %2, %2, %2, %2, %2, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2 = block 2
%3:i32 = var (00000000000000000000000x000x0100) (zn)
%4:i32 = var (000000000000000000000000000x0000) (n)
%5:i32 = phi %2, %3, %4
%6:i32 = or 32:i32, %5
%7:i32 = select %1, %6, %5
%8:i32 = or 2:i32, %7
%9:i32 = phi %0, %7, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 3:i32, 3:i32, 0:i32, 0:i32, 2:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = var
%3:i32 = select %0, %1, %2
%4:i1 = ult 16:i32, %3
%5:i32 = select %4, %3, 16:i32
%6:i1 = eq 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i64 = phi %1, 0:i64, 4294967296:i64
%3 = block 2
%4:i64 = phi %3, 0:i64, 4294967296:i64
%5 = block 2
%6:i64 = phi %5, 0:i64, 4294967296:i64
%7 = block 2
%8:i64 = phi %7, 0:i64, 4294967296:i64
%9:i64 = phi %0, 0:i64, %2, %4, 0:i64, 0:i64, %6, %8, 0:i64
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = lshr %1, 3:i32
%3:i32 = and 64:i32, %2
%4:i32 = var
%5:i1 = eq 1:i32, %4
%6:i32 = or 1024:i32, %3
%7:i32 = select %5, %6, %3
%8:i32 = phi %0, %3, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = lshr %1, 24:i32
%3:i32 = and 15:i32, %2
%4:i64 = var
%5:i64 = lshr %4, 60:i64
%6:i32 = trunc %5
%7:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%8:i32 = trunc %7
%9:i32 = and 15:i32, %8
%10:i32 = phi %0, %3, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000000000x000000000) (n)
%2:i32 = addnw 512:i32, %1
%3:i32 = var (00000000000000000000000x00000000) (n)
%4:i32 = xor 256:i32, %3
%5:i32 = or %2, %4
%6:i32 = phi %0, %5, %4, %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = addnsw 18446744073709551615:i64, %0
%2:i64 = ctlz %1
%3:i64 = subnsw 64:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1 = block 4
%2:i32 = var (00000000000000000000000000000xxx) (zn)
%3:i32 = shl 65536:i32, %2
%4:i32 = addnsw 4294901760:i32, %3
%5:i32 = and %0, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 5
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, 1:i8, %3, 1:i8, 1:i8, 1:i8
%5:i8 = phi %0, %4, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8
%4:i8 = phi %0, 0:i8, %3
%5:i8 = shlnsw %4, 3:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i1 = eq 0:i8, %2
%4 = block 6
%5:i8 = phi %4, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6:i8 = select %3, %5, 0:i8
%7:i8 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 0:i32, 2:i32
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, %2, %3
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%2:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5:i32 = var (000000000000000000000000xxxxxx00) (n)
%6:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%7:i32 = or %5, %6
%8:i32 = or 327680:i32, %7
%9:i32 = phi %0, %4, %4, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = or 4:i32, %2
%4:i32 = or 8:i32, %2
%5:i32 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1135:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3 = block 3
%4:i64 = and 4294967294:i64, %2
%5:i64 = phi %3, %4, %2, %2
%6:i64 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 2:i32, 0:i32, 0:i32, 0:i32
%3 = block 4
%4:i32 = phi %3, 1:i32, 0:i32, 0:i32, 0:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000xxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 3:i32, %1
%3:i8 = var (000000xx) (n)
%4:i32 = zext %3
%5:i1 = ult %2, %4
%6:i32 = select %5, %4, %2
%7:i32 = phi %0, 3:i32, %6, %2, %2
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (z)
%2:i1 = eq %0, %1
%3:i32 = var
%4:i1 = ne 0:i32, %3
%5:i1 = or %2, %4
%6:i32 = select %5, 1:i32, %3
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 4:i32
%4:i32 = phi %0, 1:i32, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 6
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, 0:i32
%4:i32 = phi %1, %3, %3, 1:i32
%5:i32 = phi %0, %4, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000xxxxxxxxxxxxxx) (n)
%2:i16 = trunc %1
%3:i16 = and 511:i16, %2
%4:i32 = var (0000000000000000000000000000xxxx) (n)
%5:i32 = var (00000000000000000000000xxxxx0000) (n)
%6:i32 = or %4, %5
%7:i16 = trunc %6
%8:i16 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = ne 0:i64, %0
%2:i32 = var
%3:i1 = ult %2, 5:i32
%4:i1 = and %1, %3
%5 = block 3
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, 0:i8, %7
%9:i1 = var
%10:i8 = select %9, 1:i8, %8
%11:i8 = phi %5, 0:i8, %8, %10
%12:i8 = select %4, %11, 0:i8
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 4
%3 = block 8
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32, 1:i32, 1:i32
%6:i32 = phi %1, %5, 1:i32, 1:i32
%7 = block 3
%8 = block 4
%9 = block 8
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = phi %8, %10, 1:i32, 1:i32, 1:i32
%12:i32 = phi %7, %11, 1:i32, 1:i32
%13 = block 3
%14 = block 4
%15 = block 8
%16:i32 = var (0000000000000000000000000000000x) (n)
%17:i32 = phi %14, %16, 1:i32, 1:i32, 1:i32
%18:i32 = phi %13, %17, 1:i32, 1:i32
%19 = block 3
%20 = block 4
%21 = block 8
%22:i32 = var (0000000000000000000000000000000x) (n)
%23:i32 = phi %20, %22, 1:i32, 1:i32, 1:i32
%24:i32 = phi %19, %23, 1:i32, 1:i32
%25:i32 = phi %0, %6, %12, %18, %24
infer %25

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 3
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5 = block 2
%6:i8 = phi %5, 0:i8, 1:i8
%7 = block 2
%8:i8 = phi %7, 0:i8, 1:i8
%9:i8 = phi %0, %2, %4, %6, %8, 0:i8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 65:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = var
%3:i8 = lshr %2, 4:i8
%4:i8 = and 1:i8, %3
%5:i1 = var
%6:i8 = select %5, 1:i8, %4
%7:i8 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = var
%3:i32 = select %2, 1965:i32, 1972:i32
%4:i32 = select %2, 1964:i32, 1963:i32
%5:i32 = select %1, %3, %4
%6:i32 = phi %0, 1971:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, %2, %2, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i16 = var (0000000x0x000000) (znp)
%2:i16 = var (000000000000000x) (n)
%3:i16 = or %1, %2
%4:i16 = or 4:i16, %3
%5:i16 = or 2:i16, %3
%6:i16 = or 16:i16, %3
%7:i16 = phi %0, %3, %4, %5, %6
%8:i16 = or 4096:i16, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i72 = var (000000000000000000000000000000000000000000000000000000000000000000000x00) (n)
%2:i1 = eq 0:i72, %1
%3 = block 2
%4:i32 = phi %3, 3396:i32, 3398:i32
%5:i32 = select %2, %4, 3578:i32
%6:i72 = var (000000000000000000000000000000000000000000000000000000000000000000000x00) (n)
%7:i1 = eq 0:i72, %6
%8:i32 = select %7, %4, 3578:i32
%9:i32 = phi %0, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 59
%1:i8 = var
%2:i1 = eq 48:i8, %1
%3:i1 = var
%4:i32 = select %3, 35:i32, 0:i32
%5:i32 = select %2, 34:i32, %4
%6:i8 = var
%7:i1 = eq 48:i8, %6
%8:i1 = var
%9:i32 = select %8, 15:i32, 0:i32
%10:i32 = select %7, 14:i32, %9
%11:i8 = var
%12:i1 = eq 48:i8, %11
%13:i1 = var
%14:i32 = select %13, 33:i32, 0:i32
%15:i32 = select %12, 32:i32, %14
%16:i8 = var
%17:i1 = eq 48:i8, %16
%18:i1 = var
%19:i32 = select %18, 75:i32, 0:i32
%20:i32 = select %17, 74:i32, %19
%21:i8 = var
%22:i1 = eq 48:i8, %21
%23:i1 = var
%24:i32 = select %23, 77:i32, 0:i32
%25:i32 = select %22, 76:i32, %24
%26:i8 = var
%27:i1 = eq 48:i8, %26
%28:i1 = var
%29:i32 = select %28, 109:i32, 0:i32
%30:i32 = select %27, 108:i32, %29
%31:i32 = phi %0, 0:i32, 3:i32, 39:i32, 38:i32, 37:i32, 2:i32, %5, 36:i32, %10, %15, %20, %25, 4:i32, 8:i32, %30, 126:i32, 127:i32, 128:i32, 129:i32, 130:i32, 132:i32, 16:i32, 17:i32, 18:i32, 19:i32, 20:i32, 110:i32, 111:i32, 112:i32, 113:i32, 114:i32, 131:i32, 1:i32, 5:i32, 21:i32, 22:i32, 23:i32, 24:i32, 25:i32, 26:i32, 27:i32, 28:i32, 29:i32, 30:i32, 31:i32, 115:i32, 116:i32, 117:i32, 118:i32, 119:i32, 120:i32, 121:i32, 122:i32, 123:i32, 124:i32, 125:i32, 9:i32, 6:i32, 7:i32
infer %31

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 4:i64, 9:i64
%3:i64 = phi %0, 12:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (00000000000000x0) (n)
%1:i64 = zext %0
%2:i64 = lshrexact %1, 1:i64
%3:i64 = subnsw 8:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = cttz %0
%2:i32 = trunc %1
%3:i1 = ult %2, 62:i32
%4:i64 = shl 1:i64, %1
%5:i64 = select %3, %4, 4611686018427387904:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i1 = var
%3:i32 = select %2, 0:i32, 2:i32
%4:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, %3, 0:i32, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 176:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 104811045873349725:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 104811045873349725:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i8 = var (0000000x) (n)
%2:i8 = phi %0, 0:i8, 1:i8, 1:i8, 0:i8, 0:i8, %1
%3:i1 = eq 0:i8, %2
%4 = block 2
%5 = block 3
%6 = block 6
%7:i32 = phi %6, 340:i32, 340:i32, 340:i32, 340:i32, 339:i32, 339:i32
%8:i32 = phi %5, %7, 97:i32, 96:i32
%9:i32 = phi %4, %8, %7
%10:i32 = select %3, %9, 285:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2, %2, 1:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (n)
%2:i64 = and 4294967288:i64, %1
%3:i64 = or 3:i64, %2
%4:i64 = or 2:i64, %2
%5:i64 = phi %0, 1:i64, 0:i64, 4:i64, %3, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 0:i8, %4
%6:i8 = phi %0, %5, 0:i8, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000000000001xx00000) (zn)
%2:i32 = var (0000000000000000000000000x000000) (n)
%3:i32 = phi %0, %1, 128:i32, %2, 96:i32
%4:i32 = lshrexact %3, 5:i32
%5:i32 = shl 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i8 = select %2, 115:i8, 117:i8
%4:i8 = phi %1, %3, 112:i8, 102:i8
%5:i8 = phi %0, %4, 105:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 1586:i32, %0
%2:i32 = select %1, 64:i32, 32:i32
%3:i32 = addnsw 4294967280:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = lshr %2, 1:i32
%4:i32 = phi %1, %3, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 4294967295:i32, %0
%2:i1 = ult %1, 4:i32
%3:i32 = select %2, %1, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5 = block 2
%6:i1 = var
%7:i8 = zext %6
%8 = block 2
%9:i8 = phi %8, %4, 0:i8
%10:i8 = phi %5, %7, %9
%11:i8 = phi %0, %4, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %0, 1:i8, %2, %4, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 0:i32, 2:i32, 2:i32, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i32 = addnw 20:i32, %2
%4:i32 = phi %0, 24:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, %2, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i8 = xor 1:i8, %2
%4:i8 = var
%5:i8 = and 1:i8, %4
%6:i8 = xor 1:i8, %5
%7:i8 = var
%8:i8 = and 1:i8, %7
%9:i8 = xor 1:i8, %8
%10:i8 = var
%11:i8 = and 1:i8, %10
%12:i8 = xor 1:i8, %11
%13:i8 = var
%14:i8 = and 1:i8, %13
%15:i8 = xor 1:i8, %14
%16:i8 = var
%17:i8 = and 1:i8, %16
%18:i8 = xor 1:i8, %17
%19:i8 = var
%20:i8 = and 1:i8, %19
%21:i8 = xor 1:i8, %20
%22:i8 = var
%23:i8 = and 1:i8, %22
%24:i8 = xor 1:i8, %23
%25:i8 = var
%26:i8 = and 1:i8, %25
%27:i8 = xor 1:i8, %26
%28:i8 = phi %0, %3, %6, %9, 1:i8, %12, %15, %18, %21, 1:i8, %24, %24, %27, %27, %27
infer %28

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = phi %1, %2, %3
%5:i8 = xor 1:i8, %4
%6:i8 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 12
%3:i32 = var (000000000000000000000000000000x1) (zn)
%4:i32 = phi %2, %3, 3:i32, 3:i32, 3:i32, 3:i32, 2:i32, 2:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%5:i32 = phi %1, %4, 0:i32, 0:i32
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (zp)
%1:i32 = lshr %0, 1:i32
%2:i1 = ult 32:i32, %1
%3:i32 = select %2, %1, 32:i32
%4:i32 = addnuw 32:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %2, %3
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 15
%2:i32 = phi %1, 10:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1146:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 3:i32, 2:i32
%3:i32 = phi %0, %2, 2:i32, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i1 = eq %1, %2
%4:i64 = select %3, %1, 4096:i64
%5:i64 = phi %0, 4096:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 10
%3:i32 = var (0000000000000000000000000000xxxx) (n)
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, 1:i32, %4, %4, %4, %4
%6:i32 = or 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = xor 1:i32, %2
%4:i32 = phi %1, %3, 1:i32
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = xor 1:i32, %6
%8:i32 = phi %5, %7, 1:i32
%9 = block 2
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = xor 1:i32, %10
%12:i32 = phi %9, %11, 1:i32
%13 = block 2
%14:i32 = var (0000000000000000000000000000000x) (n)
%15:i32 = xor 1:i32, %14
%16 = block 2
%17:i32 = var (0000000000000000000000000000000x) (n)
%18:i32 = phi %16, 1:i32, %17
%19:i32 = phi %13, %15, %18
%20:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%21:i32 = and 1:i32, %20
%22:i32 = xor 1:i32, %21
%23 = block 2
%24:i32 = var (0000000000000000000000000000000x) (n)
%25:i32 = xor 1:i32, %24
%26:i32 = phi %23, %25, 1:i32
%27 = block 2
%28:i32 = var (0000000000000000000000000000000x) (n)
%29:i32 = xor 1:i32, %28
%30:i32 = phi %27, %29, 1:i32
%31:i32 = phi %0, %4, %8, 1:i32, 1:i32, %12, 1:i32, 1:i32, %19, 1:i32, %22, %26, %30, %30, %30
infer %31

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i128 = var (0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000) (n)
%1:i64 = trunc %0
%2:i64 = lshrexact %1, 33:i64
%3:i64 = subnsw 5:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, 3:i32, 1:i32, 4:i32, 3:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 16:i32, 8:i32
%3 = block 5
%4:i32 = phi %3, 2:i32, 1:i32, 4:i32, 4:i32, 4:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i1 = eq 0:i8, %2
%4 = block 6
%5:i8 = phi %4, 1:i8, 0:i8, 1:i8, 0:i8, 0:i8, 1:i8
%6:i8 = select %3, %5, 0:i8
%7:i8 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i32 = phi %1, 2:i32, 3:i32, 3:i32, 3:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 3:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = zext %1
%3:i32 = shlnw %2, 8:i32
%4:i32 = phi %0, 512:i32, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, 1:i32, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 6
%2 = block 2
%3:i32 = phi %2, 269:i32, 272:i32
%4 = block 2
%5:i32 = phi %4, 265:i32, 268:i32
%6:i32 = phi %1, 269:i32, 269:i32, 269:i32, 265:i32, %3, %5
%7 = block 2
%8:i32 = phi %7, 272:i32, 269:i32
%9 = block 2
%10:i32 = phi %9, 268:i32, 265:i32
%11:i32 = phi %0, %6, 263:i32, 263:i32, 263:i32, 99:i32, 99:i32, 269:i32, 265:i32, %8, %10, 263:i32, 273:i32, 263:i32, 263:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = phi %0, 0:i64, 0:i64, %1, 1:i64, 0:i64, 0:i64, 0:i64, 1:i64, 2:i64
%3:i64 = lshr %2, 26:i64
%4:i16 = trunc %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i24 = var
%2:i1 = ult %1, 2:i24
%3:i32 = select %2, 4:i32, 0:i32
%4:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = and 1:i32, %4
%6:i32 = or 2:i32, %5
%7:i32 = phi %0, 4:i32, %3, 0:i32, 1:i32, 0:i32, 4:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 4294967294:i32, %0
%2:i1 = eq 26:i32, %1
%3 = block 2
%4 = block 8
%5:i32 = phi %4, 5:i32, 3:i32, 1:i32, 0:i32, 1:i32, 5:i32, 3:i32, 0:i32
%6:i1 = var
%7:i32 = select %6, 2:i32, %5
%8:i32 = phi %3, %5, %7
%9:i32 = select %2, 4:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %1, %3, %3, %3, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = shlnsw %7, 1:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, %2, 0:i1, 0:i1
%4:i8 = zext %3
%5 = block 3
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %5, 0:i8, 0:i8, %7
%9 = block 3
%10:i1 = var
%11:i1 = phi %9, %10, 0:i1, 0:i1
%12:i8 = zext %11
%13:i8 = phi %0, %4, 0:i8, %8, %12, %12, 0:i8
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i1 = var
%3:i32 = select %2, 275:i32, 276:i32
%4:i32 = phi %1, 0:i32, 0:i32, 0:i32, %3, 274:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i32 = zext %0
%2:i32 = udiv 16:i32, %1
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 6
%4:i32 = phi %3, 340:i32, 340:i32, 340:i32, 340:i32, 339:i32, 339:i32
%5:i32 = phi %2, %4, 97:i32, 96:i32
%6:i32 = phi %1, %5, %4
%7 = block 6
%8:i8 = var (0000000x) (n)
%9:i1 = eq 0:i8, %8
%10:i32 = select %9, %6, 285:i32
%11:i32 = phi %0, %6, %10, %6
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = shlnw %1, 8:i32
%3:i32 = phi %0, 0:i32, %2
%4:i8 = var
%5:i32 = zext %4
%6:i32 = or %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 0:i32, %6, 2:i32, 2:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000x1xx) (zn)
%3:i32 = phi %0, 9:i32, %2
%4:i8 = var (0000000x) (n)
%5:i32 = zext %4
%6:i32 = subnsw %3, %5
%7:i32 = shl 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = var
%3:i1 = and %1, %2
%4:i32 = var (xxxxxxxxx00000000000000000000000)
%5:i32 = and 2139095040:i32, %4
%6:i32 = select %3, 0:i32, %5
%7:i32 = phi %0, 2139095040:i32, 2139095040:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i1 = eq 0:i8, %1
%3:i1 = var
%4:i8 = select %3, 1:i8, 17:i8
%5:i8 = or 8:i8, %4
%6:i8 = select %2, %4, %5
%7:i8 = phi %0, 33:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2:i8 = xor 1:i8, %1
%3:i8 = var (0000000x) (n)
%4:i8 = xor 1:i8, %3
%5:i8 = phi %0, %2, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4, %4, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i128 = var (00000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000) (n)
%1:i64 = trunc %0
%2:i64 = lshrexact %1, 47:i64
%3:i64 = subnsw 5:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = and 15:i32, %2
%4:i32 = var
%5:i32 = and 15:i32, %4
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, 9:i32, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or 2:i32, %2
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %0, %4, %3
%6:i32 = addnw 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 31:i32, %0
%2:i32 = subnsw 32:i32, %1
%3:i1 = ult 32:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 512:i32, %0
%2:i1 = ne 0:i32, %1
%3 = block 8
%4 = block 4
%5:i32 = phi %4, 1:i32, 1:i32, 0:i32, 0:i32
%6:i32 = or 2:i32, %5
%7:i32 = or 4:i32, %5
%8:i1 = var
%9:i32 = select %8, 16:i32, 0:i32
%10:i32 = phi %3, %6, %7, %5, %5, 32:i32, 32:i32, 8:i32, %9
%11:i32 = shl %10, 6:i32
%12:i32 = select %2, %10, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = xor 1:i1, %1
%3:i8 = zext %2
%4 = block 3
%5:i1 = var
%6:i8 = zext %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %4, 1:i8, %6, %8
%10:i8 = phi %0, %3, %9, %6, %8
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 4
%3:i32 = var (000000000000000000000000000000xx) (znp)
%4:i32 = var (000000000000000000000000000000xx) (znp)
%5:i32 = phi %2, 0:i32, 3:i32, %3, %4
%6:i32 = phi %1, 1:i32, 2:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var (xxxxxxx0)
%2:i8 = and 2:i8, %1
%3:i8 = addnw 2:i8, %2
%4:i8 = xor 2:i8, %2
%5:i8 = addnw 2:i8, %4
%6:i8 = phi %0, %3, %5, 4:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 2:i32, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 0:i32, %2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = addnw %3, %4
%6:i32 = phi %0, %3, %5
%7:i64 = var
%8:i1 = eq 0:i64, %7
%9:i32 = zext %8
%10:i32 = addnw %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000000x00) (n)
%2:i1 = ne 0:i64, %1
%3 = block 2
%4:i32 = phi %3, 1:i32, 3:i32
%5:i32 = select %2, 1:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = addnw 1:i32, %1
%3:i32 = phi %0, 1:i32, 1:i32, %2
%4:i32 = var
%5:i32 = lshr %4, 7:i32
%6:i32 = mulnw %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = slt 4294967295:i32, %0
%2:i32 = select %1, %0, 1:i32
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i1 = var
%5:i32 = or 4:i32, %2
%6:i32 = select %4, %5, %2
%7:i32 = phi %0, %3, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2:i32 = var (000000000000000000000000000000x0) (n)
%3:i32 = xor 3:i32, %2
%4:i1 = var
%5:i32 = select %4, 3:i32, 1:i32
%6:i32 = phi %1, 3:i32, 3:i32, 3:i32, 1:i32, %3, %5
%7:i32 = phi %0, 3:i32, %6, %6, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = phi %0, 16:i32, 32:i32, 64:i32
%2:i64 = zext %1
%3:i64 = addnsw 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1:i1 = var
%2:i8 = zext %1
%3 = block 6
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %3, %5, %5, 0:i8, 0:i8, %5, 0:i8
%7:i8 = phi %0, 0:i8, %2, %2, %2, %2, %2, 0:i8, %6, %2, %2
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = xor 1:i32, %2
%4:i32 = phi %0, 0:i32, %3, 2:i32, 3:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 4:i64
%4:i64 = phi %0, %3, 256:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 1:i1, %2
%4:i1 = var
%5:i32 = select %4, 246:i32, 86:i32
%6:i32 = select %4, 276:i32, 116:i32
%7:i32 = select %3, %5, %6
%8 = block 2
%9:i32 = phi %8, %7, %6
%10:i32 = phi %0, %7, %7, %9, %5, %5, %5
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = ult %1, 4:i32
%3:i8 = zext %2
%4 = block 3
%5:i8 = phi %4, 1:i8, 0:i8, 0:i8
%6:i8 = phi %0, %3, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = sub %0, %1
%3:i32 = var
%4:i64 = zext %3
%5:i1 = ult %2, %4
%6:i64 = select %5, %2, %4
%7:i1 = var
%8:i64 = var
%9:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%10:i64 = select %7, %8, %9
%11:i1 = ult %6, %10
%12:i64 = select %11, %6, %10
%13:i64 = subnsw %6, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8, 1:i8, 1:i8
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %0, %4, %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1 = block 2
%2 = block 4
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, 0:i8, %3, %3
%5:i8 = phi %1, 0:i8, %4
%6:i8 = select %0, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 1534:i32, %0
%2:i32 = select %1, 64:i32, 32:i32
%3:i32 = subnsw 64:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 4
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8, 0:i8
%4 = block 6
%5:i8 = phi %4, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8
%6:i8 = phi %1, 0:i8, 0:i8, 0:i8, %3, %5, 0:i8
%7:i8 = phi %0, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 18
%1 = block 2
%2:i64 = phi %1, 4294967296:i64, 0:i64
%3 = block 2
%4:i64 = phi %3, 4294967296:i64, 0:i64
%5 = block 2
%6:i64 = phi %5, 4294967296:i64, 0:i64
%7 = block 2
%8:i64 = phi %7, 4294967296:i64, 0:i64
%9:i64 = phi %0, %2, %4, %6, %8, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i8 = zext %1
%3:i1 = var
%4:i8 = zext %3
%5 = block 4
%6:i1 = var
%7:i8 = zext %6
%8 = block 4
%9:i1 = var
%10:i8 = zext %9
%11:i1 = var
%12:i8 = zext %11
%13:i8 = phi %5, %7, %10, %12, 1:i8
%14:i8 = phi %0, %2, %4, %13, %7, %10, %12
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = select %0, 8:i32, 4:i32
%2:i32 = addnsw 4294967295:i32, %1
%3:i32 = var
%4:i32 = var
%5:i1 = ult %3, %4
%6:i32 = select %5, %3, %4
%7:i32 = and %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i32 = phi %1, 2:i32, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, %2, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1155:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var
%2:i32 = and 3:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = var
%5:i32 = and 3:i32, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %3, %6, 0:i32, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1 = block 2
%2:i32 = phi %1, 8:i32, 7:i32
%3:i32 = phi %0, 21:i32, 20:i32, 19:i32, 18:i32, 17:i32, %2, 16:i32, 15:i32, 14:i32, 13:i32, 12:i32, 11:i32, 10:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 20
%1:i16 = var (0000000000xxxxxx) (n)
%2:i16 = and 3:i16, %1
%3:i32 = zext %2
%4 = block 3
%5:i16 = var (00000000000000xx) (n)
%6:i32 = zext %5
%7:i32 = phi %4, %6, 0:i32, 0:i32
%8:i32 = phi %0, 0:i32, 0:i32, %3, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = zext %1
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %3, 0:i32, %4
%6:i32 = phi %0, %2, %5, 0:i32, 0:i32
%7:i32 = shlnsw %6, 12:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var
%2:i8 = trunc %1
%3:i8 = and 7:i8, %2
%4:i8 = or 32:i8, %3
%5:i8 = phi %0, 5:i8, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = zext %1
%3 = block 2
%4:i1 = var
%5:i32 = zext %4
%6:i32 = phi %3, 0:i32, %5
%7:i32 = phi %0, %2, %6, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = or 4:i32, %2
%5:i1 = var
%6:i32 = select %5, 16:i32, 0:i32
%7:i32 = phi %0, %3, %4, %2, %2, 32:i32, 32:i32, 8:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%1:i32 = trunc %0
%2:i32 = shlnw %1, 1:i32
%3:i32 = xor 171:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i1 = eq 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = cttz %3
%5:i64 = select %2, 64:i64, %4
%6:i1 = var
%7:i64 = var (0000000000000000000000000000000000000000000000000000000000xxxxxx) (n)
%8:i64 = select %6, 64:i64, %7
%9:i64 = cttz %1
%10:i64 = addnw %8, %9
%11:i64 = phi %0, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %2, %2, %4
%6:i8 = phi %0, 0:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 3:i32, 2:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i16 = trunc %3
%5:i16 = lshr 8079:i16, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 32
%1 = block 10
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = var
%3:i1 = or %1, %2
%4:i32 = select %1, 4:i32, 1:i32
%5:i32 = select %3, %4, 0:i32
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = eq 12:i32, %1
%3:i32 = select %2, 0:i32, 3035:i32
%4:i32 = var
%5:i1 = eq %4, %1
%6:i32 = select %5, 0:i32, 3035:i32
%7 = block 4
%8:i32 = var (0000000000000000000000000x0xx0xx) (n)
%9:i32 = addnw 2967:i32, %8
%10:i32 = phi %7, 0:i32, %9, 2970:i32, 3035:i32
%11:i32 = phi %0, %3, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = xor 1:i32, %2
%4:i64 = var
%5:i32 = trunc %4
%6:i32 = and 7:i32, %5
%7:i32 = phi %0, %3, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i64 = zext %1
%3:i64 = addnw 4:i64, %2
%4:i64 = phi %0, 0:i64, 0:i64, 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 1:i8, %4
%6:i8 = phi %0, 1:i8, %5, %5, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, 0:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xx00) (n)
%2:i1 = eq 0:i32, %1
%3 = block 3
%4 = block 8
%5:i32 = var (0000000000000000000000000x00xxxx) (zn)
%6:i32 = var (0000000000000000000000000x00xxxx) (n)
%7:i32 = var (0000000000000000000000000x00xxxx) (n)
%8:i32 = phi %3, %5, %6, %7
%9:i32 = xor 12:i32, %8
%10:i32 = select %2, %8, %9
%11:i32 = phi %0, %10, %8
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1176:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 5
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %2, 1:i8, 1:i8, %4, 1:i8, 1:i8
%6:i8 = phi %0, %1, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 264:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 69874030582233150:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 69874030582233150:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = select %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = select %2, 3:i8, 2:i8
%4:i8 = phi %1, 2:i8, 1:i8, %3
%5:i8 = var (0000000x) (n)
%6:i1 = eq 0:i8, %5
%7:i8 = select %6, 3:i8, %4
%8:i8 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or 4:i32, %2
%4:i1 = var
%5:i32 = zext %4
%6:i32 = phi %0, %3, %5, %5, %5, %5
%7:i8 = var (xxxx0000)
%8:i8 = and 16:i8, %7
%9:i32 = zext %8
%10:i32 = or %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = or 2:i32, %3
%5:i32 = phi %1, %3, %4
%6 = block 2
%7:i32 = phi %6, %3, %4
%8:i32 = or 4:i32, %7
%9:i32 = phi %0, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 67108863:i32, %0
%2:i32 = mulnw 24:i32, %1
%3:i32 = addnuw 48:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i32 = var
%4:i64 = zext %3
%5:i1 = ult %2, %4
%6:i64 = select %5, %4, %2
%7:i64 = phi %0, %6, %2
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 14:i32, 15:i32
%3:i32 = phi %0, %2, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = phi %1, 6:i16, 7:i16
%3:i16 = phi %0, %2, 5:i16
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i1 = var
%3:i1 = var
%4:i1 = phi %1, 0:i1, 0:i1, 0:i1, %2, 0:i1, %3
%5:i1 = var
%6:i32 = select %5, 225:i32, 210:i32
%7:i32 = select %5, 65:i32, 130:i32
%8:i32 = select %4, %6, %7
%9:i64 = var
%10:i64 = var
%11:i1 = eq %9, %10
%12:i32 = select %5, 64:i32, 128:i32
%13:i32 = select %11, %12, 0:i32
%14:i32 = phi %0, 0:i32, %8, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 80:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 1:i32, 3:i32
%4:i32 = phi %1, 3:i32, %3
%5:i32 = var (0000000000000000000000000000xxxx) (n)
%6:i1 = eq 15:i32, %5
%7:i32 = select %6, 1:i32, %4
%8:i32 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 5
%2 = block 3
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, 1:i8, 1:i8, %3, 1:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 20
%1 = block 3
%2:i32 = phi %1, 0:i32, 0:i32, 18:i32
%3:i32 = phi %0, 0:i32, 6:i32, %2, 0:i32, 43:i32, 42:i32, 20:i32, 21:i32, 22:i32, 16:i32, 14:i32, 12:i32, 10:i32, 41:i32, 8:i32, 5:i32, 1:i32, 3:i32, 27:i32, 26:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = or 16:i64, %2
%4:i64 = phi %0, %3, 16:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 1:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = and 4294967295:i64, %1
%3:i64 = urem %0, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 512:i32, 256:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = sext %0
%2:i64 = lshr 2405181688062:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000x000x0000) (n)
%2:i32 = xor 260:i32, %1
%3 = block 2
%4:i1 = var
%5:i32 = select %4, 16:i32, 0:i32
%6:i32 = phi %0, %2, %5
%7:i32 = or 32:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3 = block 4
%4:i8 = phi %3, 1:i8, 0:i8, 0:i8, 0:i8
%5 = block 4
%6 = block 3
%7:i8 = phi %6, 1:i8, 0:i8, 0:i8
%8:i8 = phi %5, 0:i8, 1:i8, %7, 0:i8
%9:i8 = phi %0, %2, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 1719:i32, 1718:i32
%4:i32 = phi %1, 1739:i32, 1739:i32, 1672:i32, %3
%5:i32 = phi %0, %4, 1697:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4 = block 2
%5:i8 = phi %4, %2, 0:i8
%6:i8 = phi %3, 0:i8, %5
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx00) (n)
%1:i32 = shl 15:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%3:i64 = phi %1, 0:i64, 0:i64, 0:i64, %2
%4:i64 = addnsw 20:i64, %3
%5:i64 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i32 = shlnw %2, 8:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxx000000)
%2:i32 = and 2048:i32, %1
%3:i1 = var
%4:i32 = var (00x0000000000000000000001xx00000) (zn)
%5:i32 = var (00x0000000000000000000000xx00000) (n)
%6:i32 = select %3, %4, %5
%7:i32 = or %2, %6
%8:i32 = or 33554432:i32, %7
%9:i32 = phi %0, %7, %8, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = trunc %1
%3:i1 = var
%4:i32 = select %3, 25:i32, 5:i32
%5:i32 = lshr %2, %4
%6:i64 = var
%7:i32 = trunc %6
%8:i32 = lshr %7, 28:i32
%9:i32 = phi %0, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = or 13:i64, %2
%4:i64 = phi %0, %3, 13:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 340:i32, 340:i32, 340:i32, 340:i32, 339:i32, 339:i32
%3:i32 = phi %0, %2, 97:i32, 96:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %3, %2, %5, %2
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 72:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000xxxxxxx) (n)
%1:i32 = trunc %0
%2:i32 = var
%3:i1 = ult %1, %2
%4:i32 = select %3, %1, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = addnw 7:i32, %2
%4:i32 = phi %1, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = var
%3:i1 = and %1, %2
%4:i64 = var (xxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000)
%5:i64 = and 9223090561878065152:i64, %4
%6:i64 = select %3, 0:i64, %5
%7:i64 = phi %0, 9223090561878065152:i64, 9223090561878065152:i64, 0:i64, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i24 = zext %1
%3:i24 = shlnw %2, 16:i24
%4:i24 = var
%5:i24 = and 65536:i24, %4
%6:i24 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000xxxxx) (n)
%2:i32 = addnsw 4294967295:i32, %1
%3:i32 = shl 1:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2:i1 = var
%3:i32 = select %2, 66:i32, 34:i32
%4:i32 = select %2, 70:i32, 38:i32
%5:i32 = select %2, 69:i32, 37:i32
%6:i32 = select %2, 68:i32, 36:i32
%7:i32 = select %2, 67:i32, 35:i32
%8:i1 = var
%9:i32 = var (0000000000000000000000000xx00001) (zn)
%10:i32 = select %8, %9, %3
%11:i32 = phi %1, %3, %4, %5, %6, %7, %10
%12:i1 = eq 33:i32, %11
%13:i32 = select %12, 45:i32, %11
%14:i32 = phi %0, %11, %11, %11, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000x000000000000000000000000000000000) (n)
%2:i64 = lshrexact %1, 33:i64
%3:i8 = trunc %2
%4:i8 = phi %0, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 1:i8, %4, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = phi %0, 4:i32, 1:i32, 1:i32, 4:i32, 1:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i32 = zext %0
%2:i8 = var (0xxxxxxx) (n)
%3:i8 = lshr %2, 1:i8
%4:i32 = zext %3
%5:i32 = lshr %1, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1:i64 = phi %0, 2:i64, 4:i64, 8:i64, 2:i64, 2:i64, 3:i64, 4:i64, 4:i64, 8:i64, 8:i64, 16:i64, 16:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = phi %0, 4294967295:i32, 0:i32, 0:i32
%2:i1 = eq 4294967295:i32, %1
%3:i32 = select %2, 1:i32, %1
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (zn)
%3:i32 = addnw 3:i32, %2
%4:i32 = addnw 2:i32, %2
%5:i32 = phi %0, %3, %4
%6:i8 = var
%7:i1 = ult %6, 2:i8
%8:i32 = zext %7
%9:i32 = addnsw %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 3:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i1 = var
%6:i8 = select %5, 1:i8, %4
%7:i8 = phi %0, %4, %4, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 12:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 4:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i1 = var
%6:i32 = or 2:i32, %4
%7:i32 = select %5, %6, %4
%8:i32 = phi %0, 0:i32, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 2:i32, %1
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, %3, 4:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 3
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8, 0:i8
%6:i8 = phi %0, %5, 0:i8, 0:i8, %4, 0:i8
%7:i8 = shl %6, 4:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = addnsw 4294966686:i32, %1
%3:i32 = phi %0, %2, 9:i32
%4:i32 = lshr 117442535:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i24 = var (000000000xxxxxxxxxxxxxxx) (n)
%2:i8 = trunc %1
%3:i8 = and 1:i8, %2
%4:i24 = var (00000000000000x000000000) (n)
%5:i1 = eq 0:i24, %4
%6:i8 = select %5, %3, 1:i8
%7:i8 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ult %0, 4:i32
%2:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%3:i32 = lshr 1195782192:i32, %2
%4:i8 = trunc %3
%5:i8 = select %1, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i1 = var
%5:i8 = select %4, %3, 1:i8
%6:i8 = phi %1, %3, %5
%7:i16 = var (00x0000000000000) (n)
%8:i1 = eq 0:i16, %7
%9:i8 = select %8, %6, 1:i8
%10:i8 = phi %0, %6, %6, %6, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 12:i64, 0:i64
%3 = block 2
%4:i32 = var
%5:i32 = var
%6:i32 = phi %3, %4, %5
%7:i64 = zext %6
%8:i64 = phi %0, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000xxxxxx) (n)
%2:i64 = zext %1
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000xxxxxx) (n)
%1:i32 = subnsw 32:i32, %0
%2:i64 = zext %1
%3:i64 = shl 1:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (00000000000000000000x00000000000) (n)
%2:i32 = var (00x000000000000000000000xxx00000) (n)
%3:i32 = or %1, %2
%4:i32 = or 33554432:i32, %3
%5:i32 = phi %0, %3, %4, %3
%6:i32 = var (xxxxxxxx000000000000000000000000)
%7:i32 = and 1073741824:i32, %6
%8:i32 = xor 1073741824:i32, %7
%9:i32 = or %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 5
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8, 1:i8
%5:i8 = phi %0, 1:i8, 1:i8, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 7
%4:i8 = phi %3, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 1:i8
%5:i8 = phi %0, %2, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 1073741823:i32, %0
%2:i32 = addnw 7:i32, %1
%3:i32 = add 7:i32, %0
%4:i32 = and 7:i32, %3
%5:i32 = subnsw %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 8191:i32, %0
%2:i1 = ult 26:i32, %1
%3:i32 = addnsw 4294967269:i32, %1
%4:i32 = select %2, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %3, %5
%7:i32 = or 1:i32, %6
%8:i32 = phi %0, %6, %6, %6, %6, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %6, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (zp)
%2:i64 = phi %0, %1, 0:i64
%3:i1 = ult 4:i64, %2
%4:i64 = select %3, %2, 4:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i24 = var
%2:i24 = lshr %1, 16:i24
%3:i64 = zext %2
%4:i1 = var
%5:i64 = select %4, 2:i64, 0:i64
%6:i24 = var (0000000000000000xxxxxxxx) (n)
%7:i64 = zext %6
%8:i64 = or %5, %7
%9:i64 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i8 = xor 1:i8, %2
%4:i8 = var
%5:i8 = and 1:i8, %4
%6:i8 = xor 1:i8, %5
%7:i8 = var
%8:i8 = and 1:i8, %7
%9:i8 = xor 1:i8, %8
%10:i8 = var
%11:i8 = and 1:i8, %10
%12:i8 = xor 1:i8, %11
%13:i8 = var
%14:i8 = and 1:i8, %13
%15:i8 = xor 1:i8, %14
%16:i8 = var
%17:i8 = and 1:i8, %16
%18:i8 = xor 1:i8, %17
%19:i8 = var
%20:i8 = and 1:i8, %19
%21:i8 = xor 1:i8, %20
%22:i8 = var
%23:i8 = and 1:i8, %22
%24:i8 = xor 1:i8, %23
%25:i8 = var
%26:i8 = and 1:i8, %25
%27:i8 = xor 1:i8, %26
%28:i8 = var
%29:i8 = and 1:i8, %28
%30:i8 = xor 1:i8, %29
%31:i8 = phi %0, %3, %6, %9, %12, %15, %18, %21, %24, 1:i8, %27, %27, %30, %30, %30
infer %31

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i32 = var
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i1 = ult %3, %4
%6:i32 = select %5, %2, 2:i32
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i1 = var
%3:i1 = xor 1:i1, %2
%4:i32 = zext %3
%5:i32 = phi %1, %4, %4, %4
%6:i32 = or 4:i32, %5
%7:i32 = phi %0, %6, %4, %4, %4, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 32:i64
%4:i64 = phi %0, %3, 0:i64, 0:i64, 4294967296:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 1:i32, %2, %4, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = select %0, 64:i32, 32:i32
%2:i32 = addnsw 4294967280:i32, %1
%3:i64 = sext %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = add 4294967295:i32, %1
%3:i32 = or %2, %1
%4:i1 = eq 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 8
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = var (00000000000000000000000000000xxx) (n)
%6:i32 = phi %2, %4, %5
%7:i1 = var
%8:i32 = select %7, 4:i32, %6
%9:i32 = phi %1, %6, %8
%10:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%11:i1 = eq 26:i32, %10
%12:i32 = select %11, 6:i32, %9
%13:i32 = phi %0, %9, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = ctlz %1
%3:i32 = xor 31:i32, %2
%4:i32 = phi %0, %3, 2:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = subnsw 3289:i32, %2
%4:i32 = phi %0, %3, 3291:i32, 3291:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = zext %0
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, 0:i8, %3, %3
%5:i8 = phi %1, 0:i8, %4
%6:i1 = var
%7:i8 = select %6, 1:i8, %5
%8:i8 = phi %0, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i32 = var (000000000000000000000000xxxxxxxx) (n)
%4:i1 = eq 0:i32, %3
%5:i32 = select %4, %2, 0:i32
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 7:i32, 12:i32
%3:i32 = phi %0, 9:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i8 = var (0010xxxx) (zn)
%2:i8 = addnsw 230:i8, %1
%3:i37 = zext %2
%4:i37 = lshr 73016574209:i37, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 2:i32, 0:i32, 2:i32
%3:i32 = phi %0, 1:i32, 2:i32, 0:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 6
%3:i32 = var (0000000000000000000000000xx00010) (zn)
%4:i32 = var (0000000000000000000000000xx00110) (zn)
%5:i32 = var (0000000000000000000000000xx00101) (zn)
%6:i32 = var (0000000000000000000000000xx00100) (zn)
%7:i32 = var (0000000000000000000000000xx00011) (zn)
%8:i32 = var (0000000000000000000000000xx000xx) (zn)
%9:i32 = phi %2, %3, %4, %5, %6, %7, %8
%10:i1 = var
%11:i32 = select %10, 45:i32, %9
%12:i32 = phi %1, %9, %9, %9, %11
%13:i1 = eq 33:i32, %12
%14:i32 = select %13, 45:i32, %12
%15:i32 = phi %0, %12, %12, %12, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i1 = ult %1, 5:i32
%3:i32 = select %2, %1, 1:i32
%4:i32 = shl %3, 10:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = or 4:i32, %2
%4:i32 = phi %0, %2, %3, 0:i32, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 255:i64, 0:i64
%3:i64 = or 65280:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = or 16711680:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 255:i32, %0
%2:i1 = ult %1, 11:i32
%3:i32 = addnsw 4294967286:i32, %1
%4:i32 = select %2, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = ashr %2, 31:i32
%4:i32 = xor %3, %2
%5:i32 = var (00000000000000000000xxxxx0000000) (n)
%6:i32 = addnw 1024:i32, %5
%7:i32 = var
%8:i32 = and 127:i32, %7
%9:i32 = or %6, %8
%10:i32 = var
%11:i32 = and 255:i32, %10
%12:i32 = or 768:i32, %11
%13:i1 = var
%14:i32 = select %13, 256:i32, 512:i32
%15:i32 = or %11, %14
%16:i32 = phi %0, %4, %9, %12, %15, %4
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var
%2:i32 = and 2:i32, %1
%3:i32 = or 13:i32, %2
%4:i32 = phi %0, 15:i32, 15:i32, 15:i32, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = var
%3:i1 = or %1, %2
%4:i64 = var
%5:i64 = and 32767:i64, %4
%6:i64 = select %3, %5, 0:i64
%7:i64 = phi %0, 32767:i64, 32767:i64, 0:i64, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i32 = var (000000000000000000000000000000x0) (n)
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %1, %2, 0:i32, %3
%5:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %4, %4
%6:i64 = sext %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 231:i32, 229:i32
%4:i32 = select %2, 254:i32, 253:i32
%5:i1 = var
%6:i32 = var (0000000000000000000000010000001x) (zn)
%7:i32 = var (000000000000000000000000111101xx) (zn)
%8:i32 = select %5, %6, %7
%9:i32 = select %2, 266:i32, 264:i32
%10:i32 = phi %1, %3, %4, %8, %9
%11:i32 = phi %0, %10, %10, 265:i32, 230:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 6:i64, 10:i64
%3 = block 2
%4 = block 2
%5:i64 = phi %4, 4:i64, 9:i64
%6:i64 = phi %3, 12:i64, %5
%7:i64 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = lshr %1, 27:i32
%3:i32 = and 15:i32, %2
%4:i1 = var
%5:i32 = zext %4
%6:i32 = or %3, %5
%7:i32 = phi %0, %3, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var
%2:i32 = lshr %1, 31:i32
%3:i8 = trunc %2
%4:i8 = phi %0, %3, 0:i8, %3, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i1 = ult %1, 2:i32
%3:i32 = select %2, 231:i32, 229:i32
%4:i32 = select %2, 254:i32, 253:i32
%5:i16 = var (00000xx000000000) (n)
%6:i1 = eq 1024:i16, %5
%7:i32 = select %2, 259:i32, 258:i32
%8:i32 = select %2, 246:i32, 245:i32
%9:i32 = select %6, %7, %8
%10:i32 = select %2, 266:i32, 264:i32
%11:i32 = phi %0, %3, %4, %9, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 2
%2:i1 = var
%3:i1 = var
%4:i1 = phi %1, %2, %3
%5:i32 = select %4, 114:i32, 113:i32
%6 = block 23
%7 = block 2
%8:i32 = var (000000000000000000000000x0x000x0) (n)
%9:i32 = var (000000000000000000000000x0x000xx) (n)
%10:i32 = phi %7, %8, %9
%11:i32 = phi %6, %10, 161:i32, 160:i32, 96:i32, 95:i32, 94:i32, 160:i32, 161:i32, 97:i32, 162:i32, 160:i32, 162:i32, 162:i32, 162:i32, 163:i32, 161:i32, 163:i32, 163:i32, 163:i32, 160:i32, 162:i32, 161:i32, 163:i32
%12:i32 = phi %0, %5, %11, %5, %5, %5, %5, %5, %5, %5, %5
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = var
%2:i64 = select %1, 1:i64, 8:i64
%3:i64 = addnsw 18446744073709551615:i64, %2
%4:i64 = and %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i1 = eq 0:i8, %2
%4 = block 6
%5 = block 2
%6:i8 = var (0000000x) (n)
%7 = block 2
%8:i8 = var (0000000x) (n)
%9 = block 2
%10:i8 = var (0000000x) (n)
%11 = block 2
%12:i8 = var (0000000x) (n)
%13:i8 = phi %4, %6, %8, %10, %12, 0:i8, 0:i8
%14:i8 = select %3, %13, 0:i8
%15:i8 = phi %0, %14, %13
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 1:i64, 0:i64
%3:i64 = phi %0, 2:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i16 = phi %1, 1:i16, 0:i16
%3:i1 = var
%4:i16 = select %3, 256:i16, 64:i16
%5:i16 = or %2, %4
%6:i16 = or 4:i16, %5
%7:i16 = or 2:i16, %5
%8:i16 = or 16:i16, %5
%9:i16 = phi %0, %5, %6, %7, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 5
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, 0:i8, %4, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshr %0, 9:i64
%2:i64 = and 8191:i64, %1
%3:i1 = ult %2, 27:i64
%4:i13 = trunc %1
%5:i13 = select %3, %4, 0:i13
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i64 = zext %0
%3:i64 = select %1, 1:i64, %2
%4:i1 = eq 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 2:i32, %3
%5 = block 2
%6:i32 = var (000000000000000000000000000000xx) (n)
%7:i1 = ne 0:i32, %6
%8:i32 = zext %7
%9:i32 = phi %0, %4, 2:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 10:i32, 4:i32
%4:i1 = var
%5:i32 = zext %4
%6:i32 = subnsw 12:i32, %5
%7:i32 = subnsw 4:i32, %5
%8:i32 = phi %0, 4:i32, %3, %6, %7, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%3:i64 = phi %1, 0:i64, 0:i64, 0:i64, %2
%4:i64 = addnsw 20:i64, %3
%5:i64 = phi %0, %4, %3
%6:i16 = var
%7:i64 = zext %6
%8:i64 = addnsw %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 2:i32, %1
%3:i32 = xor 3:i32, %2
%4:i64 = var
%5:i1 = eq 1:i64, %4
%6:i32 = select %5, 3:i32, 1:i32
%7:i32 = phi %0, 3:i32, 3:i32, 3:i32, 1:i32, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = phi %0, 255:i32, 255:i32, 255:i32, 15:i32, 255:i32, 15:i32, 15:i32, 255:i32, 15:i32, 3:i32, 3:i32
%2:i64 = var
%3:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxx11) (zn)
%4:i64 = and %2, %3
%5:i32 = trunc %4
%6:i32 = xor %1, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw %0, %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = addnw %2, %4
%6:i32 = var
%7:i64 = zext %6
%8:i64 = add %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i8 = xor 1:i8, %2
%4:i8 = phi %0, 1:i8, 1:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 8
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, %3
%5:i8 = phi %0, %4, %4, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 2:i32, 2:i32, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1141:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (000000xx) (n)
%2:i1 = ne 3:i8, %1
%3:i32 = zext %1
%4:i32 = select %2, %3, 0:i32
%5:i32 = phi %0, 0:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i72 = var (00000000000000000000000000000000000000000000000000000000000000000x000000) (n)
%2:i1 = ne 0:i72, %1
%3:i32 = select %2, 3362:i32, 3700:i32
%4:i72 = var (00000000000000000000000000000000000000000000000000000000000000000x000000) (n)
%5:i1 = eq 0:i72, %4
%6:i1 = var
%7:i32 = select %6, 3701:i32, 3685:i32
%8:i32 = select %5, %7, 3316:i32
%9:i32 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 8
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i1 = eq 0:i32, %2
%4:i32 = phi %1, 0:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%5:i32 = select %3, 1:i32, %4
%6:i32 = phi %0, 1:i32, 1:i32, %5, 2:i32, 1:i32, 1:i32, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 7:i32, 12:i32
%3:i32 = phi %0, 9:i32, %2
%4:i8 = var
%5:i8 = and 1:i8, %4
%6:i32 = zext %5
%7:i32 = subnsw %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 28
%2:i32 = phi %1, 1:i32, 4:i32, 16:i32, 8:i32, 2:i32, 1:i32, 16:i32, 8:i32, 4:i32, 2:i32, 1:i32, 4:i32, 8:i32, 4:i32, 2:i32, 2:i32, 1:i32, 1:i32, 2:i32, 1:i32, 16:i32, 8:i32, 4:i32, 2:i32, 1:i32, 4:i32, 8:i32, 8:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = phi %0, 16:i32, 32:i32, 64:i32
%2:i64 = zext %1
%3:i64 = subnsw 64:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 3:i64
%4:i64 = var (000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxx) (n)
%5:i64 = shlnw %4, 16:i64
%6:i16 = var
%7:i64 = zext %6
%8:i64 = or %5, %7
%9:i64 = phi %0, %3, %8, 0:i64
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i64 = phi %1, 2:i64, 1:i64, 3:i64, 2:i64, 1:i64, 0:i64, 0:i64
%3:i64 = phi %0, 3:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 2:i32, 2:i32, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, 2:i32, %3
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000xxxxxxxxxxxxx) (n)
%2:i32 = and 2:i32, %1
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ne 0:i32, %0
%2:i1 = var
%3:i64 = var (000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (zn)
%4:i64 = var (00000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (zn)
%5:i64 = select %2, %3, %4
%6:i64 = addnw 16:i64, %5
%7:i64 = select %1, %6, %5
%8:i64 = add 16:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var (00000000000000000000000000001x01) (zn)
%2:i64 = zext %1
%3:i64 = shl 1:i64, %2
%4:i64 = and %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = phi %0, 1:i32, 2:i32, 1:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = phi %0, 4:i32, 3:i32, 2:i32, 1:i32, 0:i32
%2:i1 = ult 1:i32, %1
%3:i32 = sext %2
%4:i32 = addnsw %1, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = zext %1
%3:i32 = xor 31:i32, %2
%4:i8 = var (0000000x) (n)
%5:i32 = zext %4
%6:i32 = subnsw %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1:i32 = var (000000000000000000000000000000x0) (n)
%2:i32 = lshrexact %1, 1:i32
%3:i32 = or 2:i32, %2
%4:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = and 1:i32, %4
%6:i32 = or 2:i32, %5
%7:i8 = var
%8:i1 = eq 96:i8, %7
%9:i32 = zext %8
%10:i32 = phi %0, %3, %6, 0:i32, %9, 5:i32, 5:i32, 0:i32, 1:i32, 2:i32, 3:i32, 0:i32, 4:i32, 4:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 6
%3:i32 = phi %2, 340:i32, 340:i32, 340:i32, 340:i32, 339:i32, 339:i32
%4:i32 = phi %1, %3, 97:i32, 96:i32
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 2
%2:i32 = phi %1, 4:i32, 3:i32
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = phi %0, %3, %2, %2, %2, %2, %2, %2, %2, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, 1:i8, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = shl 4:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = select %0, 15:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var
%2:i32 = and 3:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, 0:i32, 0:i32, 0:i32, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 3
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8, 0:i8
%6:i8 = phi %0, %5, 0:i8, 0:i8, %4, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 68:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i8 = var (000000xx) (n)
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, %4, %4, 0:i8, 0:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32, 1:i32, 1:i32, %3
%5:i32 = phi %0, %4, 2:i32, 2:i32, 2:i32, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i1 = var
%3:i32 = select %2, 1168:i32, 1216:i32
%4:i32 = phi %1, %3, 1168:i32, 1168:i32, 1136:i32, 1120:i32, 1104:i32, 1136:i32
%5:i32 = phi %0, %4, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = or %4, %6
%8:i8 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 5
%2:i64 = phi %1, 1:i64, 1:i64, 2:i64, 5:i64, 6:i64
%3:i64 = phi %0, 0:i64, 0:i64, 1:i64, 2:i64, 3:i64, 4:i64, 5:i64, %2, 6:i64, 7:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xxxx) (n)
%1:i1 = eq 15:i32, %0
%2:i32 = var (0000000000000000000000000000xxxx) (n)
%3:i1 = eq 15:i32, %2
%4:i1 = or %1, %3
%5 = block 2
%6:i1 = var
%7:i32 = select %6, 1:i32, 3:i32
%8:i32 = select %4, 1:i32, %7
%9:i32 = phi %5, %7, %8
%10:i32 = select %4, 1:i32, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i32 = and 91:i32, %1
%3:i32 = addnw 2967:i32, %2
%4:i32 = phi %0, 0:i32, %3, 2970:i32, 3035:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 35
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 4:i64, 5:i64
%3:i64 = phi %0, %2, 16:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = var
%3:i32 = select %2, 25:i32, 5:i32
%4:i32 = lshr %1, %3
%5:i32 = var
%6:i32 = lshr %5, 28:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 128:i32, 64:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i1 = ult 31:i16, %0
%2:i32 = zext %0
%3:i32 = addnsw 4294967264:i32, %2
%4:i32 = select %1, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (000000000000000000000000000xxxxx) (n)
%2:i32 = and 15:i32, %1
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = or %2, %3
%5:i32 = phi %0, %2, %2, %4
%6:i32 = and 4294967293:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = add 18446744073709551612:i64, %1
%3:i64 = ashr %2, 63:i64
%4:i64 = addnsw 8388608:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000x00000000) (n)
%2 = block 2
%3:i1 = var
%4:i1 = var
%5:i1 = phi %2, %3, %4
%6:i32 = select %5, 17:i32, 1:i32
%7:i32 = or %1, %6
%8:i32 = xor 260:i32, %7
%9:i32 = phi %0, %8, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i1 = var
%4:i32 = select %3, 2:i32, %2
%5:i32 = phi %0, %2, %2, %2, %4
%6:i32 = addnw 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i1 = var
%3:i1 = xor %1, %2
%4:i1 = var
%5:i32 = select %4, 432:i32, 434:i32
%6:i32 = select %4, 431:i32, 433:i32
%7:i32 = select %3, %5, %6
%8:i32 = phi %0, %7, 440:i32, 438:i32, 439:i32, 437:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i64 = phi %1, 2304:i64, 1776:i64, 1712:i64, 1728:i64, 1696:i64, 2288:i64
%3:i64 = phi %0, %2, 0:i64, 0:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = phi %1, %2, 0:i64
%4 = block 2
%5:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000)
%6:i64 = and 3758096384:i64, %5
%7:i64 = or %3, %6
%8:i64 = phi %0, %7, 0:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i64 = select %1, 3:i64, 0:i64
%3:i32 = var
%4:i1 = eq 4:i32, %3
%5:i64 = select %1, 4:i64, 2:i64
%6:i64 = select %4, 1:i64, %5
%7:i64 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000xxxx001) (zn)
%1:i64 = zext %0
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = shl 1:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (00000000000000000000000000000000000000000000000000000000000000x0) (n)
%2:i64 = lshrexact %1, 1:i64
%3:i8 = trunc %2
%4:i8 = phi %0, %3, 1:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 4294967280:i32, %0
%2:i32 = and 4293918720:i32, %1
%3:i32 = sub %1, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %3, %5
%7 = block 2
%8:i32 = var (000000000000xx000000000000000000) (zn)
%9:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%10:i32 = or %8, %9
%11:i32 = or 1:i32, %10
%12:i32 = or 1:i32, %6
%13:i32 = var (000000000000000000000000xxxxxx00) (n)
%14:i32 = or %13, %2
%15:i32 = or 262144:i32, %14
%16:i32 = phi %0, %6, %6, %11, %11, %12, %12, %15, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = addnw 3:i32, %1
%3:i32 = phi %0, 0:i32, 1:i32, 2:i32, %2
%4:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%5:i64 = lshr %4, 2:i64
%6:i32 = trunc %5
%7:i32 = urem %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = slt 4294967295:i32, %1
%3:i32 = select %2, %1, 1:i32
%4:i32 = phi %0, %3, 1:i32, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 7:i32, %0
%2:i32 = lshr %1, 3:i32
%3:i32 = var
%4:i1 = eq 64:i32, %3
%5:i32 = select %4, 2:i32, 4:i32
%6:i32 = mulnuw %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 255:i64, 0:i64
%3:i64 = or 65280:i64, %2
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (00000000000000000000000000000x0x) (n)
%4:i32 = phi %2, %3, 0:i32
%5:i32 = phi %1, %4, 3:i32
%6:i32 = phi %0, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i1 = var
%2:i1 = var
%3:i32 = select %2, 7:i32, 8:i32
%4:i32 = select %2, 9:i32, 10:i32
%5:i32 = select %1, %3, %4
%6:i1 = var
%7:i32 = select %2, 8:i32, 7:i32
%8:i32 = select %2, 10:i32, 9:i32
%9:i32 = select %6, %7, %8
%10:i32 = phi %0, 0:i32, %5, %9, 6:i32, 5:i32, 3:i32, 1:i32, 2:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, %3
%5:i1 = var
%6:i32 = zext %5
%7:i32 = addnw %4, %6
%8:i32 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i32 = zext %2
%4:i32 = phi %1, %3, 2:i32
%5:i32 = phi %0, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 2683:i32, 268:i32
%4 = block 3
%5:i32 = phi %4, 2683:i32, 2684:i32, 268:i32
%6 = block 3
%7:i1 = var
%8:i32 = select %7, 2660:i32, 2676:i32
%9:i32 = select %7, 2659:i32, 2675:i32
%10:i32 = select %7, 242:i32, 255:i32
%11:i32 = phi %6, %8, %9, %10
%12 = block 3
%13:i32 = select %7, 2644:i32, 2668:i32
%14:i32 = select %7, 2643:i32, 2667:i32
%15:i32 = select %7, 232:i32, 250:i32
%16:i32 = phi %12, %13, %14, %15
%17:i32 = phi %0, 1415:i32, %3, 1417:i32, %5, %11, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000xxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = or 3428:i32, %2
%4:i32 = phi %0, 3428:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 98:i32, 99:i32
%3:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = and 1:i32, %3
%5:i32 = or 98:i32, %4
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i1 = eq 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = cttz %3
%5:i64 = select %2, 64:i64, %4
%6:i32 = var
%7:i32 = cttz %6
%8:i64 = zext %7
%9:i64 = phi %0, %5, %8, 32:i64
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (1111111111111111111111111111111111111111111111111111111111111x00) (z)
%2:i64 = and %0, %1
%3:i1 = ne 0:i64, %2
%4:i1 = var
%5:i64 = var (0000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%6:i64 = var (00000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (zn)
%7:i64 = select %4, %5, %6
%8:i64 = add 16:i64, %7
%9:i64 = select %3, %8, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ult %0, 4:i32
%2:i32 = select %1, %0, 2:i32
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 14:i32
%3:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = and 1:i32, %3
%5:i32 = addnw 7:i32, %4
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = ctlz %1
%3:i32 = var
%4:i32 = ctlz %3
%5:i32 = phi %0, %2, %4
%6:i32 = subnsw 32:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (0000000000000000000000000000000000000000000000000000000xxxxxxxxx) (n)
%2:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%3:i64 = addnw %1, %2
%4:i8 = var
%5:i64 = zext %4
%6:i64 = addnw %3, %5
%7:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%8:i64 = addnw %6, %7
%9:i8 = var
%10:i64 = zext %9
%11:i64 = addnw %8, %10
%12:i64 = phi %0, %11, %6
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 1:i8, 1:i8, 0:i8, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, %3, %3
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i256 = var (00000000000000000000000000000x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) (n)
%2:i1 = ne 0:i256, %1
%3:i32 = select %2, 3:i32, 1:i32
%4:i256 = var (00000000000000000000000000000x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) (n)
%5:i1 = eq 0:i256, %4
%6:i32 = select %5, 0:i32, 4:i32
%7 = block 2
%8:i32 = phi %7, 2:i32, 4:i32
%9:i32 = or 1:i32, %8
%10:i32 = phi %0, %3, %6, %8, %8, %9, %9, 8:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 1:i8, 1:i8, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i1 = var
%3:i32 = select %2, 2:i32, 1:i32
%4:i32 = phi %1, %3, 2:i32, 2:i32, 1:i32, 1:i32
%5:i32 = phi %0, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = phi %0, 17:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 13:i32, 13:i32, 9:i32, 9:i32
%2:i32 = phi %0, 1:i32, 2:i32, 2:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = var (00000000000000000000000000000xxx) (zn)
%4:i32 = addnsw 4294967295:i32, %3
%5:i32 = mulnsw %2, %4
%6:i32 = add %1, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2 = block 2
%3:i64 = var
%4:i64 = var
%5:i64 = phi %2, %3, %4
%6:i64 = phi %0, %1, %5
%7:i1 = ne %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var (xxxxxxx0)
%2:i8 = and 2:i8, %1
%3:i8 = addnw 2:i8, %2
%4:i8 = var (000000x0) (n)
%5:i8 = xor 2:i8, %4
%6:i8 = addnw 2:i8, %5
%7:i8 = xor 2:i8, %2
%8:i8 = addnw 2:i8, %7
%9:i8 = phi %0, %3, %6, 4:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = and 1:i32, %2
%4:i8 = var (0000000x) (n)
%5:i32 = zext %4
%6:i32 = or %3, %5
%7:i8 = var (0000000x) (n)
%8:i32 = zext %7
%9:i32 = or %6, %8
%10:i32 = phi %0, %6, %9, %6
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = or 18:i64, %2
%4:i64 = phi %0, %3, 18:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i1 = var
%4:i32 = select %3, 2:i32, %2
%5:i32 = phi %0, %2, %2, %4
%6:i32 = addnw 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 5:i32, 6:i32
%3:i32 = phi %0, 6:i32, 5:i32, 2:i32, 1:i32, 7:i32, 4:i32, 3:i32, 0:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 7:i32, %2
%4:i32 = phi %0, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = addnsw 4294967248:i32, %0
%2:i1 = ult %1, 10:i32
%3:i32 = select %2, %1, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i1 = eq 16:i32, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = select %2, 2:i32, %4
%6:i32 = phi %0, 1:i32, 2:i32, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 6
%2:i1 = var
%3:i32 = var (0000000000000000000000xx11xx00xx) (zn)
%4:i32 = var (0000000000000000000000xxxxxx0000) (zn)
%5:i32 = select %2, %3, %4
%6 = block 6
%7:i1 = var
%8:i32 = var (0000000000000000000000xx0000xx00) (zn)
%9:i32 = select %7, %8, 0:i32
%10:i32 = or %5, %9
%11 = block 3
%12:i32 = var (000000000000000000000000xxxx00xx) (zn)
%13:i32 = var (000000000000000000000000xx000000) (n)
%14:i32 = phi %11, 0:i32, %12, %13
%15:i32 = var (0000000000000000000000xx0000xx00) (zn)
%16:i32 = or %14, %15
%17:i1 = var
%18:i32 = select %17, 544:i32, 272:i32
%19:i32 = or %16, %18
%20:i32 = select %17, 256:i32, 512:i32
%21:i32 = or %14, %20
%22:i32 = phi %0, %10, %19, %16, %21, %14, %14
infer %22

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 2:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i1 = var
%3:i32 = var (00000000000000000000000011xx00xx) (zn)
%4:i32 = var (000000000000000000000000xx0000xx) (zn)
%5:i32 = select %2, %3, %4
%6:i1 = var
%7:i32 = var (000000000000000000000000xx000000) (znp)
%8:i32 = select %6, %7, 0:i32
%9:i32 = phi %0, 0:i32, %5, %8
%10:i32 = var
%11:i1 = eq 32:i32, %10
%12:i32 = select %11, 260:i32, 520:i32
%13:i32 = or %9, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = ctlz %0
%2:i32 = subnsw 32:i32, %1
%3:i32 = subnsw 64:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 8
%2:i32 = phi %1, 8:i32, 72:i32, 69:i32, 5:i32, 2:i32, 1:i32, 1:i32, 1:i32
%3:i32 = xor 13:i32, %2
%4:i1 = var
%5:i32 = var (0000000000000000000000000x00xxxx) (n)
%6:i32 = select %4, 0:i32, %5
%7:i32 = phi %0, %2, %3, %6
%8:i32 = xor 12:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i32 = phi %1, 2:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 4
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8, %4, %4
%6:i8 = phi %1, 1:i8, %5, %5
%7:i8 = phi %0, %6, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = var (0000000x) (n)
%3:i32 = zext %2
%4:i32 = phi %1, 2:i32, %3, 2:i32, 2:i32
%5:i32 = phi %0, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i32 = zext %0
%2 = block 2
%3:i32 = var
%4:i32 = var
%5:i32 = phi %2, %3, %4
%6:i32 = udiv %1, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var
%2:i32 = zext %1
%3:i32 = shlnw %2, 3:i32
%4:i16 = var
%5:i32 = zext %4
%6:i32 = shlnw %5, 2:i32
%7:i32 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = var (0000000000000000000000000000x0xx) (n)
%3:i32 = phi %0, 0:i32, 0:i32, %2
%4:i32 = shl 1:i32, %3
%5:i32 = addnsw 4294967295:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = or 14:i64, %2
%4:i64 = phi %0, %3, 14:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 1:i32, %4
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 2:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 2:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 0:i32, 512:i32
%4:i32 = phi %1, 0:i32, 1:i32, %3, 1:i32
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = shlnw %5, 10:i32
%7:i32 = or %4, %6
%8:i32 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000xxxxxx0x) (zn)
%2:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = addnw %1, %2
%4:i64 = zext %3
%5:i64 = shlnw %4, 32:i64
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 6
%3:i64 = phi %2, 2304:i64, 1776:i64, 1712:i64, 1728:i64, 1696:i64, 2288:i64
%4:i64 = phi %1, %3, 0:i64, 0:i64
%5:i64 = phi %0, %4, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000xxxxx) (n)
%2:i64 = zext %1
%3:i64 = addnw 4294967295:i64, %2
%4:i64 = phi %0, %3, 4294967327:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3 = block 6
%4 = block 2
%5:i8 = var (0000000x) (n)
%6 = block 2
%7:i8 = var (0000000x) (n)
%8 = block 2
%9:i8 = var (0000000x) (n)
%10 = block 2
%11:i8 = var (0000000x) (n)
%12:i8 = phi %3, %5, %7, %9, %11, 0:i8, 0:i8
%13:i8 = select %2, %12, 0:i8
%14:i8 = phi %1, %13, %12
%15 = block 6
%16:i1 = var
%17:i8 = select %16, 0:i8, %14
%18:i8 = phi %15, %14, 0:i8, 1:i8, %14, %14, %17
%19:i8 = phi %0, %14, %18, %14
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = and %1, %2
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = shlnw %4, 4:i32
%6:i32 = or %3, %5
%7:i32 = phi %0, %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (000000000000000000000000000000x000000000000000000000000000000000) (n)
%2:i64 = lshrexact %1, 33:i64
%3:i8 = trunc %2
%4:i8 = phi %0, 0:i8, %3, %3, 0:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 7
%4:i8 = phi %3, 0:i8, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8
%5:i8 = phi %0, %2, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i16 = and 16384:i16, %0
%2 = block 9
%3:i8 = var
%4:i16 = zext %3
%5:i16 = shlnw %4, 14:i16
%6:i16 = or %1, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var (xxxxxxx0)
%2:i8 = and 2:i8, %1
%3:i8 = addnw 2:i8, %2
%4:i8 = var (00000x00) (n)
%5:i8 = xor 4:i8, %4
%6:i8 = addnw 4:i8, %5
%7:i8 = xor 2:i8, %2
%8:i8 = addnw 2:i8, %7
%9:i8 = phi %0, %3, %6, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %1, 0:i32, %3
%5:i64 = zext %4
%6 = block 2
%7:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%8:i32 = var
%9:i64 = zext %8
%10:i64 = phi %6, %7, %9
%11:i64 = phi %0, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i1 = var
%3:i32 = select %2, 1:i32, 5:i32
%4:i32 = phi %1, 6:i32, 4:i32, 3:i32, 2:i32, %3, 3:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = lshr %0, 3:i32
%2:i64 = var
%3:i64 = lshrexact %2, 2:i64
%4:i32 = trunc %3
%5:i32 = udiv %1, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = or 4:i32, %3
%5:i32 = or 8:i32, %3
%6:i32 = phi %1, %4, %5
%7:i32 = phi %0, %6, 0:i32, 0:i32, %3, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 4:i32, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = var
%6:i1 = ult 1:i32, %5
%7:i32 = zext %6
%8:i32 = addnsw %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = select %1, 34:i32, 32:i32
%3:i32 = or 12:i32, %2
%4:i32 = or 4:i32, %2
%5:i32 = phi %0, %2, %3, %4, %2
%6:i8 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i32 = phi %1, 3:i32, 0:i32, 2:i32, 1:i32
%3:i32 = phi %0, %2, 8:i32, 8:i32, 8:i32, 8:i32, 8:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i32 = sext %0
%2:i32 = addnsw 4294967295:i32, %1
%3:i1 = ult %2, 3:i32
%4:i32 = select %3, %1, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i8 = var (0000000x) (n)
%3:i1 = ne 0:i8, %2
%4:i32 = select %3, 2582:i32, 2585:i32
%5:i8 = var (0000x000) (n)
%6:i32 = zext %5
%7:i32 = addnw 138:i32, %6
%8:i1 = var
%9:i1 = var
%10:i1 = phi %1, %8, 0:i1, %9, 0:i1, 0:i1
%11:i32 = select %10, 810:i32, 807:i32
%12:i32 = select %10, 812:i32, 809:i32
%13:i32 = phi %0, %4, %7, %11, %12, 2586:i32, 147:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i1 = eq 15:i32, %1
%3 = block 2
%4:i32 = var (000000000000000000000000000000x1) (zn)
%5:i32 = phi %3, %4, 3:i32
%6:i32 = select %2, 1:i32, %5
%7:i1 = var
%8:i1 = var
%9:i1 = or %7, %8
%10:i32 = select %9, 1:i32, %6
%11:i32 = phi %0, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %5
%7 = block 2
%8:i8 = phi %7, %3, %5
%9:i8 = phi %0, %6, %6, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 9:i64, 8:i64
%3:i64 = phi %0, %2, 20:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000xxxxxx) (n)
%2:i64 = addnw 65:i64, %1
%3:i32 = trunc %2
%4:i64 = var (0000000000000000000000000000000000000000000000000000000000xxxxxx) (n)
%5:i32 = trunc %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %3, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 0:i8
%3 = block 6
%4:i8 = phi %3, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = add 4294967294:i32, %1
%3:i1 = ult %2, 4:i32
%4:i32 = addnsw 4294967295:i32, %1
%5:i32 = select %3, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000xxx) (n)
%1:i1 = ult 1:i32, %0
%2:i32 = sext %1
%3:i32 = addnsw %0, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, %3, 0:i64
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw 4:i64, %1
%3:i64 = phi %0, 0:i64, 0:i64, 0:i64, %2
%4:i64 = addnsw 56:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = ne 0:i32, %1
%3:i64 = var
%4:i64 = lshr %3, 32:i64
%5:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i64 = and %4, %5
%7:i64 = select %2, %6, 0:i64
%8:i1 = var
%9:i64 = select %8, %4, 0:i64
%10:i64 = phi %0, %7, 0:i64, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %1, %3, %3, %3, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000000000000000000011111111xxxxxxxx) (zn)
%3 = block 2
%4:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 16711680:i64, %5
%7:i64 = phi %0, %6, %5
%8:i64 = or 4278190080:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 23
%1 = block 2
%2 = block 3
%3:i1 = var
%4:i32 = select %3, 162:i32, 0:i32
%5 = block 3
%6:i1 = var
%7:i32 = select %6, 163:i32, 0:i32
%8:i32 = phi %1, %4, %7
%9:i32 = phi %0, %8, 161:i32, 160:i32, 96:i32, 95:i32, 94:i32, 160:i32, 161:i32, 97:i32, 162:i32, 160:i32, 162:i32, 162:i32, 162:i32, 163:i32, 161:i32, 163:i32, 163:i32, 163:i32, 160:i32, 162:i32, 161:i32, 163:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 65535:i32, %0
%2:i32 = var
%3:i32 = udiv %1, %2
%4:i32 = var
%5:i32 = and 65535:i32, %4
%6:i32 = udiv %5, %2
%7:i32 = or %3, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 4
%1:i16 = var (0xxxxxxxxxxxxxxx) (n)
%2:i32 = zext %1
%3:i32 = phi %0, %2, 34:i32, 37:i32, %2
%4:i16 = trunc %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = select %1, 18:i32, 16:i32
%3:i32 = or 12:i32, %2
%4:i32 = or 4:i32, %2
%5:i32 = phi %0, %2, %3, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = xor 1:i8, %2
%4:i8 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshr %0, 8:i64
%2:i64 = and 255:i64, %1
%3:i64 = lshr 16777279:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%2:i32 = phi %0, %1, 65535:i32
%3:i16 = var
%4:i32 = zext %3
%5:i32 = and %2, %4
%6:i32 = var
%7:i32 = lshr %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i1 = var
%2:i16 = zext %1
%3:i16 = shlnw %2, 12:i16
%4:i16 = phi %0, 0:i16, 0:i16, 0:i16, 0:i16, 4096:i16, 4096:i16, 0:i16, %3, 0:i16
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 3
%2:i32 = var
%3 = block 3
%4:i32 = var
%5:i32 = var
%6 = block 5
%7:i32 = var
%8:i32 = var
%9:i32 = phi %0, 8:i32, %2, %4, %5, %5, %7, %7, %8
%10:i64 = zext %9
%11:i64 = var
%12:i64 = udiv %10, %11
infer %12

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 8
%3:i32 = phi %2, 5:i32, 3:i32, 1:i32, 0:i32, 1:i32, 5:i32, 3:i32, 0:i32
%4:i1 = var
%5:i32 = select %4, 2:i32, %3
%6:i32 = phi %1, %3, %5
%7:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%8:i1 = eq 26:i32, %7
%9:i32 = select %8, 4:i32, %6
%10:i32 = phi %0, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, 2:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i64 = phi %2, 4:i64, 0:i64
%4:i64 = phi %1, 5:i64, %3
%5:i64 = phi %0, 16:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = select %0, 63:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i64 = phi %1, 8:i64, 3:i64, 4:i64, 5:i64
%3 = block 2
%4 = block 2
%5:i64 = phi %4, 12:i64, 0:i64
%6 = block 2
%7:i32 = var
%8:i64 = zext %7
%9:i64 = phi %3, %5, %8
%10:i64 = phi %0, %2, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = add %0, %1
%3:i64 = and 4294967295:i64, %2
%4:i64 = var
%5:i64 = udiv %3, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var (00000000000000000000000000000xxx) (n)
%4:i32 = and %2, %3
%5:i32 = var (00000000000000000000000000xx0000) (n)
%6:i32 = or %4, %5
%7:i32 = phi %1, %6, %4
%8:i32 = and 4294966847:i32, %7
%9:i32 = var (00000000000000000000000000000xxx) (n)
%10:i32 = shlnw %9, 6:i32
%11:i32 = or %8, %10
%12:i32 = phi %0, %11, %7
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i32 = var
%2:i1 = ult 27:i32, %1
%3:i64 = var (zp)
%4:i64 = and 4294967295:i64, %3
%5:i64 = select %2, 2:i64, %4
%6:i64 = phi %0, %5, 4:i64, 0:i64, 0:i64, 0:i64, 4:i64, 4:i64
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i1 = eq %2, %3
%5:i8 = zext %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %1, %7, 1:i8, 1:i8, 1:i8
%9:i8 = phi %0, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = var
%2:i32 = var
%3:i32 = select %0, %1, %2
%4:i1 = ult 15:i32, %3
%5:i32 = select %4, 0:i32, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 0:i32
%3:i64 = zext %2
%4:i64 = var
%5:i64 = udiv %3, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i1 = var
%1 = block 5
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i64 = zext %2
%4:i64 = shl 1:i64, %3
%5:i64 = select %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32
%3 = block 3
%4:i32 = phi %3, 0:i32, 0:i32, 1:i32
%5:i32 = phi %0, %2, %4, 0:i32, 0:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %1, %3, %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = or %5, %7
%9:i8 = phi %0, %8, %5
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 2
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5 = block 2
%6:i16 = var
%7:i32 = zext %6
%8:i32 = phi %5, %7, 0:i32
%9 = block 2
%10:i16 = var
%11:i32 = zext %10
%12:i32 = phi %9, %11, 0:i32
%13 = block 2
%14:i16 = var
%15:i32 = zext %14
%16:i32 = phi %13, %15, 0:i32
%17 = block 2
%18:i16 = var
%19:i32 = zext %18
%20:i32 = phi %17, %19, 0:i32
%21 = block 2
%22:i16 = var
%23:i32 = zext %22
%24:i32 = phi %21, %23, 0:i32
%25:i32 = phi %0, %4, %8, 0:i32, 0:i32, %12, 0:i32, 0:i32, %16, 0:i32, %20, %20, %24, %24, %24
infer %25

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 6
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 15:i64, 17:i64
%3 = block 2
%4:i64 = phi %3, 16:i64, 3:i64
%5:i64 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4 = block 2
%5 = block 2
%6:i8 = phi %5, %3, 0:i8
%7:i8 = phi %4, 0:i8, %6
%8:i8 = phi %1, %3, %7
%9:i8 = phi %0, %8, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = ult 9:i64, %0
%2:i32 = trunc %0
%3:i32 = select %1, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = xor 1:i32, %1
%3:i32 = phi %0, 0:i32, %2, 2:i32, 3:i32
%4:i64 = sext %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 3:i32, 3:i32, 3:i32, 0:i32
%3:i32 = phi %0, %2, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i16 = var (0xxxxxxxxxxxxxxx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, %3, 34:i32, 37:i32, %3
%5:i32 = phi %0, 33:i32, %4, 32:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000000000000000000011111111xxxxxxxx) (zn)
%3 = block 2
%4:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 16711680:i64, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i8 = phi %1, 0:i8, 1:i8, 3:i8, 4:i8, 2:i8, 8:i8, 6:i8, 7:i8
%3:i8 = phi %0, %2, 5:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 8
%2:i32 = phi %1, 8:i32, 72:i32, 69:i32, 5:i32, 2:i32, 1:i32, 1:i32, 1:i32
%3:i32 = xor 13:i32, %2
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i1 = eq 0:i32, %4
%6:i32 = xor 3:i32, %2
%7:i32 = select %5, 0:i32, %6
%8:i32 = phi %0, %2, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = phi %2, 2:i64, %4
%6:i64 = phi %1, 4:i64, %5
%7:i64 = phi %0, 3:i64, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i64 = phi %2, 10:i64, 13:i64
%4:i64 = phi %1, 18:i64, %3
%5:i64 = phi %0, 14:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 2:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = or 2:i32, %1
%3:i32 = phi %0, 0:i32, 1:i32, %2
%4:i32 = xor 3:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000000000000000000000000xxxxxx) (n)
%1:i32 = trunc %0
%2:i32 = subnsw 64:i32, %1
%3:i16 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, 0:i32, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 26
%1:i1 = var
%2:i32 = select %1, 7556:i32, 7554:i32
%3:i32 = select %1, 8026:i32, 8024:i32
%4:i1 = var
%5:i32 = var (000000000000000000011101011xxx01) (zn)
%6:i32 = select %4, 7544:i32, %5
%7:i32 = var (000000000000000000011101011x01x0) (zn)
%8:i32 = select %4, 7541:i32, %7
%9:i32 = select %1, %6, %8
%10:i32 = var (0000000000000000000111110xxx1x11) (zn)
%11:i32 = select %4, 8014:i32, %10
%12:i32 = var (0000000000000000000111110xxx1xx0) (zn)
%13:i32 = select %4, 8011:i32, %12
%14:i32 = select %1, %11, %13
%15:i32 = select %1, 1300:i32, 2851:i32
%16:i32 = select %1, 1720:i32, 1712:i32
%17:i32 = var
%18:i1 = slt 8:i32, %17
%19:i32 = var (0000000000000000000xx11xxx001x00) (zn)
%20:i32 = select %18, 7873:i32, %19
%21:i32 = var (0000000000000000000xx11xxx00xx11) (zn)
%22:i32 = select %18, 7871:i32, %21
%23:i32 = select %1, %20, %22
%24:i32 = select %1, 1497:i32, 1496:i32
%25:i32 = select %1, 1298:i32, 2844:i32
%26:i32 = select %1, 1213:i32, 1215:i32
%27:i32 = select %1, 1700:i32, 1687:i32
%28:i32 = var (0000000000000000000xx111000x1x10) (zn)
%29:i32 = select %18, 7940:i32, %28
%30:i32 = var (0000000000000000000xx111000x1x01) (zn)
%31:i32 = select %18, 7938:i32, %30
%32:i32 = select %1, %29, %31
%33:i32 = select %1, 1295:i32, 2843:i32
%34:i32 = select %1, 1208:i32, 1210:i32
%35:i32 = select %1, 1218:i32, 1220:i32
%36:i32 = select %1, 1674:i32, 1667:i32
%37:i32 = select %1, 1742:i32, 1735:i32
%38:i32 = select %1, 1741:i32, 1734:i32
%39:i1 = var
%40:i32 = select %39, 7566:i32, 1751:i32
%41:i32 = select %18, 7532:i32, %40
%42:i32 = select %39, 7565:i32, 1750:i32
%43:i32 = select %18, 7529:i32, %42
%44:i32 = select %39, 8036:i32, 1841:i32
%45:i32 = select %18, 7532:i32, %44
%46:i32 = select %39, 8035:i32, 1840:i32
%47:i32 = select %18, 7999:i32, %46
%48:i32 = phi %0, %2, %3, %9, %14, %15, %16, %23, %24, %25, %26, %27, %32, %33, %34, %35, %36, %37, %38, 7531:i32, %41, 7528:i32, %43, 8001:i32, %45, 7998:i32, %47
infer %48

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i32 = addnw 25:i32, %2
%4:i32 = phi %0, 29:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i1 = var
%3:i32 = select %2, 3:i32, 1:i32
%4:i32 = phi %1, 3:i32, %3, 3:i32, 1:i32, 3:i32
%5:i32 = phi %0, %4, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2 = block 4
%3:i32 = phi %2, 13:i32, 14:i32, 15:i32, 13:i32
%4:i32 = and 7:i32, %3
%5:i32 = select %1, %4, %3
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000xxxxxxxxxx) (n)
%1:i32 = shlnw %0, 2:i32
%2:i16 = var (00000000000000xx) (n)
%3:i32 = zext %2
%4:i32 = or %1, %3
%5:i16 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2, %2
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = shl %0, 1:i32
%2:i32 = udiv 64:i32, %1
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3:i8 = var
%4:i8 = and 1:i8, %3
%5:i8 = xor 1:i8, %4
%6:i8 = phi %0, %2, %5, %2
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshrexact %0, 5:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = sdiv %2, 2:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = zext %0
%2:i32 = shl 4:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8, 0:i8
%5 = block 3
%6:i8 = var (0000000x) (n)
%7:i8 = phi %5, %6, 0:i8, 0:i8
%8:i8 = phi %1, %4, %7
%9:i8 = phi %0, 0:i8, %8, %4, %4, %7, %7, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4
%6:i8 = phi %1, 0:i8, %5, %5, 0:i8
%7 = block 6
%8:i8 = phi %7, 0:i8, %5, %5, %5, %5, 0:i8
%9:i8 = phi %0, 0:i8, 0:i8, 1:i8, %6, %8, 1:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000000xxx) (n)
%2:i32 = phi %0, %1, 0:i32
%3:i5 = trunc %2
%4:i5 = lshr 3:i5, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000xxx) (n)
%1:i1 = var
%2:i32 = sext %1
%3:i32 = addnsw %0, %2
%4:i32 = addnsw 4:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = and 7:i32, %2
%4:i32 = var
%5:i32 = and 1:i32, %4
%6:i32 = xor 1:i32, %5
%7:i32 = phi %0, 3:i32, %3, %3, 2:i32, 0:i32, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 16:i32, 32:i32, 64:i32
%3 = block 3
%4:i32 = phi %3, 16:i32, 32:i32, 64:i32
%5:i32 = phi %0, %2, %4, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 13:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i32 = trunc %1
%3:i32 = addnw 1:i32, %2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i32 = trunc %4
%6:i32 = addnw %3, %5
%7:i32 = addnw 1:i32, %5
%8:i32 = addnw %2, %5
%9:i32 = phi %0, %6, %7, 3:i32, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 1:i32, 5:i32
%5:i32 = phi %1, 5:i32, %4
%6 = block 2
%7:i1 = var
%8:i1 = phi %6, 0:i1, %7
%9:i32 = zext %8
%10:i32 = select %3, 1:i32, 3:i32
%11:i32 = phi %1, 5:i32, %10
%12 = block 5
%13:i32 = var (00000000000000000000000000000x00) (n)
%14:i32 = or 3:i32, %13
%15:i32 = var (00000000000000000000000000000x00) (n)
%16:i32 = or 3:i32, %15
%17:i32 = var (00000000000000000000000000000xxx) (n)
%18:i32 = or 5:i32, %17
%19:i32 = phi %12, 1:i32, 0:i32, %14, %16, %18
%20:i32 = phi %0, 7:i32, 7:i32, %5, %9, %11, %11, %11, %11, %19
infer %20

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 2
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %4, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 10
%3:i32 = var (00000000000000000000000000000xxx) (n)
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = phi %2, 4:i32, 2:i32, 8:i32, 5:i32, 9:i32, 6:i32, 3:i32, 0:i32, %3, %4
%6:i32 = phi %1, %5, 0:i32
%7:i32 = phi %0, 0:i32, 1:i32, %6, %6, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 40
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1074:i32, 1041:i32, 1050:i32, 1065:i32, 1086:i32, 1077:i32, 1080:i32, 1083:i32, 1063:i32, 1057:i32, 1061:i32, 1055:i32, 2181:i32, 2148:i32, 2157:i32, 2172:i32, 2193:i32, 2184:i32, 2187:i32, 2190:i32, 2168:i32, 2162:i32, 1157:i32, 1151:i32, 1154:i32, 1173:i32, 1161:i32, 1167:i32, 2246:i32, 2240:i32, 2243:i32, 2262:i32, 2250:i32, 2256:i32, 1101:i32, 1089:i32, 1095:i32, %3, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %2, %2, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2, 1:i1
%4 = block 2
%5:i32 = var (0000000000000000000x00x0x00x00x0) (n)
%6:i32 = phi %4, %5, 4754:i32
%7:i32 = select %3, 0:i32, %6
%8:i32 = phi %0, %7, 0:i32, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 0:i32, 312:i32
%4:i32 = phi %1, %3, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000xxxxxxxxxxxxxx) (n)
%2:i32 = and 256:i32, %1
%3:i32 = or 96:i32, %2
%4:i32 = or 32:i32, %2
%5:i32 = phi %0, %3, %3, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i8 = var (0010xxxx) (zn)
%2:i8 = addnsw 237:i8, %1
%3:i45 = zext %2
%4:i45 = lshr 18692242997505:i45, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ne 0:i32, %0
%2:i32 = select %1, 6:i32, 5:i32
%3:i32 = addnsw 4294967291:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 86
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 2:i32, 2:i32
%3:i1 = var
%4:i32 = select %3, 2:i32, 1:i32
%5:i1 = var
%6:i32 = select %5, 2:i32, 1:i32
%7:i1 = var
%8:i32 = select %7, 2:i32, 1:i32
%9:i1 = var
%10:i32 = select %9, 2:i32, 1:i32
%11:i1 = var
%12:i32 = select %11, 2:i32, 1:i32
%13:i1 = var
%14:i32 = select %13, 2:i32, 1:i32
%15:i1 = var
%16:i32 = select %15, 2:i32, 1:i32
%17:i1 = var
%18:i32 = select %17, 2:i32, 1:i32
%19:i1 = var
%20:i32 = select %19, 2:i32, 1:i32
%21:i1 = var
%22:i32 = select %21, 2:i32, 1:i32
%23:i1 = var
%24:i32 = select %23, 2:i32, 1:i32
%25:i1 = var
%26:i32 = select %25, 2:i32, 1:i32
%27:i1 = var
%28:i32 = select %27, 2:i32, 1:i32
%29:i1 = var
%30:i32 = select %29, 2:i32, 1:i32
%31:i1 = var
%32:i32 = select %31, 2:i32, 1:i32
%33:i1 = var
%34:i32 = select %33, 2:i32, 1:i32
%35:i32 = phi %0, 1:i32, %2, %4, %6, %8, %10, %12, %14, %16, %18, %20, %22, 1:i32, 1:i32, %24, %26, %28, %30, 0:i32, %32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %34, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 1:i32, 1:i32, 1:i32, 2:i32, 2:i32, 2:i32, 2:i32, 1:i32, 1:i32, 2:i32, 2:i32, 2:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %35

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = and 65535:i32, %1
%3:i32 = var
%4:i32 = udiv %2, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = add %0, %1
%3:i64 = var
%4:i64 = and 4294967295:i64, %3
%5:i64 = urem %2, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = var
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %0, %2, 0:i32, 0:i32, %4, %4
%6:i64 = zext %5
%7:i64 = lshr 1639:i64, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ctlz %0
%2:i64 = subnsw 64:i64, %1
%3:i64 = addnw 4294967295:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = cttz %1
%3:i32 = shlnw %2, 3:i32
%4:i32 = phi %0, %3, 256:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (00xxxxxx) (n)
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = ashr %0, 31:i32
%2:i32 = addnsw 16:i32, %1
%3:i32 = and 4294967281:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var
%2:i1 = eq 11:i8, %1
%3:i1 = var
%4:i32 = select %3, 183:i32, 412:i32
%5:i32 = select %2, 184:i32, %4
%6:i32 = phi %0, 412:i32, %5, 412:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 32
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 7844:i32, 7842:i32
%4:i32 = select %2, 7643:i32, 7665:i32
%5:i32 = select %2, 7750:i32, 7805:i32
%6:i32 = select %2, 7849:i32, 7847:i32
%7:i32 = select %2, 7498:i32, 7483:i32
%8:i32 = select %2, 7968:i32, 7953:i32
%9:i32 = select %2, 7854:i32, 7852:i32
%10:i32 = select %2, 7541:i32, 7524:i32
%11:i32 = select %2, 8011:i32, 7994:i32
%12:i1 = var
%13:i32 = select %12, 7846:i32, 1787:i32
%14:i32 = select %2, 7843:i32, %13
%15:i32 = select %12, 7669:i32, 1766:i32
%16:i32 = select %2, 7632:i32, %15
%17:i32 = select %12, 7809:i32, 1770:i32
%18:i32 = select %2, 7739:i32, %17
%19:i32 = select %12, 7851:i32, 1790:i32
%20:i32 = select %2, 7848:i32, %19
%21:i32 = select %12, 7520:i32, 1746:i32
%22:i32 = select %2, 7487:i32, %21
%23:i32 = select %12, 7990:i32, 1836:i32
%24:i32 = select %2, 7957:i32, %23
%25:i32 = select %12, 7856:i32, 1791:i32
%26:i32 = select %2, 7853:i32, %25
%27:i32 = select %12, 7565:i32, 1750:i32
%28:i32 = select %2, 7528:i32, %27
%29:i32 = select %12, 8035:i32, 1840:i32
%30:i32 = select %2, 7998:i32, %29
%31:i32 = var
%32:i1 = slt 8:i32, %31
%33:i32 = select %12, 7879:i32, 1803:i32
%34:i32 = select %32, 7871:i32, %33
%35:i32 = select %12, 7949:i32, 1817:i32
%36:i32 = select %32, 7938:i32, %35
%37 = block 2
%38:i1 = var
%39:i1 = var
%40:i1 = and %38, %39
%41:i32 = select %40, 1788:i32, 1712:i32
%42:i32 = select %40, 1789:i32, 1687:i32
%43:i1 = var
%44:i32 = select %38, 7855:i32, 7554:i32
%45:i32 = select %43, %44, 8024:i32
%46:i32 = select %38, 7850:i32, 7509:i32
%47:i32 = select %43, %46, 7979:i32
%48:i32 = select %38, 7845:i32, 7654:i32
%49:i32 = select %43, %48, 7761:i32
%50:i32 = phi %0, %3, %4, %5, %6, %7, %8, %9, %10, %11, %14, %16, %18, %20, %22, %24, %26, %28, %30, %34, %36, %41, %42, 1667:i32, 1734:i32, 1734:i32, 1793:i32, 2843:i32, 1792:i32, 2844:i32, %45, %47, %49
infer %50

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = phi %1, 1:i8, %4
%6 = block 3
%7:i8 = phi %6, 1:i8, %5, %5
%8:i8 = phi %0, %5, 1:i8, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000xxxxxxxxxxxxxxx) (n)
%3:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%4:i32 = phi %1, %2, %3
%5:i32 = shlnsw %4, 6:i32
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1132:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2:i1 = var
%3:i32 = select %2, 7:i32, 0:i32
%4:i1 = var
%5:i32 = select %4, 7:i32, 0:i32
%6:i32 = phi %1, 4:i32, 2:i32, 8:i32, 5:i32, 9:i32, 6:i32, 3:i32, 0:i32, %3, %5
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i1 = var
%3:i8 = zext %2
%4:i8 = and %1, %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 1:i8, %4, %4, %4, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 2:i32, 2:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = add 7:i32, %2
%4:i32 = lshr %3, 3:i32
%5:i32 = mul %0, %4
%6:i32 = var
%7:i32 = lshr %6, 3:i32
%8:i32 = urem %5, %7
%9:i32 = addnw %8, %4
infer %9

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8, 0:i8, 1:i8, 1:i8, 0:i8
%3:i1 = var
%4:i8 = select %3, 1:i8, %2
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 14:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 4294967280:i32, %0
%2:i32 = and 4293918720:i32, %1
%3:i32 = sub %1, %2
%4 = block 2
%5:i32 = var (00000000000000000000xxxxxxxx0000) (n)
%6:i32 = var
%7:i32 = phi %4, %5, %6
%8:i32 = urem %3, %7
%9:i32 = sub %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%4:i32 = phi %2, %3, 0:i32, 0:i32, 0:i32, 0:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %1, %4, %6
%8:i8 = phi %0, %7, 1:i8, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%3:i32 = phi %1, %2, 0:i32, 0:i32, 0:i32, 0:i32
%4:i32 = phi %0, 0:i32, %3
%5:i32 = shlnsw %4, 8:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000xxx) (zn)
%1:i32 = addnsw 4294967295:i32, %0
%2:i64 = var
%3:i32 = trunc %2
%4:i32 = and %1, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = var (0000xxx0) (n)
%3:i8 = var (000x0000) (n)
%4:i8 = or %2, %3
%5:i8 = or 1:i8, %4
%6:i8 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1x) (z)
%2:i1 = eq 54:i32, %1
%3:i32 = var
%4:i32 = and 63:i32, %3
%5:i32 = select %2, 12:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 2:i32, 3:i32
%3:i32 = phi %0, 3:i32, %2, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %1, %4, %6
%8:i8 = phi %0, %7, 1:i8, 1:i8, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %5, %4, %6
%8:i8 = phi %1, %4, %7
%9:i8 = phi %0, 0:i8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = cttz %1
%3:i32 = trunc %2
%4:i32 = phi %0, %3, 32:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8
%4 = block 2
%5:i8 = phi %4, %3, 1:i8
%6:i8 = phi %1, %3, %5, 1:i8
%7:i8 = phi %0, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = var
%3:i8 = lshr %2, 4:i8
%4:i8 = and 1:i8, %3
%5 = block 3
%6 = block 2
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %5, %8, 0:i8, 0:i8
%10:i8 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8, %3, 0:i8
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 8
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3 = block 8
%4:i8 = phi %3, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8
%5 = block 2
%6:i8 = phi %5, 0:i8, 1:i8
%7 = block 2
%8:i8 = phi %7, 0:i8, 1:i8
%9:i8 = phi %0, %2, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw 4:i64, %1
%3:i64 = phi %0, 0:i64, 0:i64, 0:i64, %2
%4:i64 = addnsw 20:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 11:i64, 14:i64
%3:i64 = phi %0, 19:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 1:i32, 3:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxx) (n)
%1:i32 = trunc %0
%2:i32 = var
%3:i1 = slt %1, %2
%4:i32 = select %3, %2, %1
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i32 = var
%6:i1 = eq 0:i32, %5
%7:i8 = select %6, 1:i8, %4
%8:i8 = phi %0, 0:i8, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshrexact %0, 2:i64
%2:i32 = trunc %1
%3:i32 = udiv 16:i32, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 65:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 6
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = phi %2, 0:i32, %3
%5:i32 = phi %1, 1:i32, %4, %4, %4, %4, %4
%6 = block 5
%7:i32 = phi %6, 2:i32, %5, 1:i32, 1:i32, 0:i32
%8:i32 = phi %0, %5, %5, 2:i32, %7, %7, 2:i32, %5, %5, %5, %5
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 1:i8, 1:i8, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%1:i32 = lshr %0, 6:i32
%2:i1 = eq 0:i32, %1
%3:i32 = addnsw 4294967295:i32, %1
%4:i32 = select %2, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = select %1, 18:i32, 16:i32
%3:i32 = or 12:i32, %2
%4:i32 = or 4:i32, %2
%5:i32 = phi %0, %2, %3, %4, %2
%6:i8 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000xxxx0) (n)
%1:i32 = shl 4294967040:i32, %0
%2 = block 3
%3:i32 = var (000000000000000000000000000xxxx0) (n)
%4:i32 = lshr 4294967040:i32, %3
%5:i32 = or %1, %4
%6:i64 = var
%7:i32 = trunc %6
%8:i32 = ashr %7, 31:i32
%9:i32 = xor %8, %7
%10:i32 = and %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3:i32 = var (000000xxxxxxxx000000000000000000) (n)
%4:i1 = eq 9699328:i32, %3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = select %4, %6, %2
%8:i8 = phi %0, %2, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000000x0) (n)
%2:i32 = xor 2:i32, %1
%3:i32 = addnw 3307:i32, %2
%4:i32 = phi %0, 3307:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i16 = var (000000000x000000) (n)
%3:i16 = var (000000000x000000) (n)
%4:i16 = or %2, %3
%5:i16 = xor 64:i16, %4
%6:i16 = phi %0, 0:i16, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 32
%1:i64 = var
%2:i64 = lshr %1, 32:i64
%3:i64 = var
%4:i64 = lshr %3, 32:i64
%5:i1 = var
%6:i64 = zext %5
%7:i64 = var
%8:i64 = lshr %7, 32:i64
%9:i64 = var
%10:i64 = lshr %9, 32:i64
%11:i64 = var
%12:i64 = lshr %11, 32:i64
%13 = block 2
%14:i64 = var
%15:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%16:i64 = phi %13, %14, %15
%17:i64 = lshr %16, 32:i64
%18:i64 = var
%19:i64 = lshr %18, 32:i64
%20:i64 = var
%21:i64 = lshr %20, 32:i64
%22:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%23:i64 = or %21, %22
%24:i64 = and 1:i64, %23
%25:i64 = var
%26:i64 = lshr %25, 32:i64
%27:i64 = var
%28:i64 = lshr %27, 32:i64
%29:i64 = var
%30:i64 = lshr %29, 32:i64
%31:i8 = var
%32:i1 = ne 0:i8, %31
%33:i64 = zext %32
%34:i64 = var
%35:i64 = lshr %34, 32:i64
%36:i64 = var
%37:i64 = lshr %36, 32:i64
%38:i64 = var
%39:i64 = lshr %38, 32:i64
%40:i64 = var
%41:i64 = lshr %40, 32:i64
%42 = block 3
%43:i1 = var
%44:i64 = zext %43
%45:i64 = var
%46:i64 = lshr %45, 32:i64
%47:i64 = phi %42, %44, %46, %46
%48:i8 = var
%49:i1 = ne 0:i8, %48
%50:i64 = zext %49
%51:i1 = var
%52:i1 = var
%53:i1 = and %51, %52
%54:i64 = zext %53
%55:i64 = phi %0, %2, %4, %6, %8, %10, %12, %17, %19, %24, %21, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, %26, %28, %30, %33, 1:i64, %35, %37, %39, %41, %47, %50, %54, %21
infer %55

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = phi %0, 0:i64, %1
%3:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = xor 18446744073709551615:i64, %3
%5:i64 = and %2, %4
%6:i64 = subnsw %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %0, %2, %2, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2:i64 = zext %1
%3:i64 = shlnw %2, 48:i64
%4:i64 = phi %0, 0:i64, 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 7
%3:i32 = var (0000000000000000000001001x0x0000) (zn)
%4:i32 = phi %2, %3, 1168:i32, 1168:i32, 1136:i32, 1120:i32, 1104:i32, 1136:i32
%5:i32 = phi %1, %4, 0:i32, 0:i32
%6:i32 = phi %0, %5, 0:i32, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (000xx000) (n)
%3:i8 = or 36:i8, %2
%4:i8 = phi %1, %3, 20:i8
%5:i8 = phi %0, %4, 20:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i64 = var (0000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxx) (n)
%3:i64 = select %1, %2, 0:i64
%4:i64 = phi %0, 32767:i64, 32767:i64, 0:i64, %3
%5:i8 = var (0000000x) (n)
%6:i64 = zext %5
%7:i64 = shlnw %6, 15:i64
%8:i64 = or %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8, 0:i8, 1:i8, %3
%5:i16 = var (xxxxxxxxxxxxxxx1) (z)
%6:i1 = eq 11:i16, %5
%7:i8 = zext %6
%8:i8 = phi %0, %4, %7, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = or 15:i64, %2
%4:i64 = phi %0, %3, 15:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = addnsw 4294967283:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 1017903189985027:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i72 = var (00000000000000000000000000000000000000000000000000000000000000000x000000) (n)
%4:i1 = ne 0:i72, %3
%5:i32 = var (00000000000000000000000xx0111010) (zn)
%6:i32 = select %4, %5, 32:i32
%7:i32 = or 2048:i32, %6
%8:i32 = select %2, %7, %6
%9:i32 = select %2, 278:i32, 4:i32
%10:i32 = select %4, %9, 2:i32
%11:i32 = select %4, 42:i32, 8:i32
%12:i32 = phi %0, %8, %10, 0:i32, 638:i32, 4096:i32, 64:i32, 16:i32, 20:i32, 1:i32, 1024:i32, %11, 2986:i32
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = phi %1, 1:i8, %4
%6:i8 = phi %0, 1:i8, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = and 4294967295:i64, %0
%2:i1 = eq %0, %1
%3:i64 = select %2, %0, 4096:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = and 4:i32, %1
%3:i32 = or 3:i32, %2
%4:i32 = var (0000000000000000000000000000xxxx) (n)
%5:i32 = and 4:i32, %4
%6:i32 = or 3:i32, %5
%7:i32 = var
%8:i32 = lshr %7, 29:i32
%9:i32 = or 5:i32, %8
%10:i32 = phi %0, 1:i32, 0:i32, %3, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 12
%2:i1 = var
%3:i32 = select %2, 3:i32, 1:i32
%4:i32 = phi %1, %3, 3:i32, 3:i32, 3:i32, 3:i32, 2:i32, 2:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%5:i32 = phi %0, %4, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4
%6:i8 = phi %1, 0:i8, %5
%7:i8 = phi %0, %6, 0:i8, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%1:i32 = trunc %0
%2:i32 = shlnw %1, 1:i32
%3:i32 = xor 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var
%2:i1 = eq 328:i16, %1
%3:i32 = select %2, 4:i32, 1:i32
%4 = block 15
%5:i1 = var
%6:i32 = select %5, 0:i32, 4:i32
%7:i32 = phi %4, %6, 0:i32, 4:i32, 2:i32, 3:i32, 0:i32, 4:i32, 4:i32, 4:i32, 4:i32, 4:i32, 4:i32, 4:i32, 2:i32, 3:i32
%8:i32 = phi %0, %3, %7, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 18
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5 = block 2
%6:i8 = phi %5, 1:i8, 0:i8
%7 = block 2
%8:i8 = phi %7, 1:i8, 0:i8
%9:i8 = phi %0, %2, %4, %6, %8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i8 = select %2, 12:i8, 14:i8
%4:i1 = var
%5:i8 = select %4, 15:i8, 11:i8
%6:i8 = select %2, 10:i8, %5
%7:i8 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 18874368:i32, %0
%2:i1 = eq 2097152:i32, %1
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = xor 3:i32, %4
%6:i32 = phi %3, %5, 3:i32
%7:i32 = select %2, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1170:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (000000000000000000000000000xxxx0) (n)
%3:i32 = var (000000000000000000000000000xxxx0) (n)
%4:i32 = phi %1, %2, %3, %2
%5 = block 3
%6:i32 = var (000000000000000000000000000xxxx0) (n)
%7:i32 = var (000000000000000000000000000xxxx0) (n)
%8:i32 = phi %5, %6, %7, %6
%9:i32 = phi %0, %4, %8
%10:i32 = shlnw %9, 7:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xxxx) (n)
%1:i32 = var (00000000000000000000000xxxxx0000) (n)
%2:i32 = or %0, %1
%3:i16 = trunc %2
%4:i16 = or 16:i16, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2 = block 2
%3 = block 2
%4:i32 = phi %3, 16:i32, 8:i32
%5 = block 5
%6:i32 = phi %5, 2:i32, 1:i32, 4:i32, 4:i32, 4:i32
%7:i32 = phi %2, %4, %6
%8:i32 = urem %1, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ult %0, 4:i32
%2:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%3:i32 = lshr 1246316593:i32, %2
%4:i8 = trunc %3
%5:i8 = select %1, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 6
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5 = block 3
%6 = block 4
%7:i8 = phi %6, %4, %4, 1:i8, 1:i8
%8:i8 = phi %5, %7, %4, %4
%9:i8 = phi %0, %4, %4, %4, %4, %8, %4
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 6
%2 = block 4
%3:i8 = phi %2, 0:i8, 0:i8, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 1:i8, %3
%5:i8 = phi %1, 1:i8, %4, %4, %4, %4
%6:i8 = phi %0, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnw 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 255:i32, %1
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = shlnw %3, 8:i32
%5:i32 = or %2, %4
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (000000000000000000000000x0x00000) (n)
%2:i32 = or 18:i32, %1
%3:i32 = or 3:i32, %1
%4:i32 = or 2:i32, %1
%5:i32 = phi %0, %2, %3, %4
%6:i32 = var (00000000000000xxxxxxxxxxxxxxxx00) (n)
%7:i32 = and 64:i32, %6
%8:i32 = xor 64:i32, %7
%9:i32 = or %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000xxx00000) (n)
%2:i1 = eq 0:i32, %1
%3:i1 = var
%4:i32 = select %3, 32:i32, 0:i32
%5:i32 = or 128:i32, %4
%6:i32 = select %2, %4, %5
%7 = block 3
%8:i32 = var (000000000000000000000000x0x10010) (zn)
%9:i32 = var (000000000000000000000000x0x00011) (zn)
%10:i32 = var (000000000000000000000000x0x00010) (zn)
%11:i32 = phi %7, %8, %9, %10
%12:i32 = var (0000000000000000000000000x000000) (n)
%13:i32 = xor 64:i32, %12
%14:i32 = or %11, %13
%15:i32 = phi %0, %6, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2:i32 = phi %1, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 1:i32, 2:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i16 = trunc %0
%2:i16 = and 1:i16, %1
%3:i16 = var (000000000000xxx0) (n)
%4:i16 = var (000000000000000x) (n)
%5:i16 = or %3, %4
%6:i16 = shl %5, 1:i16
%7:i16 = or %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1182:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 4194304:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = var (00000000000000000000000xxxxxxxxx) (n)
%4:i16 = trunc %3
%5:i16 = or 16:i16, %4
%6:i16 = and 495:i16, %4
%7:i16 = select %2, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8, 0:i8
%6:i8 = phi %0, %5, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 2:i32, 3:i32
%3:i1 = var
%4:i32 = select %3, %2, 1:i32
%5:i1 = var
%6:i32 = select %5, 4:i32, 2:i32
%7:i32 = phi %0, 0:i32, 1:i32, 4:i32, %2, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 5:i32, 3:i32, 1:i32, 0:i32, 1:i32, 5:i32, 3:i32, 0:i32
%3:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%4:i1 = eq 26:i32, %3
%5:i32 = select %4, 2:i32, %2
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ne 25:i32, %0
%2 = block 2
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %2, %4, 1:i8
%6:i8 = select %1, 0:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i8 = var (0000xxx0) (n)
%4:i8 = var (000x0000) (n)
%5:i8 = or %3, %4
%6:i8 = or 1:i8, %5
%7:i8 = phi %1, %6, %5
%8:i8 = phi %0, %7, %5
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4 = block 3
%5:i1 = var
%6:i8 = zext %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %4, 1:i8, %6, %8
%10:i8 = phi %1, %3, %9, %6, %8
%11:i8 = phi %0, 1:i8, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000000x00) (n)
%2:i1 = eq 0:i32, %1
%3:i32 = var
%4:i32 = and 1:i32, %3
%5:i32 = select %2, %4, 3:i32
%6:i32 = phi %0, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3 = block 7
%4:i1 = var
%5 = block 8
%6:i32 = var (000000000000000000000000000000xx) (n)
%7:i32 = select %4, 1:i32, %6
%8:i32 = phi %3, 1:i32, 1:i32, %7, 2:i32, 1:i32, 1:i32, 1:i32
%9:i32 = phi %0, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = addnw 3:i64, %0
%2:i1 = ult 8:i64, %1
%3:i64 = select %2, %1, 8:i64
%4:i1 = ult 2305843009213693951:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8
%4 = block 2
%5:i8 = phi %4, %3, 1:i8
%6:i8 = phi %1, %3, %5, 1:i8
%7 = block 2
%8:i8 = phi %7, 1:i8, %6
%9:i8 = phi %0, 1:i8, %6, 1:i8, 1:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%1:i32 = and 4092:i32, %0
%2:i1 = var
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = select %2, 3:i32, %3
%5:i32 = or %1, %4
%6:i16 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i32 = zext %0
%2:i32 = udiv 16:i32, %1
%3:i32 = shlnw %2, 3:i32
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 12
%2:i128 = var (0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%3:i64 = trunc %2
%4:i64 = phi %1, 0:i64, 0:i64, 0:i64, 0:i64, %3, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 2:i32, 0:i32, 2:i32
%3:i32 = phi %0, %2, 2:i32, 0:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 64:i8, 37:i8
%4:i8 = phi %1, 64:i8, 37:i8, %3
%5:i8 = phi %0, %4, 37:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 3:i32, %2
%4:i32 = phi %0, 0:i32, 1:i32, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 524287:i32, %1
%3:i32 = urem %2, 15:i32
%4:i32 = urem %2, 9:i32
%5:i32 = or 32:i32, %4
%6:i32 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 5:i32, 0:i32
%3:i32 = phi %0, %2, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 45:i8, 39:i8
%3:i8 = phi %0, 45:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = addnw %2, %4
%6:i64 = phi %0, %5, %2
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1:i1 = var
%2:i32 = zext %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %2, %2, %3, %3
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i16 = and 8192:i16, %0
%2:i1 = eq 0:i16, %1
%3 = block 2
%4:i8 = var
%5:i8 = and 1:i8, %4
%6:i1 = var
%7:i8 = select %6, %5, 1:i8
%8:i8 = phi %3, %5, %7
%9:i8 = select %2, %8, 1:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = var (00000000000000000000000000000x0x) (znp)
%4:i32 = select %2, %3, 0:i32
%5:i32 = phi %1, %4, 0:i32
%6:i32 = phi %0, %5, 3:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 6:i64, 4:i64
%3:i64 = phi %0, 8:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000x000000000) (n)
%2:i32 = lshrexact %1, 9:i32
%3:i8 = trunc %2
%4 = block 2
%5:i1 = var
%6:i1 = phi %4, %5, 0:i1
%7:i8 = zext %6
%8:i8 = phi %0, %3, %7, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i32 = var (0000000000000000000000000000001x) (zn)
%4:i32 = phi %2, 1:i32, %3, 1:i32
%5:i32 = phi %1, 0:i32, %4, 0:i32
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i24 = var (000000000000000x00000000) (n)
%2:i24 = lshrexact %1, 8:i24
%3:i8 = trunc %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %0, %3, %5, %3
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i1 = eq 0:i32, %1
%3:i32 = var (zp)
%4:i64 = zext %3
%5:i64 = select %2, 1:i64, %4
%6:i64 = phi %0, 1:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = ne 0:i32, %1
%3:i32 = var
%4 = block 4
%5:i32 = phi %4, 1:i32, 1:i32, 4:i32, 1:i32
%6:i32 = phi %0, 1:i32, 1:i32, %5
%7:i1 = ult %3, %6
%8:i1 = and %2, %7
%9:i32 = select %8, 1:i32, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8, %4
%6:i8 = phi %1, %5, 0:i8, %5
%7:i8 = phi %0, %6, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i8 = xor 1:i8, %2
%4:i8 = var
%5:i8 = and 1:i8, %4
%6:i8 = xor 1:i8, %5
%7:i8 = var
%8:i8 = and 1:i8, %7
%9:i8 = xor 1:i8, %8
%10:i8 = var
%11:i8 = and 1:i8, %10
%12:i8 = xor 1:i8, %11
%13:i8 = var
%14:i8 = and 1:i8, %13
%15:i8 = xor 1:i8, %14
%16:i8 = var
%17:i8 = and 1:i8, %16
%18:i8 = xor 1:i8, %17
%19:i8 = var
%20:i8 = and 1:i8, %19
%21:i8 = xor 1:i8, %20
%22:i8 = var
%23:i8 = and 1:i8, %22
%24:i8 = xor 1:i8, %23
%25:i8 = phi %0, 1:i8, %3, %6, %9, 1:i8, %12, %15, %18, 1:i8, %21, %21, %24, %24, %24
infer %25

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = xor 1:i32, %0
%2:i24 = trunc %1
%3:i24 = shlnw %2, 5:i24
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3, %3, %3
%5:i8 = phi %0, %4, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1189:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = and 2:i32, %1
%3:i32 = or 13:i32, %2
%4:i32 = phi %0, 15:i32, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 23
%2:i32 = phi %1, 0:i32, 4:i32, 69:i32, 9:i32, 68:i32, 73:i32, 72:i32, 5:i32, 8:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = xor 12:i32, %2
%4:i32 = phi %0, 1:i32, %3, 2:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 8:i32, 8:i32, 7:i32
%3:i32 = phi %0, 5:i32, %2, 6:i32, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw %0, %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = add %2, %4
%6:i32 = var
%7:i64 = zext %6
%8:i64 = add %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = lshr %0, %1
%3:i64 = ctlz %2
%4:i64 = subnsw 64:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5 = block 2
%6:i8 = phi %5, %4, %3
%7:i8 = phi %0, 1:i8, 1:i8, 1:i8, %4, %6, %6, %6, 0:i8, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000000000000000000000000000xx0) (zn)
%1:i64 = shl 1:i64, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %1, %3, %3, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = and 2:i32, %1
%3:i32 = xor 3303:i32, %2
%4:i32 = phi %0, 3301:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 2:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, 1:i32, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = zext %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000001x) (zn)
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%3:i64 = select %0, %1, %2
%4:i32 = trunc %3
%5:i32 = shlnw %4, 14:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 4:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i64 = phi %1, 3:i64, 6:i64, 6:i64, 2:i64, 2:i64, 2:i64
%3:i64 = phi %0, 1:i64, 1:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4
%6:i8 = phi %1, 1:i8, %5, %5, 0:i8
%7 = block 6
%8:i8 = phi %7, 1:i8, %5, %5, %5, %5, 0:i8
%9:i8 = phi %0, 0:i8, 0:i8, 0:i8, %6, %8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, 0:i32, %3
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = addnw %4, %5
%7:i32 = phi %1, %4, %6
%8:i1 = var
%9:i32 = zext %8
%10:i32 = addnw %7, %9
%11:i32 = phi %0, %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = phi %0, 1:i32, 2:i32, 2:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%2:i32 = phi %0, 2:i32, 4:i32, 3:i32, 2:i32, 4:i32, 3:i32, 2:i32, 4:i32, 2:i32, 2:i32, 2:i32
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = mulnsw %1, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1173:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var (0000000000xxxxxx) (n)
%2:i16 = and 3:i16, %1
%3:i32 = zext %2
%4 = block 20
%5:i16 = var (00000000000000xx) (n)
%6:i32 = zext %5
%7 = block 3
%8:i32 = var (000000000000000000000000000000xx) (n)
%9:i32 = phi %7, %8, 0:i32, 0:i32
%10:i32 = phi %4, 0:i32, 0:i32, %6, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %9
%11:i32 = phi %0, %3, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, %3, %3
%5 = block 4
%6:i64 = phi %5, %3, %3, %3, %3
%7:i64 = phi %0, %4, %3, %6, %6, %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 2:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i1 = var
%6:i32 = zext %5
%7:i32 = addnw %4, %6
%8:i32 = phi %0, %4, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 18
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5 = block 2
%6:i8 = phi %5, 0:i8, 1:i8
%7 = block 2
%8:i8 = phi %7, 0:i8, 1:i8
%9:i8 = phi %0, %2, %4, %6, %8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = ashr %2, 31:i32
%4:i32 = xor %3, %2
%5:i32 = phi %0, %4, 0:i32, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3 = block 2
%4:i1 = var
%5:i1 = phi %1, %2, 0:i1, %4
%6:i8 = zext %5
%7 = block 2
%8 = block 3
%9:i1 = var
%10:i8 = zext %9
%11:i8 = phi %7, %10, 0:i8
%12:i8 = phi %0, %6, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%3:i32 = and 30:i32, %2
%4:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%5:i32 = and 30:i32, %4
%6:i32 = phi %1, %3, %5, %3
%7 = block 3
%8:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%9:i32 = and 30:i32, %8
%10:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%11:i32 = and 30:i32, %10
%12:i32 = phi %7, %9, %11, %9
%13:i32 = phi %0, %6, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ult 8:i32, %0
%2:i32 = select %1, %0, 8:i32
%3:i1 = eq 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 2
%2:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%3:i1 = eq 86:i32, %2
%4:i1 = var
%5:i32 = select %4, 11:i32, 2:i32
%6:i32 = select %3, 3:i32, %5
%7:i32 = select %4, 11:i32, 6:i32
%8:i32 = select %3, 7:i32, %7
%9:i32 = phi %0, 11:i32, 10:i32, 1:i32, 11:i32, 10:i32, 4:i32, 4:i32, 4:i32, 4:i32, 4:i32, 20:i32, 20:i32, 20:i32, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i8 = var
%3 = block 5
%4:i8 = var
%5:i8 = var
%6:i8 = phi %0, %2, %4, %4, %4, 1:i8, 1:i8, 1:i8, 1:i8, %5
%7:i16 = zext %6
%8:i16 = shlnw %7, 14:i16
infer %8

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 2:i32, 1:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i32 = ctlz %1
%3:i32 = addnw 1:i32, %2
%4 = block 8
%5:i32 = var
%6:i32 = var
%7:i32 = phi %4, %5, %6, %5, %6, %5, %5, %5, %5
%8:i32 = ctlz %7
%9:i32 = phi %0, 33:i32, %3, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = sext %0
%2:i64 = lshr 2405181688062:i64, %1
%3:i64 = shl %2, 1:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 2:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = var
%3:i32 = select %2, 1347:i32, 1355:i32
%4:i32 = select %2, 1346:i32, 1345:i32
%5:i32 = select %1, %3, %4
%6:i32 = phi %0, 1354:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000xxxxxxxxxxxxxxxxxxxx0) (n)
%2:i32 = and 2:i32, %1
%3:i32 = xor 3:i32, %2
%4:i32 = phi %0, %3, 3:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 6
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, %4, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000xxx0000000) (n)
%1:i32 = lshrexact %0, 7:i32
%2:i64 = zext %1
%3:i64 = lshr 208:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (0000000x) (n)
%1:i1 = ne 0:i8, %0
%2:i64 = select %1, 1:i64, 8:i64
%3:i64 = addnsw 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = add 18446744073709551608:i64, %0
%2:i1 = ult %0, %1
%3:i64 = select %2, %0, %1
%4:i64 = sub %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i48 = var (0000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (n)
%2:i48 = lshr 408028119040:i48, %1
%3:i8 = trunc %2
%4:i8 = phi %0, 0:i8, 64:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 7
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = phi %2, 1:i32, 1:i32, 1:i32, 1:i32, %3, 1:i32, 1:i32
%5:i32 = phi %1, 1:i32, %4
%6:i32 = phi %0, %5, 0:i32, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2557:i32, 1707:i32
%4:i1 = var
%5:i32 = var (00000000000000000000xxxx1x1x1xx0) (zn)
%6:i32 = select %4, %3, %5
%7:i32 = phi %1, %3, %6
%8:i32 = phi %0, %7, %6, %6, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = xor 1:i1, %1
%3:i32 = zext %2
%4 = block 2
%5 = block 4
%6:i32 = phi %5, 1:i32, 1:i32, 0:i32, 0:i32
%7:i32 = phi %4, %6, 1:i32
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 1:i8, %3
%5:i8 = phi %1, 1:i8, %4
%6:i8 = phi %0, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 3
%3:i32 = phi %2, 2:i32, 1:i32, 3:i32
%4:i32 = phi %1, 0:i32, %3, 0:i32, 0:i32, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 8:i32, 8:i32, 7:i32
%3:i32 = phi %0, 5:i32, %2, 6:i32, 4:i32
%4:i64 = sext %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = var
%3:i64 = var
%4:i64 = sub %2, %3
%5:i64 = ashrexact %4, 2:i64
%6:i64 = udiv %1, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = select %1, %2, %3
%5:i32 = addnw 1:i32, %4
%6:i32 = phi %0, %5, %4
%7:i32 = addnsw 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = ne 0:i32, %1
%3:i8 = zext %2
%4 = block 2
%5:i1 = var
%6:i8 = zext %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %4, %6, %8
%10:i8 = phi %0, %3, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32
%3 = block 3
%4:i32 = or 2:i32, %2
%5:i1 = var
%6:i32 = var (0000000000000000000000000000010x) (zn)
%7:i32 = select %5, %6, %2
%8:i32 = phi %3, %4, %4, %7
%9:i32 = phi %0, %2, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 18
%2:i64 = phi %1, 0:i64, 1:i64, 2:i64, 3:i64, 9:i64, 14:i64, 11:i64, 9:i64, 0:i64, 1:i64, 2:i64, 3:i64, 5:i64, 6:i64, 7:i64, 8:i64, 4:i64, 4:i64
%3:i64 = phi %0, 9:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (0000000x) (n)
%1:i1 = ne 0:i8, %0
%2:i64 = var
%3:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = subnsw %2, %3
%5:i1 = ult %4, 8:i64
%6:i1 = and %1, %5
%7:i64 = sub 8:i64, %4
%8:i64 = select %6, %7, 0:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3 = block 6
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4
%6:i8 = phi %1, %5, %5, 1:i8, 1:i8
%7:i8 = phi %0, %6, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 3:i32, 4:i32
%3:i32 = phi %0, %2, 5:i32, 6:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = or %2, %3
%5:i32 = phi %1, %4, 0:i32
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000001111xxxxx) (zn)
%1:i32 = addnsw 4294966808:i32, %0
%2:i32 = lshr 8487279:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 14
%2:i32 = phi %1, 262144:i32, 131072:i32, 196608:i32, 131072:i32, 131072:i32, 327680:i32, 393216:i32, 458752:i32, 524288:i32, 589824:i32, 65536:i32, 65536:i32, 65536:i32, 65536:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 5
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 0:i8, 0:i8, 0:i8, %4, %4
%6:i8 = phi %0, %5, %4, %4, %4, %4, %4, %4, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 3:i64
%4:i64 = phi %0, %3, 16:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = phi %0, %1, %2
%4:i64 = zext %3
%5:i64 = var
%6:i64 = udiv %4, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = and 2:i32, %1
%3:i32 = xor 3302:i32, %2
%4:i32 = phi %0, 3300:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 4:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 64:i32, %1
%3:i1 = var
%4:i32 = var (0000000000000000000001000x000000) (zn)
%5:i32 = select %3, %4, %2
%6:i32 = phi %0, %2, %2, %5
%7:i1 = ult 2097151:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000000xxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = or 3298:i32, %2
%4:i32 = phi %0, 3299:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = ashr %0, 31:i32
%2:i32 = and 4294967294:i32, %1
%3:i32 = addnsw 103:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, 1:i8
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i128 = var (000000000000000000000000000000000000000000000000000000000000000000000000000000000x0000000000000000000000000000000000000000000000) (n)
%1:i64 = trunc %0
%2:i64 = lshrexact %1, 46:i64
%3:i64 = subnsw 5:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i1 = eq 2:i32, %1
%3:i1 = var
%4:i32 = select %3, 3:i32, 6:i32
%5:i32 = select %2, 0:i32, %4
%6:i32 = var (000000000000000000000000xxxxxxxx) (n)
%7:i1 = eq 2:i32, %6
%8:i1 = var
%9:i32 = select %8, 2:i32, 0:i32
%10:i32 = select %7, 1:i32, %9
%11:i32 = select %8, 4:i32, 3:i32
%12:i32 = select %7, 5:i32, %11
%13:i32 = phi %0, %5, 6:i32, %10, %12, 6:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 2:i32, %0
%2 = block 4
%3:i32 = var (0000000000000000000000000000xxxx) (n)
%4:i32 = var (000000000000000000000000000x0000) (n)
%5:i32 = or %3, %4
%6:i32 = var (0000000000000000000000000xxxx000) (n)
%7:i32 = lshrexact %6, 3:i32
%8:i32 = var (0000000000000000000000000xxxx000) (n)
%9:i32 = lshrexact %8, 3:i32
%10:i32 = var (0000000000000000000000000xxxx000) (n)
%11:i32 = lshrexact %10, 3:i32
%12:i32 = phi %2, %5, %7, %9, %11
%13:i32 = and 7:i32, %12
%14:i32 = select %1, %12, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 6
%2:i1 = var
%3:i32 = select %2, 12:i32, 4:i32
%4:i32 = phi %1, 6:i32, 0:i32, 12:i32, 6:i32, 4:i32, %3
%5:i32 = phi %0, 0:i32, 0:i32, %4, 4:i32, 4:i32, 4:i32, 4:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i1 = eq 128:i64, %1
%3:i64 = select %2, 16:i64, 8:i64
%4 = block 7
%5:i1 = var
%6:i64 = select %5, 16:i64, 8:i64
%7:i1 = var
%8:i64 = select %7, 32:i64, 16:i64
%9:i64 = phi %4, 16:i64, %6, 32:i64, 8:i64, 8:i64, %8, 8:i64
%10:i64 = phi %0, %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (zp)
%1:i32 = lshr %0, 1:i32
%2:i1 = var
%3:i32 = var (zp)
%4:i32 = select %2, %3, 536870912:i32
%5:i1 = ult %1, %4
%6:i32 = select %5, %4, %1
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 14
%2 = block 6
%3 = block 2
%4:i32 = var (000000000000000000000001000xxx0x) (zn)
%5 = block 2
%6:i32 = var (00000000000000000000000100001x0x) (zn)
%7:i32 = phi %2, 269:i32, 269:i32, 269:i32, 265:i32, %4, %6
%8 = block 2
%9:i32 = phi %8, 272:i32, 269:i32
%10 = block 2
%11:i32 = phi %10, 268:i32, 265:i32
%12:i32 = phi %1, %7, 263:i32, 263:i32, 263:i32, 99:i32, 99:i32, 269:i32, 265:i32, %9, %11, 263:i32, 273:i32, 263:i32, 263:i32
%13:i32 = phi %0, %12, 267:i32, %12, 271:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, %3, 0:i8
%5:i8 = phi %0, 0:i8, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = zext %0
%2:i32 = shl 8:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 2:i32, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, 2:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i32 = var
%2:i1 = ne 3:i32, %1
%3:i8 = zext %2
%4 = block 2
%5:i8 = phi %4, 1:i8, 0:i8
%6:i8 = phi %0, %3, 1:i8, 1:i8, 1:i8, 0:i8, %5, 1:i8, 1:i8, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 23
%1:i32 = phi %0, 0:i32, 4:i32, 69:i32, 9:i32, 68:i32, 73:i32, 72:i32, 5:i32, 8:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%2:i32 = and 12:i32, %1
%3:i1 = eq 12:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 64:i8, 37:i8
%3:i8 = phi %0, 64:i8, 37:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%3:i64 = phi %1, 0:i64, 0:i64, 0:i64, %2
%4:i64 = addnsw 20:i64, %3
%5:i64 = phi %0, %4, %3
%6:i1 = slt %5, 0:i64
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5 = block 2
%6:i8 = phi %5, 1:i8, 0:i8
%7 = block 2
%8:i8 = phi %7, 1:i8, 0:i8
%9:i8 = phi %0, %2, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var
%2:i32 = lshr %1, 3:i32
%3:i32 = mul %0, %2
%4:i32 = var
%5:i32 = add 7:i32, %4
%6:i32 = lshr %5, 3:i32
%7:i32 = urem %3, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = select %0, 8:i32, 16:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = shl 8:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = select %0, 7:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 7
%3:i64 = phi %2, 2:i64, 1:i64, 3:i64, 2:i64, 1:i64, 0:i64, 0:i64
%4:i64 = phi %1, 3:i64, %3
%5:i64 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = xor 4398046511104:i64, %1
%3:i64 = or 131941395333120:i64, %2
%4:i64 = addnw 87960930222080:i64, %2
%5:i64 = phi %0, %3, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = ult %1, 4:i32
%3:i32 = sub 4:i32, %1
%4:i32 = select %2, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 4:i32, 3:i32, 2:i32, 1:i32
%2:i32 = shl 65536:i32, %1
%3:i32 = addnsw 4294901760:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3 = block 3
%4:i32 = var
%5:i64 = zext %4
%6:i64 = or %2, %5
%7:i64 = var (000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxx) (n)
%8:i64 = shlnw %7, 32:i64
%9 = block 3
%10:i32 = var
%11:i64 = zext %10
%12:i64 = or %8, %11
%13:i64 = phi %0, %6, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000xxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, 0:i32, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 27
%1:i32 = var (000000000xxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = or 190:i32, %2
%4:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%5:i1 = ne 0:i64, %4
%6:i32 = select %5, 189:i32, 147:i32
%7:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%8:i1 = ne 0:i64, %7
%9:i32 = select %8, 188:i32, 146:i32
%10:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%11:i1 = ne 0:i64, %10
%12:i32 = select %11, 185:i32, 148:i32
%13:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%14:i1 = ne 0:i64, %13
%15:i32 = select %14, 184:i32, 144:i32
%16:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%17:i1 = ne 0:i64, %16
%18:i32 = select %17, 170:i32, 133:i32
%19:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%20:i1 = ne 0:i64, %19
%21:i32 = select %20, 171:i32, 134:i32
%22:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%23:i1 = ne 0:i64, %22
%24:i32 = select %23, 183:i32, 155:i32
%25:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%26:i1 = ne 0:i64, %25
%27:i32 = select %26, 182:i32, 154:i32
%28:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%29:i1 = ne 0:i64, %28
%30:i32 = select %29, 181:i32, 156:i32
%31:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%32:i1 = ne 0:i64, %31
%33:i32 = select %32, 180:i32, 139:i32
%34:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%35:i1 = ne 0:i64, %34
%36:i32 = select %35, 172:i32, 137:i32
%37:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%38:i1 = ne 0:i64, %37
%39:i32 = select %38, 187:i32, 150:i32
%40:i64 = var (000000000000000000000000000000000000000000000000000000x000000000) (n)
%41:i1 = ne 0:i64, %40
%42:i32 = select %41, 186:i32, 149:i32
%43:i32 = phi %0, 0:i32, %3, %6, %9, %12, %15, 168:i32, 167:i32, %18, 157:i32, 158:i32, %21, 135:i32, %24, %27, 160:i32, 159:i32, %30, %33, %36, 145:i32, %39, %42, 162:i32, 161:i32, 153:i32, 152:i32
infer %43

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = or 17:i64, %2
%4:i64 = phi %0, %3, 17:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, 1:i32, %3
%5:i64 = var
%6:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%7:i1 = ult %5, %6
%8:i32 = select %7, 1:i32, %4
%9:i32 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = ctlz %2
%4:i32 = var
%5:i32 = ctlz %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, %3, %6, 33:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = and 4294967295:i64, %0
%2:i64 = addnw 31:i64, %1
%3:i64 = add 31:i64, %0
%4:i64 = and 31:i64, %3
%5:i64 = subnsw %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = var
%4:i1 = ne 0:i32, %3
%5:i32 = select %4, 2:i32, %2
%6:i32 = phi %0, %2, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 28
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = var
%3 = block 2
%4:i64 = var
%5:i64 = sub %2, %4
%6:i64 = ashrexact %5, 3:i64
%7:i64 = udiv %1, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, %3, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000x00000000000000) (n)
%2:i32 = lshrexact %1, 13:i32
%3:i32 = xor 2:i32, %2
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var (00x0000000000000) (n)
%2:i16 = lshrexact %1, 13:i16
%3:i8 = trunc %2
%4:i8 = phi %0, %3, %3, 1:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%2:i32 = and 15:i32, %1
%3:i32 = shl 1:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 67108863:i32, %0
%2:i32 = mulnw 24:i32, %1
%3:i32 = addnuw 64:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var
%2:i64 = lshr %1, 32:i64
%3 = block 3
%4:i64 = var
%5:i64 = lshr %4, 32:i64
%6:i64 = phi %3, 0:i64, 0:i64, %5
%7:i64 = var
%8:i64 = lshr %7, 32:i64
%9:i64 = var
%10:i64 = lshr %9, 32:i64
%11:i64 = phi %0, %2, %6, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = urem %1, 99999:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i16 = var (00000000000000xx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, %3, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %3, %4, 0:i32
%6:i32 = phi %2, 0:i32, %5
%7:i32 = phi %1, %6, %5
%8 = block 2
%9:i32 = phi %8, 0:i32, %7
%10:i32 = phi %0, %7, %9, 0:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, %2, 0:i8, 0:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000xxxxxxxxxxxxxxx) (n)
%3:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%4:i32 = phi %1, %2, %3
%5:i32 = shlnsw %4, 6:i32
%6:i32 = phi %0, %5, %4
%7:i64 = var
%8:i32 = trunc %7
%9:i32 = and 255:i32, %8
%10:i32 = mulnsw %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i1 = var
%3:i1 = and %1, %2
%4:i32 = select %1, 2968:i32, 91:i32
%5:i32 = select %3, 2967:i32, %4
%6:i32 = phi %0, 2559:i32, 2970:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000xxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = subnsw 3930:i32, %2
%4:i32 = phi %0, 3929:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1149:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000x00x0x000000xxx0000xxxxxxxx) (n)
%1:i32 = trunc %0
%2:i32 = shl %1, 16:i32
%3:i32 = lshr %1, 16:i32
%4:i32 = or %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000000000000000000000000xxxxxx) (n)
%1:i32 = trunc %0
%2:i32 = subnsw 64:i32, %1
%3:i1 = eq 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = var
%3:i1 = and %1, %2
%4:i64 = var (xxxxxxxxxxxx0000000000000000000000000000000000000000000000000000)
%5:i64 = and 9218868437227405312:i64, %4
%6:i64 = select %3, 0:i64, %5
%7:i64 = phi %0, 9218868437227405312:i64, 9218868437227405312:i64, 0:i64, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 3:i32, 4:i32
%3 = block 3
%4:i32 = phi %3, %2, 5:i32, 6:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i128 = var (0000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000) (n)
%1:i64 = trunc %0
%2:i64 = lshrexact %1, 51:i64
%3:i64 = subnsw 5:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000000000000000000000000x11111) (zn)
%1:i64 = var
%2:i64 = add %0, %1
%3:i64 = var (00000000000000000000000000000000000000000000000000000000000001xx) (zn)
%4:i64 = lshr %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 14:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xxxx) (n)
%1:i32 = addnsw 4294967295:i32, %0
%2:i32 = shl 1:i32, %1
%3:i32 = shl %2, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 7:i8, %1
%3:i32 = zext %2
%4:i32 = var
%5:i32 = and 3:i32, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 9
%2:i1 = var
%3:i8 = zext %2
%4 = block 2
%5:i8 = phi %4, 1:i8, 0:i8
%6:i8 = phi %1, %3, 1:i8, 1:i8, 1:i8, 0:i8, %5, 1:i8, 1:i8, 1:i8
%7:i8 = phi %0, 1:i8, %6, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 4:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32, 2:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (00000xxx) (n)
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5 = block 2
%6:i8 = phi %5, 0:i8, 1:i8
%7 = block 2
%8:i8 = phi %7, 0:i8, 1:i8
%9 = block 2
%10:i8 = phi %9, 0:i8, 1:i8
%11 = block 2
%12:i8 = phi %11, 0:i8, 1:i8
%13 = block 2
%14:i8 = phi %13, 0:i8, 1:i8
%15:i8 = phi %0, %2, %4, %6, %8, %10, %12, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%1:i32 = and 7:i32, %0
%2:i32 = shl 2:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000xxxx0) (n)
%1:i32 = lshr 255:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i8 = var
%2:i32 = zext %1
%3:i8 = var
%4:i32 = zext %3
%5:i8 = var
%6:i32 = zext %5
%7:i8 = var
%8:i32 = zext %7
%9 = block 2
%10:i8 = var
%11:i32 = zext %10
%12:i32 = phi %9, 8:i32, %11
%13:i32 = phi %0, %2, %4, %6, %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 2:i32, 2:i32
%3 = block 4
%4:i32 = phi %3, 3:i32, 1:i32, 1:i32, 3:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 7:i32, %0
%2:i32 = lshr %1, 3:i32
%3:i32 = var
%4:i32 = udiv %2, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 9
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i64 = shlnw %1, 32:i64
%3 = block 2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = or %2, %5
%7:i64 = phi %0, 0:i64, 0:i64, %6, 1:i64, 0:i64, 0:i64, 0:i64, 1:i64, 2:i64
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %0, 0:i8, %4, %4, %4, 1:i8, 1:i8, 1:i8, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i32 = select %1, 3:i32, 0:i32
%3:i32 = var (000000000xxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = and 1:i32, %3
%5:i32 = or 2:i32, %4
%6:i32 = phi %0, 2:i32, 4:i32, 1:i32, %2, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = var
%3:i64 = sub %1, %2
%4:i64 = add %0, %3
%5:i64 = add 7:i64, %4
%6:i64 = and 18446744073709551608:i64, %5
%7:i64 = sub %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 2:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = var
%3:i1 = or %1, %2
%4 = block 2
%5:i8 = phi %4, 0:i8, 1:i8
%6:i8 = select %3, %5, 1:i8
%7:i8 = phi %0, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i64 = phi %2, 4:i64, 5:i64
%4:i64 = phi %1, %3, 16:i64
%5:i64 = phi %0, %4, 10:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, %2
%4 = block 2
%5:i1 = var
%6:i8 = select %5, 0:i8, %3
%7:i8 = phi %4, %3, %6
%8:i8 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i1 = eq 0:i8, %1
%3:i8 = select %2, 4:i8, 1:i8
%4:i8 = var
%5:i8 = and 1:i8, %4
%6:i8 = xor 3:i8, %5
%7:i8 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = ashr %1, 31:i32
%3:i32 = xor %2, %1
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = and 1:i64, %1
%3:i8 = trunc %2
%4:i8 = phi %0, %3, 0:i8, 1:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 2:i32, 3:i32
%3:i32 = phi %0, 1:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i1 = ne 0:i8, %1
%3:i8 = zext %2
%4 = block 2
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %5, %6, 0:i8
%8:i8 = phi %4, %7, 0:i8
%9:i8 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 13
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3 = block 2
%4:i32 = var (00000000000000000000000000000xxx) (zn)
%5 = block 4
%6:i32 = var (00000000000000000000000000000x0x) (n)
%7:i32 = phi %3, %4, %6
%8:i1 = var
%9:i32 = zext %8
%10:i32 = addnsw %7, %9
%11:i32 = addnsw 2:i32, %10
%12:i32 = select %2, 4:i32, %11
%13:i32 = phi %0, %12, %10
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 24
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3 = block 3
%4:i32 = phi %3, 7634:i32, 7741:i32, 7838:i32
%5:i32 = var (0000000000000000000xx1xx111x011x) (zn)
%6:i32 = var (0000000000000000000xx1101xx0x01x) (zn)
%7:i32 = var (0000000000000000000xx1101x1xx0xx) (zn)
%8:i32 = phi %3, %5, %6, %7
%9:i32 = select %2, %4, %8
%10 = block 3
%11:i32 = phi %10, 7489:i32, 7959:i32, 7838:i32
%12:i32 = var (0000000000000000000xx1xxx1xx00x1) (zn)
%13:i32 = var (0000000000000000000xx111001xx1x1) (zn)
%14:i32 = phi %10, %12, %13, %7
%15:i32 = select %2, %11, %14
%16 = block 3
%17:i32 = phi %16, 7531:i32, 8001:i32, 7838:i32
%18:i32 = var (0000000000000000000xx1xx1x0xx11x) (zn)
%19:i32 = var (0000000000000000000xx1110x1x0x0x) (zn)
%20:i32 = phi %16, %18, %19, %7
%21:i32 = select %2, %17, %20
%22:i32 = var
%23:i1 = slt 8:i32, %22
%24:i1 = var
%25:i32 = select %24, 7880:i32, 1804:i32
%26:i32 = select %23, 7873:i32, %25
%27:i32 = select %24, 7950:i32, 1818:i32
%28:i32 = select %23, 7940:i32, %27
%29:i32 = select %2, 7544:i32, 7525:i32
%30:i32 = select %2, 8014:i32, 7995:i32
%31:i32 = select %2, 7839:i32, 7837:i32
%32:i32 = select %2, 7500:i32, 7484:i32
%33:i32 = select %2, 7970:i32, 7954:i32
%34:i32 = select %2, 7645:i32, 7666:i32
%35:i32 = select %2, 7752:i32, 7806:i32
%36 = block 2
%37:i1 = var
%38:i1 = var
%39:i1 = and %37, %38
%40:i32 = select %38, 7556:i32, 8026:i32
%41:i32 = select %39, 7840:i32, %40
%42:i32 = select %38, 7511:i32, 7981:i32
%43:i32 = select %39, 7840:i32, %42
%44:i32 = select %38, 7656:i32, 7763:i32
%45:i32 = select %39, 7840:i32, %44
%46:i32 = phi %0, %9, %15, %21, %26, %28, 1720:i32, 1700:i32, 1674:i32, 1741:i32, 1741:i32, 1295:i32, 1298:i32, %29, %30, %31, 7837:i32, %32, %33, 7837:i32, %34, %35, %41, %43, %45
infer %46

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var
%2:i1 = ne 2:i32, %1
%3:i8 = zext %2
%4 = block 3
%5:i8 = phi %4, 1:i8, 1:i8, 0:i8
%6:i1 = var
%7:i1 = var
%8:i1 = xor %6, %7
%9:i8 = zext %8
%10:i8 = phi %0, %3, %5, %9, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000x00000000) (n)
%2 = block 2
%3:i1 = var
%4:i1 = var
%5:i1 = phi %2, %3, %4
%6:i32 = select %5, 16:i32, 0:i32
%7:i32 = or %1, %6
%8:i32 = xor 260:i32, %7
%9:i32 = phi %0, %8, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000000xx) (n)
%1:i32 = shl 1:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1152:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5:i32 = phi %0, %2, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 2:i32, 3:i32, 3:i32, 0:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = xor 1:i32, %2
%4:i32 = phi %0, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 8
%2:i32 = phi %1, 2:i32, 4:i32, 2:i32, 3:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3 = block 2
%4:i1 = var
%5:i1 = var
%6:i1 = phi %3, %4, %5
%7:i32 = select %6, 5:i32, 0:i32
%8:i32 = phi %0, 1:i32, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i64 = phi %2, 7:i64, 15:i64
%4:i64 = phi %1, 31:i64, %3
%5:i64 = phi %0, %4, %3, %3, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i1 = eq 1:i32, %1
%3:i64 = zext %1
%4:i64 = select %2, 0:i64, %3
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000xxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 255:i32, %0
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = addnw 1:i32, %2
%4:i1 = ult %1, %3
%5:i32 = select %4, %3, %1
%6:i32 = addnsw 4294967295:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 88:i64, 273:i64
%3:i64 = phi %0, 88:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 7
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8, 0:i8
%5:i8 = phi %1, %4, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%6:i8 = phi %0, %5, %4, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 4:i32, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = or %0, %1
%3:i64 = add 1:i64, %2
%4:i1 = eq 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i32 = and 3:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = var
%5:i32 = and 3:i32, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %3, %6, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 3:i32, 2:i32
%3 = block 3
%4:i32 = phi %3, %2, 2:i32, 2:i32
%5:i32 = phi %0, %2, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = and 511:i32, %1
%3:i32 = xor 256:i32, %2
%4:i32 = phi %0, %3, 0:i32, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 224:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 82351536043346212:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 82351536043346212:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2 = block 2
%3:i32 = var (0000000000000000000000000000111x) (zn)
%4:i32 = phi %2, 13:i32, %3
%5:i32 = and 7:i32, %4
%6:i32 = select %1, %5, %4
%7 = block 3
%8:i32 = var
%9:i32 = var (0000000000000000000000000000x1xx) (zn)
%10:i32 = phi %7, %8, %9, 0:i32
%11:i32 = and %10, %6
%12:i32 = phi %0, 0:i32, %6, %11, %6
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = slt 4294967295:i32, %0
%2:i32 = sub 0:i32, %0
%3:i32 = select %1, %0, %2
%4:i16 = var
%5:i32 = zext %4
%6:i32 = urem %3, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000011001xxx) (zn)
%1:i16 = trunc %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i64 = var (00000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = trunc %2
%4:i32 = phi %1, %3, 0:i32, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = subnsw 2:i32, %2
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, %4, %4, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = addnw 1023:i64, %0
%2:i64 = lshr %1, 10:i64
%3:i32 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 2:i32, 2:i32
%4 = block 4
%5:i32 = phi %4, 3:i32, 1:i32, 1:i32, 3:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, 2:i32, %6, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ne 25:i32, %1
%3 = block 2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, %5, 1:i8
%7:i8 = select %2, 0:i8, %6
%8:i8 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 3:i32, %2, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3 = block 3
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %3, 0:i8, 0:i8, %5
%7:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8
%3 = block 3
%4:i8 = phi %3, 1:i8, 1:i8, 0:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000000xx0) (zn)
%2:i64 = shl 1:i64, %1
%3:i64 = and %0, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 4294967294:i32, %0
%2:i1 = eq 26:i32, %1
%3 = block 2
%4 = block 2
%5 = block 8
%6:i32 = var (00000000000000000000000000000xxx) (n)
%7:i32 = var (00000000000000000000000000000xxx) (n)
%8:i32 = phi %4, %6, %7
%9:i1 = var
%10:i32 = select %9, 4:i32, %8
%11:i32 = phi %3, %8, %10
%12:i32 = select %2, 6:i32, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %1, %2, %3
%5:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%6:i32 = trunc %5
%7:i32 = addnw %4, %6
%8:i32 = addnw 1:i32, %6
%9:i32 = phi %0, %7, %8, 3:i32, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 0:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i1 = eq 30:i16, %0
%2:i32 = select %1, 2:i32, 1:i32
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ult 2415919103:i32, %1
%3:i32 = var (0000000000000000000000000000xxxx) (n)
%4:i32 = and 7:i32, %3
%5:i32 = select %2, %4, 0:i32
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 16
%2 = block 2
%3:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%4:i32 = phi %2, %3, 0:i32
%5:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %4, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%6:i16 = var
%7:i32 = zext %6
%8:i16 = var
%9:i32 = zext %8
%10:i16 = var
%11:i32 = zext %10
%12:i32 = phi %0, %5, %7, %9, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 74
%1:i8 = var
%2:i1 = eq 56:i8, %1
%3:i1 = var
%4:i32 = select %3, 111:i32, 0:i32
%5:i32 = select %2, 110:i32, %4
%6:i8 = var
%7:i1 = eq 112:i8, %6
%8:i1 = var
%9:i32 = select %8, 21:i32, 0:i32
%10:i32 = select %7, 20:i32, %9
%11:i8 = var
%12:i1 = eq 105:i8, %11
%13:i1 = var
%14:i32 = select %13, 24:i32, 0:i32
%15:i32 = select %12, 23:i32, %14
%16:i8 = var
%17:i1 = eq 112:i8, %16
%18:i1 = var
%19:i32 = select %18, 27:i32, 0:i32
%20:i32 = select %17, 26:i32, %19
%21:i8 = var
%22:i1 = eq 105:i8, %21
%23:i1 = var
%24:i32 = select %23, 30:i32, 0:i32
%25:i32 = select %22, 29:i32, %24
%26:i8 = var
%27:i1 = eq 112:i8, %26
%28:i1 = var
%29:i32 = select %28, 37:i32, 0:i32
%30:i32 = select %27, 36:i32, %29
%31:i8 = var
%32:i1 = eq 105:i8, %31
%33:i1 = var
%34:i32 = select %33, 40:i32, 0:i32
%35:i32 = select %32, 39:i32, %34
%36:i8 = var
%37:i1 = eq 112:i8, %36
%38:i1 = var
%39:i32 = select %38, 42:i32, 0:i32
%40:i32 = select %37, 41:i32, %39
%41:i8 = var
%42:i1 = eq 105:i8, %41
%43:i1 = var
%44:i32 = select %43, 44:i32, 0:i32
%45:i32 = select %42, 43:i32, %44
%46:i8 = var
%47:i1 = eq 48:i8, %46
%48:i1 = var
%49:i32 = select %48, 157:i32, 0:i32
%50:i32 = select %47, 156:i32, %49
%51:i8 = var
%52:i1 = eq 48:i8, %51
%53:i1 = var
%54:i32 = select %53, 189:i32, 0:i32
%55:i32 = select %52, 188:i32, %54
%56:i8 = var
%57:i1 = eq 48:i8, %56
%58:i1 = var
%59:i32 = select %58, 221:i32, 0:i32
%60:i32 = select %57, 220:i32, %59
%61:i32 = phi %0, 0:i32, 245:i32, 237:i32, 244:i32, 236:i32, 243:i32, 235:i32, 242:i32, 234:i32, 241:i32, 233:i32, 240:i32, 232:i32, 239:i32, 231:i32, 238:i32, 230:i32, 49:i32, 47:i32, 18:i32, 17:i32, 16:i32, 14:i32, 12:i32, 11:i32, 10:i32, 3:i32, 2:i32, 1:i32, 9:i32, 13:i32, 28:i32, 32:i32, 33:i32, 34:i32, %5, 45:i32, 7:i32, 15:i32, 19:i32, %10, 22:i32, %15, %20, %25, 222:i32, 223:i32, 35:i32, %30, 38:i32, %35, %40, %45, 46:i32, 48:i32, 31:i32, 224:i32, 225:i32, 226:i32, 227:i32, 228:i32, 229:i32, 25:i32, 118:i32, 119:i32, 120:i32, 121:i32, 122:i32, 123:i32, 124:i32, 125:i32, %50, %55, %60
infer %61

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = or 4:i32, %2
%5:i1 = var
%6:i32 = select %5, 16:i32, 0:i32
%7:i32 = phi %0, %3, %4, %2, %2, 32:i32, 32:i32, 8:i32, %6
%8:i32 = shl %7, 6:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 4600:i32, 4599:i32
%4:i32 = phi %1, 4599:i32, %3
%5:i32 = phi %0, %4, 4599:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 7:i64, 15:i64
%3:i64 = phi %0, 31:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var
%2:i1 = eq 1:i16, %1
%3:i32 = var
%4:i32 = and 31:i32, %3
%5:i32 = select %2, 11:i32, %4
%6:i32 = phi %0, %5, 11:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 4
%2:i32 = phi %1, 2:i32, 2:i32, 0:i32, 2:i32
%3:i32 = phi %0, 2:i32, 2:i32, 2:i32, %2, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i1 = var
%5:i8 = select %4, %3, 1:i8
%6:i8 = phi %1, %3, %5
%7 = block 5
%8:i1 = var
%9:i8 = select %8, %6, 1:i8
%10:i8 = phi %7, %6, %6, %6, %6, %9
%11:i1 = var
%12:i8 = select %11, 1:i8, %6
%13:i8 = phi %0, %6, %10, %10, %10, 1:i8, 1:i8, 1:i8, 1:i8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 28:i32, 36:i32
%3:i32 = phi %0, 8:i32, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i8 = add 255:i8, %0
%2:i1 = ult %1, 2:i8
%3 = block 2
%4 = block 2
%5:i32 = var (000000000000000000000000000000xx) (zn)
%6:i32 = addnw 3:i32, %5
%7:i32 = addnw 2:i32, %5
%8:i32 = phi %3, %6, %7
%9:i32 = select %2, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or %1, %2
%4:i32 = or %0, %3
%5:i8 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i16 = var
%3:i32 = zext %2
%4:i16 = var
%5:i32 = zext %4
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, 0:i32, 0:i32, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000)
%2:i64 = or 3:i64, %1
%3:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000)
%4:i64 = or 2:i64, %3
%5:i64 = phi %0, %2, %4, 1:i64
%6:i32 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 12
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %2, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = and %1, %2
%4:i1 = eq 1:i32, %3
%5:i32 = select %4, 0:i32, %3
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i32 = zext %1
%3:i32 = subnsw 28:i32, %2
%4:i32 = phi %0, 32:i32, 16:i32, 32:i32, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000x000x0001) (zn)
%2:i32 = xor 260:i32, %1
%3 = block 2
%4:i1 = var
%5:i32 = select %4, 17:i32, 1:i32
%6:i32 = phi %0, %2, %5
%7:i32 = or 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 4:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32, 2:i32, 1:i32
%4:i64 = sext %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000xxxxxxxxx) (n)
%1:i32 = lshr %0, 6:i32
%2:i1 = eq 0:i32, %1
%3:i32 = addnsw 4294967295:i32, %1
%4:i32 = select %2, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 2557:i32, 1707:i32
%3:i8 = var
%4:i1 = eq 5:i8, %3
%5:i32 = select %1, 2556:i32, 1706:i32
%6:i32 = select %4, %2, %5
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, %3, 0:i64
%5:i64 = phi %0, 0:i64, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = add 7:i32, %1
%3:i32 = lshr %2, 3:i32
%4 = block 2
%5:i32 = var
%6:i32 = add 7:i32, %5
%7:i32 = lshr %6, 3:i32
%8:i32 = udiv %3, %7
infer %8

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = or %3, %5
%7:i1 = var
%8:i1 = or %7, %4
%9:i8 = zext %8
%10:i8 = phi %0, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1:i16 = phi %0, 64:i16, 32:i16, 16:i16, 16:i16, 8:i16, 8:i16, 8:i16, 8:i16, 8:i16, 8:i16, 8:i16, 8:i16, 8:i16, 8:i16, 8:i16
%2:i16 = addnsw 65535:i16, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, %3, 0:i64
%5 = block 2
%6:i32 = var
%7:i64 = zext %6
%8:i64 = phi %5, %7, 0:i64
%9:i64 = phi %0, %4, %4, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000000xxxx) (n)
%1:i32 = trunc %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i1 = ult %0, 160:i8
%2:i32 = var (0000000000000000000000000000xxxx) (n)
%3:i32 = or 48:i32, %2
%4:i32 = addnw 87:i32, %2
%5:i32 = select %1, %3, %4
%6:i8 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 14:i32
%3:i32 = var
%4:i32 = and 7:i32, %3
%5:i32 = or 16:i32, %4
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000xxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = and 3:i32, %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1185:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = var (0000000000000000000000000000xxx0) (zn)
%3:i32 = phi %1, %2, 5:i32, 16:i32
%4:i32 = var (00000000000000000000000x00000000) (n)
%5:i32 = addnw 256:i32, %4
%6:i32 = or %3, %5
%7:i64 = var
%8:i1 = ne 0:i64, %7
%9:i32 = select %8, 518:i32, 262:i32
%10:i32 = phi %0, %6, %9, 773:i32, 773:i32, 0:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = and 4294967295:i64, %0
%2:i64 = addnw 7:i64, %1
%3:i64 = add 7:i64, %0
%4:i64 = and 7:i64, %3
%5:i64 = subnsw %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = var
%3:i1 = and %1, %2
%4:i32 = var (xxxxxxxxxxxxxxxxxxxxxx0000000000)
%5:i32 = and 31744:i32, %4
%6:i32 = select %3, 0:i32, %5
%7:i32 = phi %0, 31744:i32, 31744:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var (0000000000000000000000x000000000) (n)
%3:i32 = phi %1, 0:i32, 1:i32, %2, 1:i32
%4:i32 = var (000000000000000000000x0000000000) (n)
%5:i32 = or %3, %4
%6:i32 = phi %0, %3, %5
%7:i32 = or 128:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i64 = var
%2:i64 = lshr %1, 32:i64
%3 = block 6
%4:i64 = phi %3, %2, %2, %2, 0:i64, 0:i64, %2
%5:i64 = phi %0, %2, %2, %2, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1138:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 269:i32, 272:i32
%3 = block 2
%4:i32 = phi %3, 265:i32, 268:i32
%5:i32 = phi %0, 269:i32, 269:i32, 269:i32, 265:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnw 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 28
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %3, %4, 0:i32
%6:i32 = phi %2, 0:i32, %5
%7:i32 = phi %1, %6, %5
%8:i32 = phi %0, 0:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 7:i64, 1:i64
%3:i64 = phi %0, %2, 1:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i1 = var
%3:i32 = select %2, 6:i32, 7:i32
%4:i32 = phi %1, 0:i32, 7:i32, %3, 0:i32, 0:i32
%5:i1 = eq 0:i32, %4
%6:i32 = select %5, 5:i32, %4
%7:i32 = phi %0, %4, 4:i32, %6, 8:i32, 4:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = phi %0, 2:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000xxxxxx) (n)
%2:i64 = zext %1
%3:i64 = xor 63:i64, %2
%4:i64 = phi %0, 64:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i64 = zext %0
%2:i1 = ult 8:i64, %1
%3:i64 = select %2, %1, 8:i64
%4:i1 = eq 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var (00000000000000000000000000xxxxxx) (n)
%3:i32 = var
%4:i32 = and 255:i32, %3
%5:i32 = select %1, %2, %4
%6:i1 = ult 1:i32, %5
%7:i32 = select %6, %5, 1:i32
%8:i32 = phi %0, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 512:i32, 256:i32, 128:i32, 64:i32
%2:i32 = var
%3:i32 = udiv %1, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 7:i32, 3:i32, 3:i32
%3:i32 = var (00000000000000000000000000xx0000) (n)
%4:i1 = eq 16:i32, %3
%5:i32 = or 16:i32, %2
%6:i32 = select %4, %5, %2
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1 = block 2
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i1 = var
%5:i8 = select %4, %3, 1:i8
%6:i8 = phi %1, %3, %5
%7:i8 = select %0, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var (000000000x000000) (n)
%2:i16 = xor 64:i16, %1
%3:i16 = phi %0, 0:i16, %2
%4:i16 = var
%5:i16 = and 64:i16, %4
%6:i16 = or %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00)
%1:i1 = ne 0:i64, %0
%2:i1 = var
%3:i64 = var (0000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%4:i64 = var (00000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (zn)
%5:i64 = select %2, %3, %4
%6:i64 = add 16:i64, %5
%7:i64 = select %1, %6, %5
%8:i64 = add 104:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = phi %0, 2:i32, 4:i32, 3:i32, 2:i32, 4:i32, 3:i32, 2:i32, 4:i32, 2:i32, 2:i32, 2:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (zn)
%3:i1 = var
%4:i1 = var
%5:i1 = and %3, %4
%6:i1 = var
%7:i32 = select %6, 1:i32, 2:i32
%8:i1 = var
%9:i32 = zext %8
%10:i32 = select %5, %7, %9
%11:i32 = phi %1, %2, %10
%12:i32 = addnsw 1:i32, %11
%13:i32 = phi %0, %12, %10
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 22
%1:i64 = var (00000000000000000000000000000000000000000000000000000x0000000000) (n)
%2:i64 = lshrexact %1, 10:i64
%3:i64 = or 4:i64, %2
%4:i64 = addnw 5:i64, %2
%5:i64 = phi %0, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 6:i64, 6:i64, 5:i64, 3:i64, 5:i64, 3:i64, 5:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, %3, 5:i64, %4, 6:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000x0000xxxxxx00x0xxxxxxxxxxxx) (n)
%1:i32 = trunc %0
%2:i32 = shl %1, 16:i32
%3:i32 = lshr %1, 16:i32
%4:i32 = or %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 10
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, 1:i8, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1167:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i8 = trunc %1
%3:i8 = phi %0, 0:i8, %2
%4 = block 3
%5 = block 4
%6:i8 = var
%7:i8 = var
%8:i8 = phi %4, %6, %7, %7
%9:i8 = and 1:i8, %8
%10:i8 = or %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3:i32 = shlnw %2, 13:i32
%4:i32 = phi %0, %3, 8192:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var (000000000000000000000000000x00xx) (zn)
%2:i32 = lshr %0, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = and 4095:i32, %2
%4:i32 = phi %1, %3, 0:i32, 0:i32, 0:i32, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = and 1:i64, %1
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 4:i64, 0:i64
%3:i64 = phi %0, 5:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = var (0000000000000000000000000000xxxx) (n)
%3:i32 = phi %0, %1, %2
%4:i8 = trunc %3
%5:i8 = or 48:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3 = block 4
%4:i32 = phi %3, 0:i32, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshr %0, 2:i64
%2:i64 = shlnuw %1, 2:i64
%3:i1 = ult %0, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var
%3:i64 = phi %0, %1, %2
%4:i1 = slt 18446744073709551615:i64, %3
%5:i64 = sub 0:i64, %3
%6:i64 = select %4, %3, %5
%7:i64 = srem %6, 2:i64
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 6
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000x0000000000000000) (n)
%1:i32 = trunc %0
%2:i32 = lshrexact %1, 16:i32
%3:i32 = subnsw 1158:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i128 = var (000000000000000000000000000000000000000000000000000000000000000000000000000000x0000000000000000000000000000000000000000000000000) (n)
%1:i64 = trunc %0
%2:i64 = lshrexact %1, 49:i64
%3:i64 = subnsw 5:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 8:i64, 9:i64
%3:i64 = phi %0, 20:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (0000000000000000000000000000000000000000000000000000xxxxxxxxxxxx) (zn)
%3:i64 = var (000000000000000000000000000000000000000000000000000000xxxxxxxxxx) (zn)
%4:i64 = phi %1, %2, %3
%5:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%6:i64 = addnsw %4, %5
%7:i64 = phi %0, %4, %6
%8:i64 = add 18446744073709551615:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = urem 1048576:i64, %0
%2:i64 = subnsw 1048576:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 6
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, 0:i32, 1:i32, 1:i32, 0:i32, %3, 1:i32
%5:i32 = phi %1, %4, 2:i32, 2:i32
%6:i32 = phi %0, %5, 2:i32, 2:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 10
%2 = block 7
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8
%4 = block 4
%5:i8 = phi %4, 1:i8, 1:i8, 0:i8, 0:i8
%6:i8 = phi %1, %3, 1:i8, 1:i8, %5, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%7:i8 = phi %0, 1:i8, 1:i8, 1:i8, 1:i8, %6, 1:i8, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i128 = zext %1
%3:i128 = shlnw %2, 64:i128
%4:i128 = phi %0, 0:i128, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, %2, 1:i8
%4:i8 = var
%5:i8 = and 1:i8, %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = or %5, %7
%9:i8 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%3:i32 = or %1, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = shlnw %4, 8:i32
%6:i32 = or %3, %5
%7:i32 = var (00000000xxxxxxxx00000000xxxxxx00) (n)
%8:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%9:i32 = or %7, %8
%10:i32 = or 1:i32, %9
%11:i32 = phi %0, %6, %6, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, %3, 2:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = xor 1:i1, %1
%3:i8 = zext %2
%4 = block 2
%5:i8 = phi %4, %3, 1:i8
%6:i8 = phi %0, %3, %5, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 6
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8, 1:i8
%6:i8 = phi %1, %5, 1:i8, 1:i8
%7:i8 = phi %0, %6, 1:i8, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7:i32 = phi %0, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i1 = eq 28:i32, %3
%5 = block 2
%6 = block 6
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, %7, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8
%9 = block 4
%10 = block 2
%11:i8 = var (0000000x) (n)
%12:i8 = phi %9, %11, 1:i8, 1:i8, %11
%13:i8 = phi %5, %8, %12
%14:i8 = select %4, %13, 0:i8
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 2:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx00) (n)
%1:i32 = shl 5:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000000x0000) (n)
%2:i64 = or 96:i64, %1
%3:i64 = phi %0, 112:i64, %2
%4:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = mulnw 48:i64, %4
%6:i64 = phi %0, %5, 0:i64
%7:i64 = addnsw %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 40:i64
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = shlnw %4, 48:i64
%6 = block 2
%7:i32 = var
%8:i64 = zext %7
%9:i64 = or %5, %8
%10:i64 = phi %0, %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 4
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8
%6 = block 4
%7 = block 2
%8:i8 = var (0000000x) (n)
%9:i8 = var (0000000x) (n)
%10:i8 = phi %7, %8, %9
%11:i8 = phi %6, %10, 1:i8, 1:i8, %10
%12:i8 = phi %0, %5, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 0:i32, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, %2
%5:i8 = phi %0, %2, %2, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, 1:i32, 1:i32, 0:i32, %3, 1:i32
%5:i32 = phi %0, %4, 2:i32, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var
%2:i64 = sext %1
%3:i64 = and 4294967295:i64, %2
%4 = block 3
%5:i64 = phi %4, %3, %3, %3
%6:i64 = phi %0, %3, %3, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000xx000000000) (znp)
%2:i32 = var (00000000000000000000000x00000000) (n)
%3:i32 = xor 256:i32, %2
%4:i32 = or %1, %3
%5:i32 = phi %0, %4, %3, %3, %4
%6:i32 = var
%7:i32 = and 15:i32, %6
%8:i32 = var (0000000000000000000000000000xxxx) (n)
%9:i32 = shlnw %8, 4:i32
%10:i32 = or %7, %9
%11:i32 = or %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 4
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, %3, %3, 1:i8
%5:i8 = phi %1, %4, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6 = block 2
%7:i1 = var
%8:i8 = zext %7
%9:i1 = var
%10:i8 = zext %9
%11:i8 = phi %6, %8, %10
%12:i8 = phi %0, %5, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 5:i64
%4:i64 = phi %0, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 5:i32
%3:i32 = phi %0, %2, 5:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, 1:i64, %3
%5:i64 = addnsw 18446744073709551615:i64, %4
%6:i64 = add %0, %5
%7:i64 = urem %6, %4
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 5
%1:i64 = var
%2:i64 = and 1:i64, %1
%3:i8 = trunc %2
%4:i8 = phi %0, 1:i8, 0:i8, 1:i8, 1:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = var
%3:i1 = eq 97:i8, %2
%4:i1 = var
%5:i32 = select %4, 1:i32, 2:i32
%6:i32 = select %3, 0:i32, %5
%7:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%8:i32 = trunc %7
%9:i32 = and 3:i32, %8
%10:i32 = phi %0, 2:i32, %6, %9, 2:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000xxxxxxxxxxx) (zn)
%2:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%3:i64 = addnw %1, %2
%4:i64 = var (0000000000000000000000000000000000000000000000000000000xxxxxxxxx) (zn)
%5:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%6:i64 = addnw %4, %5
%7:i64 = phi %0, %3, %6
%8:i8 = var
%9:i64 = zext %8
%10:i64 = addnsw %7, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i32 = zext %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 512:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = var (0000000x) (n)
%3:i8 = xor 1:i8, %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, %3, %3
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = var
%3:i32 = zext %2
%4:i32 = select %1, 2:i32, %3
%5:i32 = phi %0, 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = eq 0:i32, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = select %2, 5:i32, %4
%6:i32 = phi %0, 1:i32, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = var (0000000000000000000100001100010x) (zn)
%4:i32 = phi %2, 4292:i32, 4293:i32, 4292:i32, %3
%5:i32 = phi %1, %4, 4292:i32
%6:i32 = phi %0, 4292:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000xxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 4095:i32, %0
%2:i64 = zext %1
%3 = block 3
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = var (00000000000000000000000000000x00) (n)
%6:i32 = phi %3, %4, 0:i32, %5
%7:i64 = zext %6
%8:i64 = shl %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i24 = var
%1:i24 = shl %0, 9:i24
%2:i24 = and 2096640:i24, %1
%3:i24 = var (00000000000000000000000x) (n)
%4:i24 = shlnw %3, 4:i24
%5:i32 = var (0000000000000000000000000000x000) (n)
%6:i24 = trunc %5
%7:i24 = or %4, %6
%8:i24 = or %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 10
%3:i32 = var (000000000000000000000000000000xx) (zn)
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 2:i32
%6:i32 = shlnsw %5, 25:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = slt 4294967295:i32, %0
%2:i32 = select %1, %0, 3:i32
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000)
%1:i64 = ashrexact %0, 24:i64
%2:i64 = addnsw 18446744073709551603:i64, %1
%3:i64 = lshr 145414741426432:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, %5, %5, 1:i8, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = sub %1, %2
%4 = block 2
%5:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i64 = phi %4, %5, 0:i64
%7:i1 = ult %3, %6
%8:i64 = select %7, %3, %6
%9:i64 = phi %0, 0:i64, 0:i64, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = var (0000000x) (n)
%6:i8 = or %4, %5
%7:i8 = phi %1, %6, %4
%8:i8 = var
%9:i8 = and 1:i8, %8
%10:i1 = var
%11:i8 = zext %10
%12:i8 = or %9, %11
%13:i8 = phi %0, %7, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 53
%1 = block 2
%2:i32 = phi %1, 0:i32, 7:i32
%3:i1 = var
%4 = block 2
%5:i32 = phi %4, 0:i32, 4:i32
%6:i32 = select %3, 0:i32, %5
%7 = block 2
%8:i32 = phi %7, 0:i32, 5:i32
%9:i1 = eq 5:i32, %8
%10:i32 = select %9, 6:i32, %8
%11:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %6, %6, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %10, %8, 0:i32, 0:i32, 8:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 10:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 9:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 11:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 11:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 3:i32, 2:i32, 1:i32, 0:i32, 0:i32
%3:i32 = shlnw %2, 28:i32
%4:i32 = phi %0, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 6
%3 = block 4
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = var (0000000x) (n)
%9:i8 = phi %6, %7, %8
%10:i8 = phi %1, %5, %9
%11 = block 2
%12:i32 = var
%13:i1 = eq 28:i32, %12
%14:i8 = select %13, %10, 0:i8
%15:i8 = phi %0, %10, %10, %10, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 1:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = phi %0, 0:i32, %1
%3:i32 = ctlz %2
%4:i32 = subnsw 32:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = phi %1, 1:i1, 0:i1
%3:i32 = select %2, 2:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 0:i32, 2:i32
%6 = block 2
%7:i32 = phi %6, 0:i32, 2:i32
%8:i32 = phi %0, %3, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = phi %2, %3, 1:i32
%5:i32 = phi %1, 0:i32, %4, 0:i32
%6:i32 = phi %0, %5, %5, %5, 1:i32, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2, 0:i64
%4:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%5:i64 = and 8589930496:i64, %4
%6:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00)
%7:i64 = zext %6
%8:i64 = addnw %5, %7
%9:i64 = addnsw %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 1:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx00) (n)
%1:i32 = shl 7:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 2076:i32, 2077:i32, 2077:i32
%3:i32 = phi %0, 2075:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = xor 4398046511104:i64, %1
%3:i64 = or 131941395333120:i64, %2
%4:i64 = addnw 87960930222080:i64, %2
%5:i64 = phi %0, %3, %2, %4
%6 = block 4
%7:i64 = var
%8:i64 = lshr %7, 42:i64
%9:i64 = and 7:i64, %8
%10:i64 = add %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = subnsw %0, %1
%3:i64 = srem %2, 64:i64
%4:i64 = addnsw 64:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %1, %2, %1
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 17
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, %5, 0:i32
%7:i32 = phi %0, 4:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 11
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i64 = shlnw %1, 4:i64
%3:i64 = or 96:i64, %2
%4:i64 = phi %0, 112:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%2:i32 = shlnw %1, 3:i32
%3:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%4:i32 = shlnw %3, 2:i32
%5:i32 = phi %0, %2, %4
%6:i32 = shlnsw %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i16 = var (000x000000000000) (n)
%2:i16 = phi %0, 0:i16, 0:i16, 0:i16, 0:i16, 4096:i16, 4096:i16, 0:i16, %1, 0:i16
%3:i16 = var (00000000xxxxxxxx) (n)
%4:i16 = shlnw %3, 13:i16
%5:i16 = or %2, %4
%6:i16 = and 45056:i16, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 5
%1 = block 8
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000)
%1:i64 = and 4128768:i64, %0
%2:i64 = var (0000000000000000000000000000000000000x00000000000000000000000000) (n)
%3:i64 = var (00000000000000000000000000000000000000000000000000x0xxxxxxxxxxxx) (n)
%4:i64 = or %2, %3
%5:i64 = or %1, %4
%6:i32 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = ult %0, 144115188075855872:i64
%2:i64 = shl %0, 6:i64
%3:i64 = select %1, %2, 9223372036854775744:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var (000000000000000x) (n)
%2:i8 = trunc %1
%3:i8 = xor 1:i8, %2
%4 = block 3
%5:i1 = var
%6:i1 = var
%7:i1 = phi %4, 1:i1, %5, %6
%8:i8 = zext %7
%9:i8 = phi %0, %3, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1:i8 = var (0001000x) (zn)
%2:i64 = zext %1
%3:i64 = or 34359738368:i64, %2
%4:i64 = phi %0, %3, %2, %2, %2, %2, %2, %2, %2, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = var (000000000000000000000000000000xx) (znp)
%4:i32 = select %1, %2, %3
%5:i32 = addnw 1:i32, %4
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = addnw %4, %6
%8:i32 = phi %0, %4, %5, %7
%9:i32 = addnsw 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %1, %2, %3
%5:i32 = or 512:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = ctlz %0
%2:i32 = subnsw 32:i32, %1
%3:i16 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (00000000000000000000000000xxxxxx) (n)
%2:i8 = trunc %1
%3:i8 = and 1:i8, %2
%4 = block 3
%5:i32 = var
%6:i1 = eq 0:i32, %5
%7:i8 = select %6, 0:i8, %3
%8:i8 = phi %0, %3, %7, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i16 = var (00000000000000xx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32
%5:i8 = var (0000000x) (n)
%6:i1 = eq 0:i8, %5
%7:i32 = select %6, %4, 0:i32
%8:i32 = phi %0, %4, %7, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshrexact %0, 2:i64
%2:i32 = trunc %1
%3:i16 = var
%4:i32 = zext %3
%5:i32 = urem %2, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 10
%1 = block 2
%2:i32 = phi %1, 4:i32, 3:i32
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = phi %0, %3, %2, %2, %2, %2, %2, %2, %2, %2, %2
%5:i1 = var
%6:i32 = select %5, 3:i32, 1:i32
%7:i32 = phi %1, %6, 1:i32
%8:i1 = ult %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %3, 0:i32, %7
%9:i32 = phi %0, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = zext %1
%3:i1 = var
%4:i32 = zext %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 2:i32, 0:i32
%8:i32 = phi %5, 0:i32, %7
%9:i32 = phi %0, %2, %4, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = select %2, 0:i32, %4
%6:i32 = phi %1, %5, 1:i32, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 32:i64
%4:i64 = phi %0, 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ult %0, 6:i32
%2:i32 = select %1, %0, 15:i32
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32, 0:i32, 0:i32, 0:i32
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000)
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = or %0, %1
%3:i64 = or 1:i64, %2
%4:i64 = and 18446744073709551614:i64, %2
%5:i1 = ult %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var
%2:i1 = ne 0:i64, %1
%3:i8 = zext %2
%4 = block 2
%5 = block 3
%6:i8 = phi %5, %3, %3, 1:i8
%7:i8 = phi %4, %6, %3
%8:i8 = phi %0, %3, %3, %7, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (0000xxx0) (n)
%1:i8 = var (0000000x) (n)
%2:i8 = or %0, %1
%3:i8 = shl %2, 1:i8
%4:i64 = var (00000000000000000000000000000000xxxxxxxx000000000000000000000000) (n)
%5:i1 = ne 0:i64, %4
%6:i8 = zext %5
%7:i8 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i8 = trunc %2
%4:i8 = phi %1, %3, 0:i8, %3, %3, %3
%5:i8 = phi %0, %4, %3, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx00) (n)
%1:i32 = shl 1:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var
%4:i64 = phi %0, %2, %3
%5:i1 = slt 18446744073709551615:i64, %4
%6:i64 = sub 0:i64, %4
%7:i64 = select %5, %4, %6
%8:i64 = srem %7, 8:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = or 2:i32, %1
%3:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%4:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%5:i32 = or %3, %4
%6:i32 = or %2, %5
%7:i32 = var (000000000000000000000000xxxxxx00) (n)
%8:i32 = or 3:i32, %7
%9:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%10:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%11:i32 = or %9, %10
%12:i32 = or %8, %11
%13:i32 = var (000000000000000000000000xxxxxx00) (n)
%14:i32 = or 3:i32, %13
%15:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%16:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%17:i32 = or %15, %16
%18:i32 = or %14, %17
%19:i32 = phi %0, %6, %6, %12, %12, %18, %18
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 3:i32, %0
%2:i32 = subnsw 4:i32, %1
%3:i1 = eq 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 3:i32, 5:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 3:i32, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%3:i32 = var (0000000xxxxxxxxxxxxxxxxx00000000) (n)
%4:i32 = or %2, %3
%5:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%6:i32 = shlnw %5, 9:i32
%7:i32 = phi %0, %4, %6
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = shlnw %8, 13:i32
%10:i32 = phi %0, %9, 8192:i32
%11:i32 = or %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 1:i8
%4:i8 = phi %0, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6 = block 2
%7:i8 = var
%8:i1 = eq 95:i8, %7
%9:i8 = zext %8
%10:i8 = phi %0, %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 3:i32, 0:i32
%4:i32 = phi %1, 0:i32, 0:i32, %3
%5 = block 3
%6:i1 = var
%7:i32 = select %6, 3:i32, 0:i32
%8:i32 = phi %5, 0:i32, 0:i32, %7
%9 = block 3
%10:i1 = var
%11:i32 = select %10, 3:i32, 0:i32
%12:i32 = phi %9, 0:i32, 0:i32, %11
%13:i32 = phi %0, 3:i32, %4, %8, %12, 3:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 5:i32, 4:i32
%4:i8 = var (0000000x) (n)
%5:i1 = ne 0:i8, %4
%6:i32 = select %2, 9:i32, 8:i32
%7:i32 = select %2, 7:i32, 6:i32
%8:i32 = select %5, %6, %7
%9:i32 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i1 = var
%2:i1 = and %0, %1
%3:i32 = select %2, 4:i32, 2:i32
%4:i32 = addnsw 4294967295:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 12
%2:i1 = var
%3:i32 = select %2, 7:i32, 0:i32
%4:i1 = var
%5:i32 = select %4, 0:i32, 6:i32
%6:i32 = phi %1, 15:i32, 14:i32, 10:i32, %3, %5, 4:i32, 13:i32, 5:i32, 3:i32, 1:i32, 0:i32, 2:i32
%7:i32 = phi %0, 9:i32, 8:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000000x0000) (n)
%2:i64 = addnw 56:i64, %1
%3:i64 = phi %0, 72:i64, %2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = subnsw 0:i64, %4
%6:i64 = and 24:i64, %5
%7:i64 = addnsw %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (00000000000x0000) (n)
%1:i1 = eq 0:i16, %0
%2:i16 = var (00000000000x0000) (n)
%3:i1 = ne 0:i16, %2
%4:i1 = or %1, %3
%5 = block 2
%6:i16 = var (00xxxxxxxxxxxxxx) (n)
%7:i16 = and 511:i16, %6
%8:i32 = var (00000000000000000000000xxxxxxxxx) (n)
%9:i16 = trunc %8
%10:i16 = phi %5, %7, %9
%11:i16 = or 16:i16, %10
%12:i16 = select %4, %10, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000x1) (zn)
%4:i32 = var (000000000000000000000000000000x1) (zn)
%5:i32 = phi %2, %3, %4
%6:i1 = var
%7:i32 = select %6, 1:i32, %5
%8:i32 = phi %1, %5, %7
%9:i32 = phi %0, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i1 = eq 28:i32, %3
%5 = block 2
%6 = block 6
%7 = block 4
%8:i8 = var (0000000x) (n)
%9:i8 = phi %6, %8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%10 = block 2
%11:i8 = var (0000000x) (n)
%12:i8 = var (0000000x) (n)
%13:i8 = phi %10, %11, %12
%14:i8 = phi %5, %9, %13
%15:i8 = select %4, %14, 0:i8
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = zext %1
%3:i64 = urem %0, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3:i32 = phi %1, 1:i32, %2
%4:i32 = addnw 1:i32, %3
%5 = block 2
%6:i32 = var (00000000000000000000000000000xxx) (n)
%7:i32 = addnw %3, %6
%8:i32 = phi %5, %7, %3
%9:i32 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 17
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 2:i32, 2:i32, 3:i32, 3:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%1:i32 = addnw 2:i32, %0
%2:i32 = and 65535:i32, %1
%3:i16 = var
%4:i32 = zext %3
%5:i32 = mulnw %2, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 72:i64
%4:i64 = subnsw 256204778801521550:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 7
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8
%3 = block 4
%4:i8 = phi %3, 1:i8, 1:i8, 0:i8, 0:i8
%5:i8 = phi %0, %2, 1:i8, 1:i8, %4, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i24 = zext %1
%3:i24 = shlnw %2, 20:i24
%4:i24 = phi %0, %3, 1048576:i24, 1048576:i24
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, 0:i1, 1:i1, %2
%4:i8 = zext %3
%5 = block 3
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %5, %4, %7, 1:i8
%9:i8 = phi %0, %4, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2, %1
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 6
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8
%5:i8 = phi %0, %4, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = lshr %2, 6:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = var
%6:i32 = lshr %5, 6:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000000100x) (zn)
%1:i64 = shl 1:i64, %0
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = addnsw %2, %4
%6:i64 = subnsw 0:i64, %1
%7:i64 = and %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = lshr 1767200085:i64, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8
%5:i8 = phi %0, %4, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = var (0000000x) (n)
%6:i8 = var (0000000x) (n)
%7:i8 = or %5, %6
%8:i8 = phi %1, %4, %7
%9:i8 = and 1:i8, %8
%10:i1 = var
%11:i8 = zext %10
%12:i8 = or %9, %11
%13:i8 = phi %0, %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 11
%2:i32 = phi %1, 8:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32
%3:i32 = phi %0, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 8:i32, 8:i32, 10:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000)
%4:i64 = phi %0, %2, %3
%5:i64 = urem 1048576:i64, %4
%6:i64 = subnsw 1048576:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xxxx) (n)
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = addnw %0, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = addnw %2, %4
%6:i1 = var
%7:i1 = xor 1:i1, %6
%8:i32 = zext %7
%9:i32 = add %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i1 = var
%4:i32 = zext %3
%5:i32 = phi %0, %2, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = phi %1, 0:i16, 1:i16
%3:i16 = or 2:i16, %2
%4:i16 = phi %0, %2, %3
%5:i16 = or 16:i16, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = var (0000000x) (n)
%3:i8 = and %1, %2
%4:i8 = phi %0, 1:i8, %3
%5:i8 = xor 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 21
%2:i64 = phi %1, 0:i64, 8:i64, 11:i64, 8:i64, 8:i64, 11:i64, 11:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 11:i64, 11:i64, 12:i64, 12:i64, 10:i64, 10:i64, 7:i64, 7:i64
%3:i64 = phi %0, %2, 8:i64, 8:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = eq 0:i32, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = select %3, 2:i32, 1:i32
%6:i32 = select %2, %4, %5
%7:i32 = addnw 1:i32, %6
%8:i1 = var
%9:i32 = zext %8
%10:i32 = addnw %6, %9
%11:i32 = phi %0, %6, %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, 0:i8, %2, 1:i8
%4:i8 = var
%5:i8 = and 1:i8, %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = or %5, %7
%9:i8 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 3:i32, 2:i32
%4:i32 = addnw 2:i32, %3
%5:i32 = var
%6:i32 = lshr %5, 2:i32
%7:i32 = addnw %4, %6
%8:i32 = phi %0, %7, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = addnsw %0, %2
%4:i64 = urem %3, %0
%5:i64 = subnsw %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = add %0, %1
%3:i64 = subnsw 0:i64, %1
%4:i64 = and %2, %3
%5:i32 = var
%6:i64 = zext %5
%7:i64 = urem %4, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = sub %1, %2
%4:i32 = var
%5:i64 = zext %4
%6:i1 = ult %3, %5
%7:i64 = select %6, %3, %5
%8:i64 = phi %0, 0:i64, 0:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx00) (n)
%1:i32 = shl 3:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshr 146:i64, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 2
%3 = block 10
%4:i32 = var (0000000000000000000000000000xxxx) (n)
%5:i32 = phi %2, %4, 0:i32
%6:i32 = phi %1, 0:i32, 1:i32, %5, %5, %5, %5
%7:i32 = phi %0, %6, 10:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1:i8 = var (0001000x) (zn)
%2:i64 = zext %1
%3:i64 = or 34359738368:i64, %2
%4:i64 = phi %0, %3, %2, %2, %2, %2, %2, %2, %2, %2, %2
%5:i64 = or 68719476736:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3 = block 2
%4:i1 = var
%5:i32 = zext %4
%6:i32 = phi %3, %5, 0:i32
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 1:i32, 0:i32, %5
%7:i32 = phi %0, 0:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 389:i32, 388:i32, 388:i32, 388:i32
%3:i32 = phi %0, %2, 389:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (znp)
%2:i64 = or %0, %1
%3:i64 = sub 0:i64, %2
%4:i64 = and %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = xor 1:i32, %2
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, 0:i32, %5
%7:i32 = phi %0, %3, %6
%8:i32 = shlnsw %7, 1:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = sub 32:i32, %0
%3:i32 = lshr 4:i32, %2
%4:i32 = select %1, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000xxxxxx000000000000000000000000000000000000) (n)
%1:i64 = or 123205431853056:i64, %0
%2:i64 = addnsw 18446744073709551608:i64, %1
%3 = block 2
%4:i64 = var (0000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i64 = phi %3, %4, %5
%7:i64 = mulnsw 18446744073709551608:i64, %6
%8:i64 = add %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var
%3:i1 = eq %1, %2
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = select %3, %4, 1:i32
%6:i32 = phi %0, %5, 2:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6:i32 = phi %3, 0:i32, %5
%7:i32 = phi %0, 0:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3:i32 = shl 1:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ne 0:i32, %1
%3:i64 = zext %1
%4:i64 = select %2, %3, 1:i64
%5:i1 = eq 0:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = phi %0, 0:i1, 0:i1, 1:i1, 0:i1, 0:i1
%2:i32 = var
%3:i32 = phi %0, 0:i32, 0:i32, %2, 0:i32, 0:i32
%4:i1 = ult %3, 9:i32
%5:i1 = and %1, %4
%6:i32 = select %5, %3, 9:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = select %2, 0:i32, %4
%6:i32 = phi %1, %5, 1:i32, 1:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, %6
%9:i32 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = var (000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = shlnw %3, 32:i64
%5:i64 = var (000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i64 = shlnw %5, 32:i64
%7:i64 = phi %0, %2, %4, %6, 4294967295:i64
%8:i32 = var
%9:i64 = zext %8
%10:i32 = var
%11:i64 = zext %10
%12:i32 = var
%13:i64 = zext %12
%14:i64 = var (000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%15:i64 = shlnw %14, 32:i64
%16:i64 = phi %0, %9, %11, %13, %15
%17:i64 = or %7, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = select %0, 8:i64, 9:i64
%2:i64 = shl 1:i64, %1
%3:i64 = addnsw 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 8
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (00000000000000000000000000xxxxxx) (n)
%2:i32 = subnsw 64:i32, %1
%3:i16 = trunc %2
%4:i1 = var
%5:i16 = zext %4
%6:i16 = addnw %5, %3
%7:i16 = phi %0, 0:i16, %3, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 3:i32, 3:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (000000000000000000000000000xxxxx) (n)
%3:i32 = phi %1, 32:i32, %2
%4:i32 = phi %0, 0:i32, %3, %3
%5:i32 = subnsw 32:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i24 = trunc %0
%2:i24 = shlnw %1, 4:i24
%3:i32 = var (000000000000000000000000000000x0) (n)
%4:i32 = shlnw %3, 2:i32
%5:i24 = trunc %4
%6:i24 = or %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 24:i32, %0
%2:i64 = select %1, 8:i64, 4:i64
%3:i64 = addnsw 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = var
%3:i32 = var
%4:i32 = phi %1, %2, %3
%5:i64 = zext %4
%6:i1 = var
%7:i64 = select %6, 8:i64, %5
%8:i1 = var
%9:i64 = select %8, 6:i64, %5
%10:i64 = phi %0, %5, %5, %5, %5, %7, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%3:i32 = and 30:i32, %2
%4:i32 = phi %1, %3, %3
%5:i32 = var (000000000000000000000000000xxxx0) (n)
%6:i32 = subnsw 0:i32, %5
%7:i32 = and 30:i32, %6
%8:i32 = phi %0, %4, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i8 = add 255:i8, %0
%2:i8 = lshr 110:i8, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 1073741823:i32, %0
%2:i32 = addnsw 4294967295:i32, %1
%3:i1 = ult %2, 2:i32
%4:i32 = subnsw 4:i32, %1
%5:i32 = select %3, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i32 = sext %1
%3:i32 = addnsw 31:i32, %2
%4:i32 = phi %0, 7:i32, 63:i32, 31:i32, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i8 = zext %1
%3:i8 = xor 1:i8, %2
%4:i8 = phi %0, 0:i8, 0:i8, 0:i8, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%1:i64 = zext %0
%2:i64 = shl 15:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2:i32 = phi %1, 6:i32, 6:i32, 6:i32, 6:i32, 0:i32, 0:i32
%3:i32 = phi %0, 11:i32, 2:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var
%3:i64 = phi %0, %1, %2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = phi %0, 1:i64, %5
%7:i64 = addnsw 18446744073709551615:i64, %6
%8:i64 = add %3, %7
%9:i64 = urem %8, %6
infer %9

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i32 = zext %3
%5:i32 = phi %1, %4, 1:i32
%6:i32 = phi %0, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i1 = ult %1, 36:i64
%3:i64 = select %2, %1, 36:i64
%4:i64 = subnsw 36:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = var
%3:i32 = and 7:i32, %2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = xor 1:i32, %4
%6:i32 = phi %1, 3:i32, %3, %3, 2:i32, 0:i32, %5, 0:i32
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000001x0) (zn)
%2:i32 = phi %0, 6:i32, %1
%3:i32 = var
%4:i32 = add 4294967295:i32, %3
%5:i32 = add %2, %4
%6:i32 = udiv %5, %2
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (znp)
%2:i64 = shlnw %1, 32:i64
%3 = block 4
%4:i8 = var
%5:i64 = zext %4
%6:i64 = or %2, %5
%7:i1 = var
%8:i64 = select %7, 8589934592:i64, 0:i64
%9:i64 = phi %0, %6, 0:i64, 0:i64, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = phi %0, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, 7:i32
%2:i32 = subnsw 8:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 9
%2:i1 = var
%3:i32 = select %2, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, %3, 0:i32, 1:i32
%5:i64 = var
%6:i1 = ult %5, 16:i64
%7:i32 = select %6, 2:i32, 0:i32
%8:i32 = phi %0, %4, 0:i32, 2:i32, %7, 2:i32, 2:i32, 2:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = var
%4:i8 = and 1:i8, %3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = or %4, %6
%8:i8 = phi %0, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx00) (n)
%1:i32 = shl 6:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i64 = var
%2:i64 = var
%3:i64 = phi %0, 0:i64, %1, %2, %1, %1, %1, %1
%4:i64 = srem %3, 8:i64
%5:i64 = subnsw 16:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = var
%2:i64 = select %1, 1:i64, %0
%3:i64 = addnsw %0, %2
%4:i1 = ult 4611686018427387903:i64, %3
%5:i1 = ult %3, %0
%6:i1 = or %4, %5
%7:i64 = select %6, 4611686018427387903:i64, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i8 = var (000xxxx1) (zn)
%4 = block 5
%5:i8 = var (0000xxx0) (n)
%6:i8 = var (000x0000) (n)
%7:i8 = or %5, %6
%8:i8 = phi %2, %3, %7
%9:i8 = phi %1, %8, %7
%10 = block 2
%11:i8 = phi %10, %8, %9
%12:i8 = phi %0, %9, %11, %11, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = select %2, 8:i8, 16:i8
%4:i8 = phi %1, 8:i8, %3
%5:i8 = phi %0, %4, 16:i8, 16:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 40:i32, 55:i32
%3:i32 = phi %0, 40:i32, %2, 55:i32, %2, 40:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, %4, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %0, %1, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i1 = eq 0:i32, %1
%3:i8 = zext %2
%4:i8 = var
%5:i1 = var
%6:i8 = zext %5
%7:i8 = and %4, %6
%8:i8 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i1 = var
%3:i32 = zext %2
%4:i1 = var
%5:i32 = zext %4
%6 = block 2
%7 = block 2
%8:i32 = var (000000000000000000000000000000x0) (n)
%9:i32 = phi %6, 0:i32, %8
%10:i32 = phi %1, %3, %5, %9, %9
%11:i1 = var
%12:i32 = zext %11
%13:i1 = var
%14:i32 = zext %13
%15:i32 = phi %0, %10, %12, %14, 1:i32, 1:i32
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000000xx) (n)
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = addnw %0, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = addnw %2, %4
%6:i4 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 24
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = select %0, 8:i32, 4:i32
%2:i64 = zext %1
%3:i64 = addnsw 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = phi %0, 1:i32, 16:i32, 8:i32, 4:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 3:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 8:i32, 4:i32
%3:i32 = addnsw 4294967295:i32, %2
%4:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = trunc %4
%6:i32 = and 1073741823:i32, %5
%7:i32 = addnsw %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = xor 1:i8, %2
%4 = block 3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %1, %3, %6, %6
%8:i8 = phi %0, %7, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var
%3:i8 = var (0000000x) (n)
%4:i8 = and %2, %3
%5:i8 = phi %1, 1:i8, %4
%6:i8 = var
%7:i1 = var
%8:i8 = zext %7
%9:i8 = and %6, %8
%10:i8 = phi %0, %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 44
%1 = block 2
%2:i64 = var (000000000000000000000000xxxxxxxx00000000000000000000000000000000) (n)
%3:i64 = or 12:i64, %2
%4:i64 = phi %1, %3, 12:i64
%5 = block 2
%6:i64 = var (000000000000000000000000xxxxxxxx00000000000000000000000000000000) (n)
%7:i64 = or 13:i64, %6
%8:i64 = phi %5, %7, 13:i64
%9 = block 2
%10:i64 = var (000000000000000000000000xxxxxxxx00000000000000000000000000000000) (n)
%11:i64 = or 14:i64, %10
%12:i64 = phi %9, %11, 14:i64
%13 = block 2
%14:i64 = var (000000000000000000000000xxxxxxxx00000000000000000000000000000000) (n)
%15:i64 = or 15:i64, %14
%16:i64 = phi %13, %15, 15:i64
%17 = block 2
%18:i64 = var (000000000000000000000000xxxxxxxx00000000000000000000000000000000) (n)
%19:i64 = or 16:i64, %18
%20:i64 = phi %17, %19, 16:i64
%21 = block 2
%22:i64 = var (000000000000000000000000xxxxxxxx00000000000000000000000000000000) (n)
%23:i64 = or 17:i64, %22
%24:i64 = phi %21, %23, 17:i64
%25 = block 2
%26:i64 = var (000000000000000000000000xxxxxxxx00000000000000000000000000000000) (n)
%27:i64 = or 18:i64, %26
%28:i64 = phi %25, %27, 18:i64
%29:i64 = phi %0, 1:i64, 1:i64, 2:i64, 2:i64, 3:i64, 3:i64, 4:i64, 4:i64, 5:i64, 5:i64, 6:i64, 6:i64, 7:i64, 7:i64, 4294967304:i64, 4294967304:i64, 34359738376:i64, 34359738376:i64, 68719476744:i64, 68719476744:i64, 137438953480:i64, 137438953480:i64, 274877906952:i64, 274877906952:i64, 549755813896:i64, 549755813896:i64, %4, %4, %8, %8, %12, %12, %16, %16, %20, %20, %24, %24, %28, %28, 11:i64, 11:i64, 0:i64, 0:i64
infer %29

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i32 = zext %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6:i32 = var
%7:i1 = eq 1:i32, %6
%8:i8 = zext %7
%9:i8 = phi %0, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshr 1092:i64, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = var (0000000x) (n)
%3:i8 = and %1, %2
%4:i8 = phi %0, 1:i8, %3
%5:i8 = var
%6:i8 = phi %0, 0:i8, %5
%7:i8 = and 1:i8, %6
%8:i8 = or %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, %3, 1:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = xor 31:i32, %0
%2:i8 = var (0000000x) (n)
%3:i32 = zext %2
%4:i32 = subnsw %1, %3
%5 = block 3
%6:i1 = var
%7:i1 = phi %5, %6, 1:i1, 0:i1
%8:i32 = sext %7
%9:i32 = addnsw %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ctlz %0
%2:i64 = subnsw 67:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 31:i32, %0
%2:i32 = or 32:i32, %1
%3:i32 = var
%4:i32 = sub 32:i32, %3
%5:i32 = lshr %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2 = block 3
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var
%3:i64 = phi %0, %1, %2
%4:i64 = add 18446744073709551608:i64, %3
%5:i64 = lshr %4, 3:i64
%6:i64 = shlnuw %5, 3:i64
%7:i64 = sub %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i16 = shl %0, 8:i16
%2:i16 = and 768:i16, %1
%3:i24 = var (000000000000000x00000000) (n)
%4:i16 = trunc %3
%5:i16 = shlnw %4, 4:i16
%6:i16 = or %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = var (0000000x) (n)
%6:i8 = or %4, %5
%7:i8 = phi %1, %6, %4
%8 = block 2
%9:i8 = var (0000000x) (n)
%10:i8 = var (0000000x) (n)
%11:i8 = or %9, %10
%12:i8 = phi %8, %7, %11
%13:i8 = phi %0, %7, %12, %7
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i80 = var
%2:i80 = lshr %1, 65:i80
%3:i32 = trunc %2
%4:i80 = var
%5:i80 = lshr %4, 65:i80
%6:i32 = trunc %5
%7:i32 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (n)
%1:i64 = ctlz %0
%2:i64 = addnw 4294967264:i64, %1
%3:i32 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8, 0:i8
%4:i8 = xor 1:i8, %3
%5:i8 = phi %1, %4, %3
%6:i8 = phi %0, %5, %5, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 6
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, %2, %2, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (000000000000000000000000000000xx) (znp)
%5:i32 = select %2, %3, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = var (0000000000000000000000000000000x) (n)
%8:i32 = addnw %5, %7
%9:i32 = phi %1, %5, %6, %8
%10:i32 = addnsw 1:i32, %9
%11:i1 = var
%12:i32 = zext %11
%13:i32 = addnsw %9, %12
%14:i32 = phi %0, %9, %10, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000x0000000000001) (zn)
%2:i32 = or 67108864:i32, %1
%3 = block 3
%4:i1 = var
%5:i32 = var (000010000000000000x0000000000001) (zn)
%6:i32 = select %4, %5, %1
%7:i32 = phi %0, %2, %6
%8:i32 = or 131072:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3:i32 = shlnw %2, 24:i32
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 6
%3:i32 = phi %2, 6:i32, 6:i32, 6:i32, 6:i32, 0:i32, 0:i32
%4:i32 = phi %1, 11:i32, 2:i32, %3, %3
%5:i32 = phi %0, %4, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %2, 0:i8, %4
%6:i8 = phi %1, %5, 1:i8
%7:i8 = and 1:i8, %6
%8:i8 = phi %0, %7, %5
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %1, %2, %3
%5:i32 = or 512:i32, %4
%6:i32 = phi %0, %5, %4
%7:i32 = or 2048:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = xor 1:i32, %2
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, 0:i32, %5
%7:i32 = phi %0, %3, %6
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %0, %8, %2
%10:i32 = shlnsw %9, 1:i32
%11:i32 = or %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i48 = var (0000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (n)
%2:i48 = lshr 65793:i48, %1
%3:i8 = trunc %2
%4:i8 = phi %0, %3, 1:i8, 1:i8, 1:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 1:i32, %1
%3:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%4:i32 = shlnw %3, 2:i32
%5:i32 = select %2, %4, 0:i32
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 31
%2:i1 = var
%3:i32 = zext %2
%4 = block 2
%5:i1 = var
%6:i32 = zext %5
%7:i1 = var
%8:i32 = zext %7
%9:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32, 0:i32, %3, 0:i32, 1:i32, 2:i32, 1:i32, 1:i32, %6, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %8, 1:i32, 0:i32, 0:i32, 2:i32, 2:i32, 0:i32, 0:i32, 0:i32, 1:i32, 0:i32, 0:i32, 1:i32
%10:i32 = phi %0, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, %9, 0:i32, 0:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i64 = var (0xxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000) (n)
%3:i64 = select %1, 0:i64, %2
%4:i64 = phi %0, 9223090561878065152:i64, 9223090561878065152:i64, 0:i64, %3
%5:i64 = var
%6:i64 = var
%7:i64 = phi %0, 0:i64, %5, 0:i64, %6
%8:i64 = and 281474976710655:i64, %7
%9:i64 = or %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000xxxx00000000) (n)
%2:i32 = var (0000000000000000000x000000000000) (n)
%3:i32 = or %1, %2
%4:i1 = var
%5:i32 = var (0000000000000000000000001xxxxxxx) (zn)
%6:i32 = var (0000000000000000000000000xxxxxxx) (n)
%7:i32 = select %4, %5, %6
%8:i32 = or %3, %7
%9:i32 = phi %0, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (n)
%2:i64 = var (000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (n)
%3:i64 = addnw %1, %2
%4:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%5:i64 = and 34359738360:i64, %4
%6:i64 = phi %0, %3, %5
%7:i64 = addnw 40:i64, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 2147483647:i32, %1
%3:i32 = phi %0, %2, %2
%4:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = subnsw %2, %4
%6:i32 = phi %0, 0:i32, %5
%7:i32 = sub %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = mulnw 48:i64, %1
%3:i64 = addnw 88:i64, %2
%4:i64 = phi %0, %3, 88:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5 = block 3
%6:i8 = phi %5, %4, 1:i8, 1:i8
%7:i8 = phi %0, %4, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var
%2:i32 = udiv 128:i32, %1
%3:i32 = urem %0, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i24 = var (xxxxxxxxxxxxxxx000000000)
%1:i24 = and 2096640:i24, %0
%2:i24 = var (0000000000000000000x0000) (n)
%3:i24 = var (00000000000000000000x000) (n)
%4:i24 = or %2, %3
%5:i24 = or %1, %4
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i24 = trunc %6
%8:i24 = shlnw %7, 5:i24
%9:i24 = or %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%1:i64 = zext %0
%2:i64 = shl 85:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, %3, 1:i8, 1:i8
%5:i8 = var
%6:i1 = var
%7:i8 = zext %6
%8:i8 = and %5, %7
%9:i8 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000) (n)
%2:i64 = addnw 88:i64, %1
%3:i64 = phi %0, %2, 88:i64
%4:i1 = var
%5:i64 = zext %4
%6:i64 = shlnw %5, 4:i64
%7:i64 = addnsw %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000xxx) (zn)
%1:i32 = var
%2:i32 = mul %0, %1
%3:i32 = lshr %2, 3:i32
%4:i32 = var
%5:i32 = udiv %3, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxx000000000000) (n)
%1:i64 = bswap %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 64:i32, 128:i32, 256:i32, 64:i32
%2:i64 = zext %1
%3:i64 = addnsw 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000xxxxx) (n)
%1:i32 = shlnw %0, 8:i32
%2:i8 = var
%3:i32 = zext %2
%4:i32 = or %1, %3
%5:i32 = var (00000000000000000000000000x00000) (n)
%6:i32 = lshrexact %5, 5:i32
%7:i1 = var
%8:i32 = select %7, 14:i32, 15:i32
%9:i32 = shl %6, %8
%10:i32 = or %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000xxxxxx000000000000000000000000000000000000) (n)
%1:i64 = or 105613245808640:i64, %0
%2:i64 = addnsw 18446744073709551600:i64, %1
%3 = block 2
%4:i64 = var (0000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i64 = phi %3, %4, %5
%7:i64 = mulnsw 18446744073709551600:i64, %6
%8:i64 = add %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = var (000000000000000000000000000000xx) (znp)
%4:i32 = select %1, %2, %3
%5:i32 = addnw 1:i32, %4
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = addnw %4, %6
%8:i32 = phi %0, %4, %5, %7
%9:i32 = var
%10:i32 = var
%11:i1 = ne %9, %10
%12:i32 = zext %11
%13:i32 = addnsw %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%3:i32 = phi %1, %2, 0:i32
%4:i1 = var
%5:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%6:i32 = select %4, %5, %3
%7:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%8:i32 = and 4095:i32, %7
%9:i32 = phi %0, %3, %6, %8
%10:i32 = shlnsw %9, 8:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 19
%1:i24 = var (0000000000000000xxxxxxxx) (n)
%2:i8 = trunc %1
%3:i8 = and 1:i8, %2
%4:i24 = var (0000000000000000xxxxxxxx) (n)
%5:i8 = trunc %4
%6:i8 = and 1:i8, %5
%7:i24 = var (0000000000000000xxxxxxxx) (n)
%8:i8 = trunc %7
%9:i8 = and 1:i8, %8
%10:i24 = var (0000000000000000xxxxxxxx) (n)
%11:i8 = trunc %10
%12:i8 = and 1:i8, %11
%13:i24 = var (0000000000000000xxxxxxxx) (n)
%14:i8 = trunc %13
%15:i8 = and 1:i8, %14
%16:i24 = var (0000000000000000xxxxxxxx) (n)
%17:i8 = trunc %16
%18:i8 = and 1:i8, %17
%19:i24 = var (0000000000000000xxxxxxxx) (n)
%20:i8 = trunc %19
%21:i8 = and 1:i8, %20
%22:i24 = var (0000000000000000xxxxxxxx) (n)
%23:i8 = trunc %22
%24:i8 = and 1:i8, %23
%25:i24 = var (0000000000000000xxxxxxxx) (n)
%26:i8 = trunc %25
%27:i8 = and 1:i8, %26
%28:i24 = var (0000000000000000xxxxxxxx) (n)
%29:i8 = trunc %28
%30:i8 = and 1:i8, %29
%31:i24 = var (0000000000000000xxxxxxxx) (n)
%32:i8 = trunc %31
%33:i8 = and 1:i8, %32
%34:i24 = var (0000000000000000xxxxxxxx) (n)
%35:i8 = trunc %34
%36:i8 = and 1:i8, %35
%37 = block 6
%38:i1 = var
%39:i1 = phi %37, 1:i1, 1:i1, 1:i1, 1:i1, 0:i1, %38
%40:i8 = zext %39
%41:i16 = var (0000000x00000000) (n)
%42:i1 = ult 255:i16, %41
%43:i8 = zext %42
%44:i16 = var (00000000xxxxxxxx) (n)
%45:i16 = and 1:i16, %44
%46:i8 = trunc %45
%47:i8 = phi %0, %3, %6, %9, %12, 0:i8, %15, %18, %21, %24, %27, %30, %33, %36, %40, 0:i8, 0:i8, 0:i8, %43, %46
infer %47

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = var (00000000000000000000000000000xxx) (zn)
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = phi %1, %2, %3, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = var (0000000000000000000000000000000x) (n)
%8:i32 = addnsw %5, %7
%9:i32 = phi %0, %5, %6, %8
%10:i32 = add 1:i32, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = select %0, 8:i64, 4:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = addnsw %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ctlz %0
%2:i32 = trunc %1
%3:i32 = subnsw 64:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000xxxxx) (n)
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %1, %3, 33:i32
%5:i64 = var
%6:i32 = trunc %5
%7:i32 = ctlz %6
%8:i32 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i64 = zext %1
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2 = block 6
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, %3
%5:i8 = select %1, 0:i8, %4
%6:i8 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = phi %1, 0:i16, 1:i16
%3:i16 = or 2:i16, %2
%4:i16 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i64 = var
%3:i64 = var
%4:i64 = select %1, %2, %3
%5 = block 2
%6:i64 = var
%7:i64 = phi %5, %3, %6
%8:i64 = phi %0, %4, %7
%9:i1 = ult 18446744073709551583:i64, %8
%10:i64 = add 32:i64, %8
%11:i64 = select %9, 18446744073709551615:i64, %10
%12:i64 = sub %11, %8
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = zext %1
%3:i64 = shlnw %2, 32:i64
%4:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = zext %4
%6:i64 = shlnw %5, 32:i64
%7:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%8:i64 = zext %7
%9:i64 = shlnw %8, 32:i64
%10:i64 = phi %0, %3, %6, %9, 4294967295:i64
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 135:i32, 131:i32
%3 = block 2
%4:i32 = phi %3, 16:i32, 0:i32
%5:i32 = phi %0, %2, %4
%6:i64 = sext %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%2:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5:i32 = phi %0, %4, %4, %3, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i32 = trunc %1
%3:i1 = ult %2, 4:i32
%4:i32 = sub 4:i32, %2
%5:i32 = select %3, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = phi %0, 0:i64, %1
%3:i64 = add 3:i64, %2
%4:i64 = and 18446744073709551612:i64, %3
%5:i64 = sub %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = lshr %1, 3:i64
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 14
%2:i16 = var
%3:i32 = zext %2
%4 = block 11
%5 = block 11
%6:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%7:i32 = phi %4, %6, 0:i32, 2750:i32, 2892:i32, 2878:i32, 2899:i32, 2667:i32, 2675:i32, 2643:i32, 2659:i32, 2683:i32
%8:i32 = phi %1, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %7
%9:i32 = phi %0, 0:i32, %8, 2750:i32, 2892:i32, 2878:i32, 2899:i32, 2667:i32, 2675:i32, 2643:i32, 2659:i32, 2683:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 2:i32
%3:i1 = eq 2:i32, %2
%4:i32 = select %3, 0:i32, %2
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i16 = var
%2:i32 = zext %1
%3 = block 11
%4 = block 11
%5:i32 = phi %4, 0:i32, %2, 2751:i32, 2893:i32, 2879:i32, 2900:i32, 2668:i32, 2676:i32, 2644:i32, 2660:i32, 2684:i32
%6:i32 = phi %3, %5, 0:i32, 2750:i32, 2892:i32, 2878:i32, 2899:i32, 2667:i32, 2675:i32, 2643:i32, 2659:i32, 2683:i32
%7:i32 = phi %0, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i24 = var (00000000000000000000000x) (n)
%2:i24 = shlnw %1, 11:i24
%3:i24 = or 804:i24, %2
%4:i24 = phi %0, 804:i24, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, %2, 0:i8, 0:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 1:i8
%6:i8 = phi %0, %5, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %3, %5, 1:i8
%7:i8 = var
%8:i8 = var (0000000x) (n)
%9:i8 = and %7, %8
%10:i1 = var
%11:i8 = zext %10
%12:i8 = and %9, %11
%13:i8 = phi %0, %6, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, 2:i32, %3, 2:i32, 2:i32
%5:i32 = phi %1, %4, 2:i32
%6:i32 = phi %0, %5, 2:i32, 2:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 116:i32, 21:i32
%4:i1 = var
%5:i32 = select %4, 113:i32, 233:i32
%6 = block 2
%7:i1 = var
%8:i32 = select %7, 24:i32, 22:i32
%9:i32 = phi %1, 19:i32, %3, %5, %8
%10:i32 = phi %0, %9, 30:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, %2, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 2
%2:i8 = var (0000xxxx) (n)
%3:i8 = phi %1, %2, 15:i8
%4 = block 2
%5:i8 = var (0000xxxx) (n)
%6:i8 = phi %4, %5, 15:i8
%7:i8 = var (0000xxxx) (n)
%8:i8 = xor 15:i8, %7
%9:i8 = var (0000xxxx) (n)
%10:i8 = xor 15:i8, %9
%11 = block 2
%12:i8 = var (0000xxxx) (n)
%13:i8 = phi %11, %12, 15:i8
%14:i8 = var (0000xxxx) (n)
%15:i8 = xor 15:i8, %14
%16:i8 = var (0000xxxx) (n)
%17:i8 = xor 15:i8, %16
%18 = block 2
%19:i8 = var (0000xxxx) (n)
%20:i8 = phi %18, %19, 15:i8
%21 = block 2
%22:i8 = var (0000xxxx) (n)
%23:i8 = phi %21, %22, 15:i8
%24 = block 2
%25:i8 = var (0000xxxx) (n)
%26:i8 = phi %24, %25, 15:i8
%27:i8 = phi %0, %3, %6, %8, %10, %13, %15, %17, %20, 15:i8, %23, %23, %26, %26, %26
%28:i8 = shl %27, 3:i8
infer %28

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = add %0, %1
%3:i64 = var
%4:i64 = sub %2, %3
%5:i64 = add 7:i64, %4
%6:i64 = and 18446744073709551608:i64, %5
%7:i64 = sub %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i32 = trunc %1
%3:i32 = and 4294967280:i32, %2
%4:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, %3, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 64:i32, %1
%3:i1 = var
%4:i32 = var (0000000000000000000001000x000000) (zn)
%5:i32 = select %3, %4, %2
%6:i32 = phi %0, %2, %2, %5
%7:i32 = or 64:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%1:i64 = zext %0
%2:i64 = shl 51:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i64 = phi %1, 0:i64, 1:i64, 2:i64, 3:i64, 4:i64, 5:i64, 6:i64, 7:i64
%3:i64 = phi %0, 0:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%2:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 14:i32, %3
%5:i32 = or 12:i32, %3
%6:i32 = var (000000000000000000000000xxxxxx00) (n)
%7:i32 = var (00000000xxxxxxxxxxxxxxxx00000000) (n)
%8:i32 = or %6, %7
%9:i32 = or 1:i32, %8
%10:i32 = var (000000000000000000000000xxxxxx00) (n)
%11:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%12:i32 = or %10, %11
%13:i32 = or 524288:i32, %12
%14:i32 = phi %0, %4, %4, %5, %5, %9, %9, %13, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var (0000000x) (n)
%2:i8 = var (0000000x) (n)
%3:i8 = or %1, %2
%4:i8 = phi %0, %3, %3, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var
%3:i64 = phi %0, %1, %2
%4:i64 = ashr %3, 63:i64
%5:i64 = xor %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 7
%2:i32 = phi %1, 1:i32, 12:i32, 12:i32, 0:i32, 16:i32, 1:i32, 12:i32
%3 = block 7
%4:i32 = phi %3, 1:i32, 12:i32, 16:i32, 1:i32, 0:i32, 0:i32, 12:i32
%5:i32 = phi %0, %2, %4, 2:i32, 2:i32, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i128 = var (000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i128 = shlnw %1, 64:i128
%3:i128 = phi %0, 0:i128, %2
%4:i128 = var (0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xxxxxxx) (n)
%5:i128 = shlnw %4, 32:i128
%6:i32 = var (000000000xxxxxxxxxxxxxxxxxxxxxxx) (n)
%7:i128 = zext %6
%8:i128 = or %5, %7
%9:i128 = or %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i8 = var
%2:i32 = zext %1
%3:i32 = and 7:i32, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = lshr %4, 2:i32
%6:i32 = or 39:i32, %5
%7:i32 = phi %0, 0:i32, %3, %6, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2 = block 3
%3 = block 6
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, %4, 1:i32
%6:i32 = phi %1, %5, %5, 1:i32
%7:i32 = phi %0, 0:i32, 0:i32, 1:i32, %6, 1:i32, 1:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 4:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000000x0000) (n)
%2:i64 = or 64:i64, %1
%3:i64 = phi %0, 80:i64, %2
%4:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = mulnw 48:i64, %4
%6:i64 = phi %0, %5, 0:i64
%7:i64 = addnsw %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 11
%2:i32 = var (00000000000000000000000000001x00) (zn)
%3:i32 = phi %0, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 8:i32, 8:i32, 10:i32, %2, %2
%4:i32 = shl 1:i32, %3
%5:i32 = addnsw 4294967295:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 98:i32, 99:i32
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = or 98:i32, %4
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = lshr 552:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = var
%2:i64 = add 18446744073709551615:i64, %1
%3:i64 = add %0, %2
%4:i64 = urem %3, %0
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 1:i32, 0:i32
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 4
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8
%5:i8 = phi %0, %4, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = select %0, 8:i64, 4:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = addnsw %2, %4
%6:i64 = subnsw 0:i64, %1
%7:i64 = and %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i32 = phi %1, 327680:i32, 327680:i32, 327680:i32, 327680:i32, 589824:i32
%3:i32 = var (000000000000000000000000xxxxxx00) (n)
%4:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%5:i32 = or %3, %4
%6:i32 = or %2, %5
%7:i32 = or 1:i32, %6
%8:i32 = phi %0, %6, %6, %7, %7, %6, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%2:i64 = and 34359738360:i64, %1
%3:i1 = var
%4:i64 = var (000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (n)
%5:i64 = select %3, %4, 0:i64
%6:i64 = addnw %2, %5
%7:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%8:i64 = add 8:i64, %7
%9:i64 = and 34359738360:i64, %8
%10:i64 = phi %0, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %3, %5, %7
%9:i8 = phi %0, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 2:i32, 3:i32, 3:i32, 3:i32
%4 = block 2
%5 = block 4
%6:i32 = var (000000000000000000000000000000xx) (n)
%7:i32 = phi %4, %6, 3:i32
%8:i32 = phi %1, %3, %7
%9:i32 = phi %0, %8, 2:i32, 3:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = var
%5:i64 = sub %3, %4
%6:i64 = add %2, %5
%7:i64 = urem %6, %1
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000xxxxxx0000000000000000) (n)
%1:i64 = var (0000000000000000000000000000000000000x000000000000x0xxxxxxxxxxxx) (n)
%2:i64 = or %0, %1
%3:i32 = trunc %2
%4:i32 = shl %3, 16:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i16 = phi %1, 52:i16, 62:i16, 51:i16, 50:i16
%3:i16 = phi %0, 63:i16, 62:i16, 62:i16, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = sext %0
%2:i32 = addnsw 31:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = var (00000000000000000xxxxx0000000000) (n)
%3:i32 = select %1, 0:i32, %2
%4:i32 = phi %0, 31744:i32, 31744:i32, 0:i32, %3
%5:i32 = var
%6:i32 = var
%7:i32 = phi %0, 0:i32, %5, 0:i32, %6
%8:i32 = and 1023:i32, %7
%9:i32 = or %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = lshr %2, 6:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = and 4:i32, %1
%3:i32 = or 3:i32, %2
%4:i1 = var
%5:i32 = select %4, 5:i32, 4:i32
%6:i32 = phi %0, %3, 7:i32, %5, 1:i32, 0:i32, 5:i32, 5:i32, 10:i32, 5:i32, 0:i32, 7:i32, 10:i32, 10:i32, 10:i32, 10:i32, 10:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i8 = xor 1:i8, %0
%2:i32 = zext %1
%3:i32 = shlnw %2, 28:i32
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = cttz %2
%4:i32 = trunc %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx00) (n)
%1:i32 = shl 2:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i1 = var
%4:i8 = zext %3
%5:i8 = or %2, %4
%6:i8 = var
%7:i8 = and 1:i8, %6
%8:i1 = var
%9:i8 = zext %8
%10:i8 = or %7, %9
%11:i8 = phi %0, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ctlz %0
%2:i32 = trunc %1
%3:i32 = subnsw 79:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = sext %0
%2:i64 = lshr 562949945162752:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ne 0:i32, %1
%3:i64 = zext %1
%4:i64 = select %2, %3, 1:i64
%5:i64 = addnsw 18446744073709551615:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = var
%2:i32 = sub 32:i32, %1
%3:i32 = lshr %0, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = addnsw %0, %2
%4:i64 = urem %3, %0
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i64 = phi %1, 0:i64, 13:i64, 13:i64
%3:i64 = phi %0, 0:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000xxxxx) (n)
%1:i32 = shl 1:i32, %0
%2:i1 = slt %1, 4:i32
%3:i32 = select %2, %1, 4:i32
%4:i32 = shl %3, 3:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 1:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 0:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = phi %0, 0:i64, %2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = phi %0, 0:i64, %5
%7:i64 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 1:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, %3
%6:i32 = phi %0, %3, %5
%7:i16 = trunc %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 30
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 1211:i32, 1221:i32
%4:i8 = var (0000000x) (n)
%5:i1 = ne 0:i8, %4
%6:i32 = select %5, 1206:i32, 1221:i32
%7:i8 = var (0000000x) (n)
%8:i1 = ne 0:i8, %7
%9:i32 = select %8, 1209:i32, 1219:i32
%10:i8 = var (0000000x) (n)
%11:i1 = ne 0:i8, %10
%12:i32 = select %11, 1204:i32, 1219:i32
%13:i32 = var
%14:i1 = slt 8:i32, %13
%15:i1 = slt 6:i32, %13
%16:i32 = select %15, 7868:i32, 1800:i32
%17:i32 = select %14, 7866:i32, %16
%18:i32 = select %15, 7479:i32, 1727:i32
%19:i32 = select %14, 7477:i32, %18
%20:i32 = select %15, 7934:i32, 1816:i32
%21:i32 = select %14, 7932:i32, %20
%22:i32 = select %15, 7598:i32, 1765:i32
%23:i32 = select %14, 7596:i32, %22
%24:i8 = var (0000000x) (n)
%25:i1 = ne 0:i8, %24
%26:i32 = select %25, 1212:i32, 1217:i32
%27:i32 = select %15, 7567:i32, 1752:i32
%28:i32 = phi %0, 1216:i32, %3, 1221:i32, %6, 1214:i32, %9, 1219:i32, %12, %17, 1484:i32, %19, 1490:i32, %21, %23, %26, 7559:i32, 7559:i32, 7526:i32, 7548:i32, 7559:i32, %27, 7535:i32, 1498:i32, 1743:i32, 1743:i32, 1744:i32, 1675:i32, 1701:i32, 1721:i32, 1743:i32
infer %28

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = select %0, 16:i64, 32:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = shl %3, 3:i64
%5:i64 = and %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%2:i64 = lshr %1, 6:i64
%3:i32 = trunc %2
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = mulnw 48:i64, %1
%3:i64 = phi %0, %2, 0:i64
%4:i64 = var (000000000000000000000000000000000000000000000000000000000xxx1000) (zn)
%5:i64 = phi %0, 72:i64, %4
%6:i64 = var
%7:i64 = and 24:i64, %6
%8:i64 = addnsw %5, %7
%9:i64 = addnsw %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = and 8191:i32, %2
%4:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = and 8191:i32, %4
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i64 = shlnw %1, 4:i64
%3:i64 = or 64:i64, %2
%4:i64 = phi %0, 80:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 7
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8
%5:i8 = phi %0, %4, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1 = block 2
%2:i32 = phi %1, 3:i32, 2:i32
%3 = block 6
%4:i32 = phi %3, 3:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32
%5:i32 = phi %0, 0:i32, %2, 0:i32, 1:i32, 0:i32, %4, 0:i32, 3:i32, 2:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var
%3:i32 = var
%4:i32 = select %1, %2, %3
%5 = block 2
%6:i32 = var
%7:i32 = phi %5, %3, %6
%8:i32 = phi %0, %4, %7
%9:i1 = ult 4294967263:i32, %8
%10:i32 = add 32:i32, %8
%11:i32 = select %9, 4294967295:i32, %10
%12:i32 = sub %11, %8
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %4
%6:i8 = phi %0, %1, %5
%7:i8 = xor 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshr 2305:i64, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = select %0, 16:i64, 32:i64
%2:i32 = trunc %1
%3:i1 = eq 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000001x) (zn)
%3 = block 2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 4:i64, %5
%7:i64 = and 18446744073709551611:i64, %5
%8:i64 = phi %0, %6, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000)
%1:i64 = and 28672:i64, %0
%2:i64 = var (0000000000000000000000000000000000000x00000000000000000000000000) (n)
%3:i64 = var (0000000000000000000000000000000000000000x0x0000000000000xxxxxxxx) (n)
%4:i64 = or %2, %3
%5:i64 = or %1, %4
%6:i32 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %1, %3, %4
%6:i8 = var (0000000x) (n)
%7:i8 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 6
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, %2, %2, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%2:i64 = phi %0, %1, 0:i64
%3:i64 = var (000000000000000000000000000000000000000000000000000xxxxxxxxxxx11) (zn)
%4:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = addnw %3, %4
%6:i64 = and 8589930496:i64, %5
%7:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (n)
%8:i64 = addnw %6, %7
%9:i64 = addnsw %2, %8
%10:i64 = subnsw %9, %6
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i64 = var
%2:i64 = srem %1, 8:i64
%3:i1 = eq 0:i64, %2
%4:i64 = subnsw 16:i64, %2
%5:i64 = select %3, 8:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = and 4294967295:i64, %1
%3:i64 = var
%4:i64 = lshrexact %3, 3:i64
%5:i64 = addnw %2, %4
%6:i64 = phi %0, 0:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (00000000xxxxxxxxxxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5:i32 = phi %0, %4, %4, %3, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 5
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i8 = trunc %4
%6:i8 = phi %3, 1:i8, 0:i8, 1:i8, 1:i8, %5
%7:i8 = phi %0, %2, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1 = block 2
%2:i64 = var
%3:i64 = phi %1, 18446744073709551615:i64, %2
%4:i1 = ult %0, %3
%5:i64 = select %4, %0, %3
%6:i64 = add 18446744073709551614:i64, %5
%7:i1 = ult %5, %6
%8:i64 = select %7, %5, %6
%9:i64 = sub %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i72 = var (00000000000000000000000000000000000000000000000000000000000000000x000000) (n)
%2:i1 = eq 0:i72, %1
%3 = block 3
%4:i32 = phi %3, 1:i32, 0:i32, 1:i32
%5:i32 = select %2, 0:i32, %4
%6:i32 = phi %0, %5, 1:i32, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = add 1:i32, %1
%3:i32 = ctlz %2
%4:i32 = subnsw 32:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = select %0, 8:i32, 4:i32
%2:i32 = addnsw 4294967295:i32, %1
%3:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = trunc %3
%5:i32 = and 1073741823:i32, %4
%6:i32 = addnsw %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i64 = var (0xxxxxxxxxxx0000000000000000000000000000000000000000000000000000) (n)
%3:i64 = select %1, 0:i64, %2
%4:i64 = phi %0, 9218868437227405312:i64, 9218868437227405312:i64, 0:i64, %3
%5:i64 = var
%6:i64 = var
%7:i64 = phi %0, 0:i64, %5, 0:i64, %6
%8:i64 = and 4503599627370495:i64, %7
%9:i64 = or %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000000000000000000000000xxxxxxxxxxx) (zn)
%3:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%4:i64 = addnw %2, %3
%5:i64 = var (0000000000000000000000000000000000000000000000000000000xxxxxxxxx) (zn)
%6:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%7:i64 = addnw %5, %6
%8:i64 = phi %1, %4, %7
%9:i8 = var
%10:i64 = zext %9
%11:i64 = addnsw %8, %10
%12:i64 = phi %0, %8, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 3:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = var
%3:i64 = add %1, %2
%4:i64 = add %0, %3
%5:i32 = var
%6:i64 = zext %5
%7:i64 = urem %4, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6 = block 3
%7:i8 = phi %6, 1:i8, %5, %5
%8:i8 = phi %1, %5, 1:i8, %7
%9:i8 = phi %0, 1:i8, 1:i8, 1:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32, 0:i32, 0:i32, 0:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000000xxx) (n)
%2:i1 = eq 5:i32, %1
%3:i32 = select %2, 0:i32, %1
%4:i32 = phi %0, %3, 2:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i1 = ult 255:i32, %1
%3:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = or 2560:i32, %3
%5:i32 = or 2048:i32, %1
%6:i32 = select %2, %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 64:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1 = block 2
%2:i32 = var
%3:i32 = shl %2, 3:i32
%4:i64 = zext %3
%5:i64 = urem %0, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 4
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8
%5 = block 3
%6:i8 = phi %5, %4, 1:i8, 1:i8
%7:i8 = phi %0, %4, %4, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = select %0, %1, 64:i64
%3:i1 = ult 63:i64, %2
%4:i64 = subnsw 64:i64, %2
%5:i64 = select %3, 0:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = var
%4:i1 = ult %2, %3
%5:i64 = select %4, %2, %3
%6:i64 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = addnw 8:i64, %1
%3:i8 = var
%4:i64 = zext %3
%5:i64 = addnw %2, %4
%6:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%7:i64 = addnw %5, %6
%8:i8 = var
%9:i64 = zext %8
%10:i64 = addnw %7, %9
%11:i64 = phi %0, %10, %5
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ne 0:i32, %1
%3:i8 = zext %2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, %3
%7:i8 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = add 18446744073709551615:i64, %0
%2:i32 = var (00000000000000000000000000010xx0) (zn)
%3:i64 = zext %2
%4:i64 = add %1, %3
%5:i64 = udiv %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i1 = eq 15:i32, %1
%3 = block 2
%4:i32 = var (000000000000000000000000000000x1) (zn)
%5:i32 = phi %3, 3:i32, %4
%6:i32 = select %2, 1:i32, %5
%7:i32 = phi %0, 0:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000x0000000000000000000000000) (n)
%2:i32 = xor 33554432:i32, %1
%3:i32 = addnw 33554432:i32, %2
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = select %1, %2, 4:i32
%4:i32 = addnw 4:i32, %3
%5:i32 = phi %0, %4, %3, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = and 4095:i32, %2
%4:i32 = phi %1, %3, 0:i32
%5 = block 3
%6:i32 = var
%7:i1 = eq 0:i32, %6
%8:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%9:i32 = and 4095:i32, %8
%10:i32 = select %7, %9, %4
%11:i32 = var
%12:i32 = lshr %11, 8:i32
%13:i32 = and 4095:i32, %12
%14:i32 = phi %0, %4, %10, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = slt 4:i64, %0
%2:i64 = select %1, 4:i64, %0
%3:i64 = subnsw %0, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %1, 0:i32, %4, %3
%6:i32 = phi %0, 0:i32, 0:i32, %5, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 1:i64, 0:i64
%3:i64 = or 2:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = and 18446744073709551611:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3, %3
%5:i8 = phi %0, 1:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2:i32 = var (000000000000xx000000000000000000) (zn)
%3:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%4:i32 = or %2, %3
%5:i32 = or 1:i32, %4
%6:i32 = phi %0, %5, %5, %4, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3 = block 3
%4 = block 2
%5:i32 = var (00000000000000000000000000000xx1) (zn)
%6:i32 = phi %4, 1:i32, %5
%7:i32 = phi %3, %6, 3:i32, 2:i32
%8:i32 = phi %0, 1:i32, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i8 = var
%2:i32 = zext %1
%3:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%4:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%5:i64 = addnw %3, %4
%6:i32 = trunc %5
%7:i32 = phi %0, %2, 0:i32, 0:i32, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 2:i32, 3:i32, 3:i32, 3:i32
%3 = block 2
%4 = block 4
%5:i32 = phi %4, 3:i32, 3:i32, 3:i32, 0:i32
%6:i32 = phi %3, %5, 3:i32
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 1:i8, %2, %2, %2, %2, %2, %2, %2
%4:i8 = phi %0, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = addnw 1:i32, %1
%3:i32 = phi %0, 1:i32, %2
%4:i8 = var
%5:i32 = zext %4
%6:i32 = addnw %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 6:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 4293:i32, 4292:i32
%4:i32 = phi %1, 4292:i32, 4293:i32, 4292:i32, %3
%5:i32 = phi %0, %4, 4292:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = phi %1, %2, 0:i64
%4:i64 = phi %0, %3, 0:i64
%5:i64 = subnsw 4294967295:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 11
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8, 1:i8
%6:i8 = phi %1, %5, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%7:i8 = phi %0, %6, 1:i8, 1:i8, 1:i8, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4 = block 4
%5:i8 = phi %4, 1:i8, 0:i8, 0:i8, 0:i8
%6 = block 4
%7 = block 3
%8:i8 = var (0000000x) (n)
%9:i8 = phi %6, 0:i8, 1:i8, %8, 0:i8
%10:i8 = phi %1, %3, %5, %9
%11:i8 = phi %0, %10, 0:i8, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000xxxxxx) (n)
%2:i64 = shl 18446744073709551615:i64, %1
%3:i64 = xor 18446744073709551615:i64, %2
%4:i64 = and %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = var (00000000000000000000000000000xxx) (zn)
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = phi %1, %2, %3, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = var (0000000000000000000000000000000x) (n)
%8:i32 = addnsw %5, %7
%9:i32 = phi %0, %5, %6, %8
%10:i32 = var
%11:i32 = var
%12:i1 = ne %10, %11
%13:i32 = zext %12
%14:i32 = add %9, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000000000000000000000xxx000000000000) (n)
%1:i64 = var (0000000000000000000000000000000000000x00x0x0000000000000xxxxxxxx) (n)
%2:i64 = or %0, %1
%3:i32 = trunc %2
%4:i32 = shl %3, 16:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000000000000000000000000001111x) (zn)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = subnsw %1, %2
%4 = block 3
%5:i1 = var
%6:i32 = sext %5
%7:i32 = addnsw %3, %6
%8:i32 = phi %0, 16:i32, 32:i32, 32:i32, %7, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = lshr 232:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 231:i32, 229:i32
%4:i32 = select %2, 254:i32, 253:i32
%5:i1 = var
%6:i32 = var (0000000000000000000000010000001x) (zn)
%7:i32 = var (000000000000000000000000111101xx) (zn)
%8:i32 = select %5, %6, %7
%9:i32 = select %2, 266:i32, 264:i32
%10:i32 = phi %1, %3, %4, %8, %9
%11:i32 = phi %0, %10, 228:i32, 263:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 32:i32, %0
%2:i32 = lshr 2:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var (00000xxx) (n)
%1:i8 = shlnw %0, 1:i8
%2:i1 = var
%3:i8 = zext %2
%4:i8 = or %1, %3
%5:i8 = shl %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i1 = ne %1, %2
%4:i8 = zext %3
%5:i32 = var
%6:i1 = ult 510:i32, %5
%7:i8 = zext %6
%8:i8 = var (0000000x) (n)
%9:i8 = xor 1:i8, %8
%10:i1 = var
%11:i8 = zext %10
%12:i8 = or %9, %11
%13:i32 = var
%14:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%15:i1 = ne %13, %14
%16:i8 = zext %15
%17:i8 = phi %0, %4, %7, %12, %16, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 8
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3 = block 10
%4:i8 = phi %3, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var (00000000000000000000000000xxxxxx) (n)
%2:i32 = subnsw 64:i32, %1
%3:i64 = zext %2
%4:i64 = lshr %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000x1) (zn)
%4:i32 = phi %2, 3:i32, %3
%5:i1 = var
%6:i32 = select %5, 1:i32, %4
%7:i32 = phi %1, %4, %6
%8:i32 = phi %0, 0:i32, %7, 1:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3 = block 3
%4:i8 = phi %3, 0:i8, 1:i8, 1:i8
%5:i8 = phi %0, %2, %4, 1:i8, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (xxxxxxxx00000000)
%1:i16 = and 768:i16, %0
%2:i16 = var (xxxxxx0000000000)
%3:i16 = and 3072:i16, %2
%4:i16 = or %1, %3
%5:i24 = var (000000000000000x00000000) (n)
%6:i16 = trunc %5
%7:i16 = shlnw %6, 4:i16
%8:i16 = or %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = cttz %1
%3:i32 = phi %0, %2, 32:i32
%4:i32 = shl 14:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = select %0, 16:i64, 32:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = shl %3, 2:i64
%5:i64 = and %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i16 = var (000000000000000x) (n)
%3:i16 = var (0000000x0x000000) (znp)
%4:i16 = or %2, %3
%5:i16 = or 4:i16, %4
%6:i16 = or 2:i16, %4
%7:i16 = or 16:i16, %4
%8:i16 = phi %0, %4, %5, %6, %7
%9:i16 = or 128:i16, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %2, %4, 1:i8
%6:i8 = phi %1, %5, %4
%7:i8 = phi %0, %6, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i64 = phi %1, 0:i64, 4:i64
%3:i64 = phi %0, 0:i64, 4:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i64 = zext %1
%3:i32 = var
%4:i64 = zext %3
%5:i32 = var
%6:i64 = zext %5
%7:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%8:i64 = zext %7
%9:i64 = shlnw %8, 32:i64
%10:i64 = phi %0, %2, %4, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (00000000000000000000000xxx000000) (zn)
%2:i64 = zext %1
%3:i64 = addnsw 18446744073709551615:i64, %2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = addnsw %3, %5
%7:i64 = urem %6, %2
%8:i64 = subnsw %6, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i8 = var (0000xxx0) (n)
%4:i8 = var (000x0000) (n)
%5:i8 = or %3, %4
%6:i8 = or 1:i8, %5
%7:i8 = phi %1, %6, %5
%8 = block 2
%9:i8 = phi %8, %7, %5
%10:i8 = phi %0, %7, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (00000000000000000000000xxx000000) (zn)
%2:i64 = zext %1
%3:i64 = addnsw 18446744073709551615:i64, %2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = addnsw %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i1 = ult %1, 64:i64
%3:i64 = select %2, %1, 64:i64
%4:i64 = subnsw 64:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = and %1, %2
%4:i64 = cttz %3
%5:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000)
%6:i64 = and 4294967232:i64, %5
%7:i64 = var
%8:i64 = cttz %7
%9:i64 = or %6, %8
%10:i64 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i64 = shlnw %1, 4:i64
%3:i64 = addnw 56:i64, %2
%4:i64 = phi %0, 72:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, %2, 0:i1, 1:i1
%4:i1 = var
%5:i32 = select %4, 5:i32, 3:i32
%6 = block 3
%7:i1 = var
%8:i32 = select %7, 4:i32, 0:i32
%9:i32 = select %3, %5, %8
%10:i32 = phi %0, 1:i32, %9, 2:i32, 2:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var (000000000000000x) (n)
%2:i16 = shlnw %1, 1:i16
%3:i1 = var
%4:i16 = zext %3
%5:i16 = or %2, %4
%6:i16 = phi %0, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xx00) (n)
%1:i32 = shl 4:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 17
%3:i32 = phi %2, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 2:i32, 2:i32, 3:i32, 3:i32, 0:i32, 0:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 14
%4 = block 11
%5:i8 = phi %4, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6:i8 = phi %3, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, %5, %5
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 11
%2:i32 = phi %1, 8:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32
%3:i32 = phi %0, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 8:i32, 8:i32, 10:i32, %2, %2
%4:i32 = shl 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = phi %0, 0:i32, %1
%3:i64 = zext %2
%4:i64 = var
%5:i64 = var
%6:i64 = sub %4, %5
%7:i64 = ashrexact %6, 3:i64
%8:i64 = udiv %3, %7
infer %8

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = sext %0
%2:i32 = addnsw 10:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %1, %3, %2
%5:i64 = phi %0, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = sext %0
%2:i32 = addnsw 10:i32, %1
%3 = block 2
%4:i1 = var
%5:i1 = var
%6:i1 = phi %3, %4, %5
%7:i32 = sext %6
%8:i32 = addnsw %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000000000xxxxxxxxxxx) (n)
%1:i64 = var (00000000000000000000000000000000000000xxxxxxxxxx0000000000000000) (n)
%2:i64 = or %0, %1
%3:i32 = var (00000x000000000000x0x00000000000) (n)
%4:i64 = zext %3
%5:i64 = or %2, %4
%6:i32 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 10
%3:i32 = phi %2, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 1:i32, 2:i32, 3:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (1111111111111111111111111xxxxxxx) (z)
%1:i32 = sub 0:i32, %0
%2:i64 = zext %1
%3:i64 = addnsw 18446744073709551615:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4:i32 = phi %1, %2, %3
%5:i64 = zext %4
%6 = block 2
%7:i64 = phi %6, 0:i64, %5
%8:i64 = phi %0, %5, %7, 0:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i1 = eq 116:i8, %1
%3:i32 = var
%4:i32 = lshr %3, 1:i32
%5:i32 = or 8:i32, %4
%6:i32 = select %2, %5, %4
%7:i32 = phi %0, 8:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 4
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4
%6:i1 = var
%7:i8 = select %6, 1:i8, %5
%8:i8 = phi %1, %5, %7
%9:i8 = phi %0, %8, %8, 1:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, %4, 0:i32
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000xxxx) (n)
%1:i1 = ult %0, 10:i32
%2:i32 = or 48:i32, %0
%3:i32 = addnw 55:i32, %0
%4:i32 = select %1, %2, %3
%5:i8 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = addnsw 4294967283:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 1233896623700220:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%2:i32 = add 4294967295:i32, %1
%3:i32 = shl %2, 3:i32
%4:i32 = lshr %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = var (0xxxxxxxx00000000000000000000000) (n)
%3:i32 = select %1, 0:i32, %2
%4:i32 = phi %0, 2139095040:i32, 2139095040:i32, 0:i32, %3
%5:i32 = var
%6:i32 = var
%7:i32 = phi %0, 0:i32, %5, 0:i32, %6
%8:i32 = and 8388607:i32, %7
%9:i32 = or %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 3
%3:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = phi %2, 0:i64, 0:i64, %3
%5:i64 = phi %1, %4, 0:i64, 0:i64
%6:i64 = phi %0, 0:i64, 0:i64, %5, 0:i64, 0:i64
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i1 = var
%3:i32 = select %2, 2:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %3, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000000100x) (zn)
%1:i64 = shl 1:i64, %0
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i32 = var
%4:i32 = var
%5:i32 = add %3, %4
%6:i64 = zext %5
%7:i64 = addnsw %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = ctlz %2
%4:i32 = phi %1, 32:i32, %3
%5:i32 = phi %0, 0:i32, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 589825:i32, %3
%5:i32 = var (000000000000000000000000xxxxxx00) (n)
%6:i32 = var (000000000000xx00xxxxxxxx00000000) (zn)
%7:i32 = or %5, %6
%8:i32 = or 1:i32, %7
%9:i32 = phi %0, %4, %4, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i64 = phi %1, 11:i64, 2:i64
%3:i64 = phi %0, 2:i64, 2:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%4:i32 = phi %1, %2, %3
%5:i32 = var (0000000xxxxxxxxxxxxxxxxx00000000) (n)
%6:i32 = xor 256:i32, %5
%7:i32 = or %4, %6
%8:i16 = var
%9:i32 = zext %8
%10:i32 = shlnw %9, 9:i32
%11:i32 = phi %0, %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2, 0:i1, 0:i1
%4:i8 = zext %3
%5:i8 = var
%6:i8 = and 1:i8, %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = or %6, %8
%10:i8 = var
%11:i8 = and 1:i8, %10
%12:i1 = var
%13:i8 = zext %12
%14:i8 = or %11, %13
%15:i8 = phi %0, %4, %9, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = sub 32:i32, %0
%4:i32 = lshr %2, %3
%5:i32 = select %1, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 40:i32, 55:i32
%4:i32 = phi %1, 40:i32, %3
%5:i32 = phi %0, 40:i32, %4, 55:i32, %4, 40:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i32 = phi %1, 250:i32, 253:i32, 250:i32
%3:i32 = phi %0, 254:i32, 251:i32, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000000xx) (n)
%2:i32 = shlnw %1, 1:i32
%3:i32 = or 1:i32, %2
%4:i32 = var
%5:i32 = add 4294967252:i32, %4
%6:i1 = ult %5, 6:i32
%7:i32 = select %6, %5, 6:i32
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000x0000000000xx0000xx) (n)
%3:i32 = var (0000000000000x0000000000xx0000xx) (n)
%4:i32 = var (0000000000000x00000000000x0000xx) (n)
%5:i32 = phi %1, %2, %3, %4
%6:i32 = or 256:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i80 = var (0000000000000000000000000000000000000000000000000000000000000000000000000000000x) (n)
%1:i1 = eq 0:i80, %0
%2:i72 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000)
%3:i72 = and 262144:i72, %2
%4:i72 = select %1, %3, 262144:i72
%5:i80 = shlnw %0, 19:i80
%6:i72 = trunc %5
%7:i72 = or %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i1 = eq 0:i64, %1
%3:i16 = var (xxxxxxxxxxxxxx00)
%4:i16 = and 4:i16, %3
%5:i16 = or 8:i16, %4
%6:i16 = select %2, %4, %5
%7:i16 = phi %0, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = addnw 7:i32, %1
%3:i32 = phi %0, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, %2
%4:i32 = subnsw 8:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 1:i64, 0:i64
%3:i64 = phi %0, %2, 0:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = select %1, 0:i32, 24:i32
%3:i32 = addnw 24:i32, %2
%4:i32 = phi %0, %3, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i64 = zext %3
%5:i64 = addnsw 18446744073709551615:i64, %4
%6:i32 = var
%7:i64 = zext %6
%8:i64 = addnsw %5, %7
%9:i64 = urem %8, %4
infer %9

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 15
%2:i32 = phi %1, 0:i32, 2:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, %2, %2, 3:i32, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i1 = var
%4:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = select %3, %4, %2
%6:i32 = phi %1, %2, %5
%7:i32 = phi %0, %6, %5
%8:i32 = var
%9:i1 = ult %8, 2:i32
%10:i32 = select %9, 16:i32, 12:i32
%11:i32 = mulnw %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 2:i32, 0:i32, 6:i32
%3:i32 = phi %0, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 10
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8, %3, %3, %3, %3, %3, %3, %3
%5:i8 = phi %0, %4, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6 = block 3
%7 = block 3
%8:i8 = var (0000000x) (n)
%9:i8 = phi %6, %8, 0:i8, 0:i8
%10:i8 = phi %3, %5, %9
%11:i8 = phi %0, %2, %10, %10, %10, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 314
%1:i32 = phi %0, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 0:i32, 1:i32, 1:i32, 1:i32, 4294967295:i32, 4294967295:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 0:i32, 0:i32, 0:i32, 0:i32, 4294967295:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32
%2:i32 = addnw 1:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5 = block 3
%6 = block 6
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, %4, %4, %4, %4, %7, %4
%9:i8 = phi %5, %4, %8, %8
%10:i8 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, %5, 0:i8, %4
%7:i8 = phi %0, %6, %6, %6, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, %3, 0:i8, 1:i8, 1:i8
%5:i8 = phi %0, 0:i8, 0:i8, %4, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 358:i32, 357:i32
%4:i32 = select %2, 356:i32, 355:i32
%5:i32 = select %2, 354:i32, 353:i32
%6:i32 = phi %1, %3, %4, %5
%7:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 109
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%3:i64 = addnw 3:i64, %2
%4:i64 = or 4:i64, %2
%5:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%6:i64 = or 4:i64, %5
%7:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%8:i64 = or 4:i64, %7
%9:i64 = addnw 5:i64, %7
%10:i64 = addnw 5:i64, %2
%11:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%12:i64 = subnsw 6:i64, %11
%13:i64 = subnsw 6:i64, %2
%14:i64 = phi %1, 10:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 6:i64, 6:i64, 8:i64, 7:i64, 7:i64, 7:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 5:i64, 7:i64, 8:i64, 6:i64, 6:i64, 4:i64, 5:i64, 6:i64, 6:i64, 6:i64, 5:i64, 6:i64, 3:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 6:i64, 7:i64, 7:i64, %3, %3, %4, %6, %4, %4, %6, %8, %4, %4, 4:i64, %4, %4, %9, %10, %12, %13
%15 = block 76
%16:i32 = var
%17:i64 = zext %16
%18:i1 = var
%19:i64 = select %18, 2:i64, %17
%20:i1 = var
%21:i64 = select %20, 2:i64, %17
%22:i1 = var
%23:i64 = select %22, 2:i64, %17
%24:i1 = var
%25:i64 = select %24, 2:i64, %17
%26:i1 = var
%27:i64 = select %26, 4:i64, %17
%28:i1 = var
%29:i64 = select %28, 5:i64, %17
%30:i1 = var
%31:i64 = select %30, 5:i64, %17
%32:i1 = var
%33:i64 = select %32, 6:i64, %17
%34:i1 = var
%35:i64 = select %34, 6:i64, %17
%36:i1 = var
%37:i64 = select %36, 4:i64, %17
%38:i1 = var
%39:i64 = select %38, 4:i64, %17
%40:i1 = var
%41:i64 = select %40, 4:i64, %17
%42:i1 = var
%43:i64 = select %42, 4:i64, %17
%44:i64 = phi %15, %17, 6:i64, %17, %17, 5:i64, %17, %17, 5:i64, 4:i64, %17, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, %17, 4:i64, %17, 4:i64, 4:i64, %17, %17, 3:i64, 3:i64, %17, %17, %17, 3:i64, %17, 3:i64, 2:i64, %17, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 2:i64, 2:i64, 2:i64, 2:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 9:i64, 9:i64, %17, %17, %17, %19, %21, %23, %25, %27, %29, %31, %33, %35, %37, %39, %41, %43, 7:i64
%45:i64 = phi %0, %14, %44
infer %45

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 3
%2 = block 6
%3:i32 = phi %2, 1:i32, 1:i32, 2:i32, 2:i32, 1:i32, 1:i32
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %1, %3, %3, %4
%6:i1 = var
%7:i32 = zext %6
%8:i32 = addnw %5, %7
%9:i32 = phi %0, %5, %5, %5, %5, %5, %5, %8, %4
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8
%6:i8 = phi %1, 0:i8, %5
%7:i8 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 201603:i32, 0:i32
%4:i32 = phi %1, %3, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, %4, %3
%8:i32 = phi %5, %4, %7
%9:i32 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4 = block 2
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %4, %2, %6
%8:i8 = phi %3, %2, %7
%9:i8 = phi %0, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4 = block 2
%5:i8 = phi %4, 0:i8, 1:i8
%6:i8 = phi %3, %5, 0:i8
%7:i8 = phi %0, %2, 0:i8, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 5
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, %2, %2, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (000xx000) (n)
%3:i8 = or 36:i8, %2
%4:i8 = phi %1, %3, 20:i8
%5:i8 = phi %0, %4, %4, 20:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 0:i32, %2, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 25
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5:i32 = var
%6:i1 = eq 0:i32, %5
%7:i8 = zext %6
%8:i8 = phi %0, 1:i8, %4, %7, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 255:i32, %1
%3:i32 = var
%4:i32 = and 511:i32, %3
%5:i32 = xor 256:i32, %4
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 5:i32, 0:i32, 4:i32
%4:i32 = phi %1, 4:i32, %3
%5 = block 3
%6:i32 = phi %5, 0:i32, 4:i32, 4:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 18:i64, 9:i64
%3:i64 = phi %0, 10:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 12
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, 0:i8, 0:i8, %2, %2, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %1, %3, %6
%8:i8 = phi %0, %7, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = phi %0, 8:i32, 16:i32
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 1:i32, %0
%2:i32 = lshr %1, 1:i32
%3:i32 = addnw 2:i32, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i1 = var
%4:i32 = zext %3
%5:i32 = phi %0, %2, %4, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i8 = phi %1, 64:i8, 4:i8, 0:i8, 64:i8, 64:i8
%3:i1 = var
%4:i8 = select %3, 0:i8, 64:i8
%5:i8 = phi %0, %2, 4:i8, 64:i8, 0:i8, %4, 64:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = var (00xxxxxx) (n)
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, %3, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, %4, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 3
%2:i1 = phi %1, 1:i1, 0:i1, 0:i1
%3:i64 = phi %1, 0:i64, 1:i64, 1:i64
%4:i64 = select %2, 2:i64, %3
%5:i64 = phi %0, 0:i64, 2:i64, 2:i64, 2:i64, 2:i64, 2:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %4, 0:i64, 0:i64, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5:i32 = var
%6:i1 = eq 0:i32, %5
%7:i8 = zext %6
%8:i8 = phi %0, 1:i8, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2 = block 3
%3:i32 = var (00000000000000000000000000xxx0x0) (zn)
%4:i32 = phi %2, 48:i32, %3, 48:i32
%5:i32 = select %1, %4, 10:i32
%6:i32 = phi %0, 48:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i8 = add 203:i8, %0
%2:i64 = zext %1
%3:i64 = lshr 9126805507:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = var (0000000000000000000001010100x011) (zn)
%4:i32 = var (000000000000000000000101010000xx) (zn)
%5:i32 = select %2, %3, %4
%6:i32 = phi %1, 1354:i32, %5
%7:i1 = var
%8:i32 = select %7, 1350:i32, 1348:i32
%9:i32 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i1 = var
%4:i32 = select %3, 2:i32, %2
%5:i32 = phi %0, %2, %2, %2, %4
%6:i32 = addnsw 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, %1, %1
%5:i8 = phi %0, %1, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5:i1 = var
%6:i1 = xor 1:i1, %5
%7:i8 = zext %6
%8:i8 = phi %0, %4, %4, %4, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 5:i64, 14:i64
%3 = block 2
%4 = block 4
%5:i64 = phi %4, 8:i64, 3:i64, 4:i64, 5:i64
%6 = block 2
%7 = block 2
%8:i64 = var (000000000000000000000000000000000000000000000000000000000000xx00) (n)
%9:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%10:i64 = phi %6, %8, %9
%11:i64 = phi %3, %5, %10
%12:i64 = phi %0, %2, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = var
%4:i32 = var
%5:i32 = phi %1, %3, %4
%6:i64 = zext %5
%7 = block 2
%8:i64 = phi %7, %6, 8:i64
%9:i64 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 7:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, 0:i64, %3
%5:i64 = phi %0, %4, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8
%4:i8 = phi %0, 0:i8, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 511:i32, %1
%3:i32 = or 256:i32, %2
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i1 = var
%2:i32 = select %1, 38:i32, 34:i32
%3:i32 = select %1, 40:i32, 36:i32
%4:i8 = var
%5:i1 = eq 18:i8, %4
%6:i32 = select %5, %2, 42:i32
%7:i8 = var
%8:i1 = eq 18:i8, %7
%9:i32 = select %8, %3, 42:i32
%10:i32 = phi %0, %2, %3, %6, %9, 42:i32, 32:i32, 32:i32, 42:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, %4, %3, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 4:i32, 1:i32
%4:i32 = phi %1, 0:i32, 1:i32, %3
%5:i32 = phi %0, 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i1 = phi %1, 0:i1, 1:i1, 0:i1, 0:i1, 0:i1
%3:i8 = zext %2
%4 = block 2
%5:i8 = phi %4, %3, %3
%6:i8 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 4:i32, 2:i32, 2:i32, 5:i32, 9:i32
%3 = block 5
%4:i32 = phi %3, 4:i32, 2:i32, 2:i32, 5:i32, 9:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 3:i32, 3:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, %2, %2, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i32 = trunc %1
%3:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%4:i32 = trunc %3
%5:i32 = addnw %2, %4
%6:i32 = addnw 1:i32, %4
%7:i32 = addnw 1:i32, %2
%8:i32 = addnw %7, %4
%9:i32 = phi %0, %5, 3:i32, %6, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = phi %0, 0:i32, 2:i32, 3:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i1 = var
%3:i32 = select %2, 3:i32, 1:i32
%4:i1 = var
%5:i32 = select %4, 3:i32, 1:i32
%6:i32 = phi %1, 2:i32, %3, %3, 3:i32, %5
%7:i32 = phi %0, 0:i32, 0:i32, 0:i32, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = block 2
%5:i32 = var
%6:i32 = phi %1, %3, %5
%7:i64 = zext %6
%8 = block 2
%9:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%10:i32 = var
%11:i64 = zext %10
%12:i64 = phi %8, %9, %11
%13:i64 = phi %0, %7, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000000xxx) (n)
%2:i256 = zext %1
%3:i256 = shlnw %2, 241:i256
%4:i256 = phi %0, 7067388259113537318333190002971674063309935587502475832486424805170479104:i256, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i32 = phi %1, 1525:i32, 1521:i32, 1522:i32
%3:i32 = phi %0, 0:i32, 0:i32, 1522:i32, 1522:i32, 1523:i32, 1524:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i1 = var
%3 = block 6
%4 = block 2
%5:i8 = var (0000000x) (n)
%6 = block 2
%7:i8 = var (0000000x) (n)
%8 = block 2
%9:i8 = var (0000000x) (n)
%10 = block 2
%11:i8 = var (0000000x) (n)
%12:i8 = phi %3, %5, %7, %9, %11, 0:i8, 0:i8
%13:i8 = select %2, %12, 0:i8
%14:i8 = phi %1, %13, %12
%15 = block 2
%16:i64 = var
%17:i1 = ne 0:i64, %16
%18:i8 = select %17, 0:i8, %14
%19:i8 = phi %0, %14, 0:i8, 1:i8, %14, %14, %18
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = select %2, %3, 0:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, %5, 0:i32, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i64 = zext %3
%5:i64 = phi %1, %4, 0:i64
%6:i32 = var
%7:i64 = zext %6
%8:i64 = phi %0, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 201603:i32, 0:i32
%5:i32 = phi %2, %4, %4
%6:i32 = phi %1, %5, %4
%7:i32 = phi %0, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%2:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5:i32 = phi %0, %4, %4, %4, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i32 = select %1, 3:i32, 2:i32
%3 = block 2
%4:i32 = phi %3, 3:i32, %2
%5:i32 = phi %0, %2, %4, %4, %4, 3:i32, %2
%6:i8 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = var
%6:i8 = lshr %5, 7:i8
%7:i8 = phi %2, %4, %6
%8:i8 = phi %1, %7, %6
%9:i8 = phi %0, %8, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1 = block 2
%2:i32 = var (0000000000000000000000000xxxxxxx) (n)
%3:i32 = phi %1, 0:i32, %2
%4:i32 = phi %0, %3, %3, %3, %3, %3, %3, %3, %3, %3, 0:i32, 0:i32, 0:i32, 0:i32
%5:i16 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, %3, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, %7, 0:i8
%9:i8 = phi %3, %5, %8
%10:i8 = phi %0, %2, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 1:i8
%6 = block 2
%7:i8 = phi %6, %5, %4
%8:i8 = phi %0, %5, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4:i8 = phi %3, %2, 0:i8, 0:i8
%5:i8 = phi %0, %2, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4 = block 2
%5:i8 = phi %4, %3, 0:i8
%6:i8 = phi %1, %3, %3, %5
%7:i8 = phi %0, %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = and 65535:i64, %2
%4:i64 = var
%5:i64 = and 65535:i64, %4
%6:i64 = phi %1, %3, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 13
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, %2, %2, %2, %2, 0:i8, 0:i8, %2, %2, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 12
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, 0:i8, 0:i8, %2, %2, %2, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, 1:i32, 1:i32, %3, 2:i32, 2:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i64 = phi %1, 257:i64, 0:i64, 1:i64, 1:i64
%3:i64 = phi %0, 0:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 6:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 31
%1 = block 2
%2 = block 12
%3:i64 = var
%4:i64 = var
%5:i64 = phi %1, %3, %4
%6:i1 = var
%7:i64 = var
%8:i64 = select %6, %3, %7
%9:i64 = phi %0, %5, 3:i64, 3:i64, 3:i64, 5:i64, 4:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 6:i64, 7:i64, 3:i64, 4:i64, 4:i64, %8, 4:i64, 5:i64, 4:i64, 7:i64, 5:i64, 4:i64, 6:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 5:i64, 6:i64
%10:i64 = add 18446744073709551614:i64, %9
%11:i1 = ult %9, %10
%12:i64 = select %11, %9, %10
%13:i64 = sub %9, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var
%3:i64 = zext %2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = phi %1, 0:i64, %3, %5
%7:i64 = phi %0, 0:i64, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = var (0000xxxx) (n)
%3:i8 = and 1:i8, %2
%4 = block 3
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 0:i8, 0:i8
%7:i8 = phi %1, %3, %6
%8:i8 = var (0000000x) (n)
%9:i8 = phi %0, %7, %7, %8, %7, %7, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %1, %3, 0:i8
%5:i1 = var
%6:i8 = zext %5
%7:i8 = or %4, %6
%8:i8 = phi %0, %7, 1:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32
%4:i32 = shlnsw %3, 28:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 42:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 41:i32, 0:i32
%5 = block 2
%6:i1 = var
%7:i32 = select %6, 3:i32, 4:i32
%8:i32 = phi %5, %7, 0:i32
%9:i32 = phi %0, %2, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 10
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8, %3, %3, %3, %3, %3, %3, %3
%5:i8 = phi %0, %4, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = var (0000000x) (n)
%3:i8 = and %1, %2
%4:i8 = phi %0, %3, 0:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%3:i64 = phi %1, 0:i64, 0:i64, 0:i64, %2
%4:i64 = addnsw 56:i64, %3
%5 = block 2
%6:i64 = addnsw 20:i64, %3
%7:i64 = phi %5, %6, %3
%8:i64 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000x0000) (n)
%2:i32 = phi %0, %1, 8:i32
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = shl 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i64 = var (00000000000000000000000000000000000000000000000000000000000xx0xx) (zn)
%5:i64 = phi %2, 10:i64, %4
%6:i64 = phi %1, 20:i64, %5
%7:i64 = phi %0, 3:i64, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i64 = phi %1, 400:i64, 16384:i64, 0:i64
%3 = block 3
%4:i64 = phi %3, 400:i64, 16384:i64, 0:i64
%5:i64 = phi %0, 16384:i64, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 3:i32, 4:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var
%2:i1 = eq 20:i16, %1
%3:i1 = var
%4:i32 = select %3, 0:i32, 2:i32
%5:i32 = select %2, 1:i32, %4
%6 = block 3
%7:i1 = var
%8:i32 = zext %7
%9:i32 = phi %6, %8, 0:i32, 0:i32
%10:i32 = phi %0, %5, %9, 1:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, 0:i64
%3:i1 = ne 0:i64, %2
%4 = block 2
%5:i1 = var
%6 = block 6
%7 = block 2
%8:i8 = var (0000000x) (n)
%9 = block 2
%10:i8 = var (0000000x) (n)
%11 = block 2
%12:i8 = var (0000000x) (n)
%13 = block 2
%14:i8 = var (0000000x) (n)
%15:i8 = phi %6, %8, %10, %12, %14, 0:i8, 0:i8
%16:i8 = select %5, %15, 0:i8
%17:i8 = phi %4, %16, %15
%18:i8 = select %3, 0:i8, %17
infer %18

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i32 = var (0000000000000000000000000000x000) (n)
%3:i32 = phi %1, 0:i32, 6:i32, 0:i32, %2
%4:i1 = ne 0:i32, %3
%5:i32 = select %4, %3, 9:i32
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i1 = ne 0:i8, %7
%9:i1 = phi %6, %8, %8
%10:i32 = select %9, 1:i32, 4:i32
%11:i32 = select %4, %3, 10:i32
%12:i32 = select %8, 3:i32, %11
%13:i32 = phi %0, 0:i32, %5, 2:i32, %10, %12, 0:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 12
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, 0:i8, 0:i8, %2, %2, %2, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i64 = var
%3:i64 = udiv %2, 9:i64
%4:i64 = udiv %2, 5:i64
%5:i64 = udiv %2, 3:i64
%6:i64 = phi %1, %3, %4, %5, 0:i64
%7:i64 = phi %1, 9:i64, 5:i64, 3:i64, 0:i64
%8:i64 = phi %0, %6, %7, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var (00000000000000000000000000000x01) (zn)
%4:i32 = phi %1, 5:i32, %3
%5:i1 = eq 5:i32, %4
%6:i32 = select %5, 0:i32, %4
%7:i32 = phi %0, 1:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 13
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, %2, %2, %2, %2, 0:i8, 0:i8, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i64 = var (000000000000000000000000000000000000000000000000000000000000x000) (n)
%4 = block 2
%5:i64 = phi %4, %3, 0:i64
%6:i64 = phi %1, %3, %5
%7:i64 = phi %0, %6, %5
%8:i64 = shlnw %7, 4:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 17
%3 = block 13
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, %4, %4, %4, %4, 0:i8, 0:i8, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
%6:i8 = phi %1, %5, 1:i8
%7 = block 2
%8:i8 = phi %7, %6, 1:i8
%9:i8 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000x1) (zn)
%5:i32 = phi %2, 3:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, %6, 2:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4:i32 = phi %0, %1, 0:i32, %2, %3
%5:i32 = and 4293918720:i32, %4
%6:i32 = sub %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 2:i32
%5:i32 = phi %0, 3:i32, 4:i32, 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 0:i32, 2:i32, 2:i32
%3 = block 4
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %3, %4, 2:i32, 3:i32, 2:i32
%6:i32 = phi %0, 0:i32, %2, %5, 3:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, 1:i32, 1:i32, %3, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i1 = var
%2:i32 = select %1, 7:i32, 8:i32
%3:i32 = phi %0, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, %2
%4:i32 = subnsw 8:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
%4:i1 = var
%5:i8 = zext %4
%6:i8 = or %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 328:i32, 327:i32
%4:i32 = phi %1, 327:i32, %3
%5:i32 = phi %0, %4, 394:i32, 394:i32, 393:i32, 393:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8
%5 = block 3
%6:i8 = phi %5, %4, 0:i8, 0:i8
%7:i8 = phi %0, %4, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var
%2:i32 = zext %1
%3 = block 4
%4:i16 = var
%5:i32 = zext %4
%6:i32 = phi %3, %5, 0:i32, %5, %5
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i64 = phi %1, 9:i64, 5:i64, 3:i64, 0:i64
%3:i64 = var
%4:i64 = udiv %3, 9:i64
%5:i64 = udiv %3, 5:i64
%6:i64 = udiv %3, 3:i64
%7:i64 = phi %1, %4, %5, %6, 0:i64
%8:i64 = phi %0, %2, %7, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 15
%2:i32 = phi %1, 3387:i32, 4376:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32
%3:i32 = phi %0, %2, %2, %2, 4637:i32, 0:i32, 3387:i32, 3387:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = phi %0, 8:i32, 16:i32
%2:i32 = addnsw 4294967295:i32, %1
%3:i32 = shl 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = and 2047:i64, %0
%2:i64 = var (000000000000000000000000000000000000000000xxxxxx0000000000000000) (n)
%3:i64 = var (0000000000000000000000000000000000000x000000000000x0x00000000000) (n)
%4:i64 = or %2, %3
%5:i64 = or %1, %4
%6:i32 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 253:i32, 250:i32
%4:i32 = phi %1, %3, 250:i32
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2 = block 7
%3 = block 5
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, %4, %4, 0:i8, 0:i8, 0:i8, 0:i8
%6:i1 = var
%7:i8 = select %6, %5, 0:i8
%8:i8 = phi %1, %5, %5, %7, %5, %5, %5
%9:i8 = phi %0, %8, %8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i24 = var (000000000000000x00000000) (n)
%2:i24 = lshrexact %1, 8:i24
%3:i8 = trunc %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 7:i32, 1:i32, 1:i32
%3:i1 = eq 7:i32, %2
%4:i32 = select %3, 0:i32, %2
%5:i32 = phi %0, %4, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var (00000000000000000000000000001xx0) (zn)
%3:i32 = var (00000000000000000000000000000xx0) (n)
%4:i32 = select %1, %2, %3
%5:i1 = var
%6:i32 = var (00000000000000000000000000001xx0) (zn)
%7:i32 = var (00000000000000000000000000000xx0) (n)
%8:i32 = select %5, %6, %7
%9:i32 = phi %0, %4, %8
%10:i32 = or 128:i32, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 20:i32
%3:i64 = sext %2
%4:i64 = lshr 70578692288760:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = mulnw 56:i64, %2
%4:i64 = mulnw 52:i64, %2
%5:i64 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, %2, 0:i8
%5:i8 = phi %0, %2, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 17
%3:i8 = phi %2, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8
%4 = block 16
%5:i8 = phi %4, %3, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6:i8 = phi %1, %3, %5
%7:i8 = phi %0, %6, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2 = block 3
%3:i32 = phi %2, 1525:i32, 1521:i32, 1522:i32
%4:i32 = phi %1, 0:i32, 0:i32, 1522:i32, 1522:i32, 1523:i32, 1524:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 18
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5 = block 2
%6 = block 2
%7:i8 = phi %6, 1:i8, 0:i8
%8:i8 = phi %5, 1:i8, %7
%9 = block 3
%10 = block 2
%11 = block 2
%12:i8 = var (0000000x) (n)
%13:i8 = phi %10, 1:i8, %12
%14:i8 = phi %9, %13, 1:i8, %13
%15 = block 6
%16 = block 2
%17:i8 = phi %16, 1:i8, 0:i8
%18:i8 = phi %15, 0:i8, %17, %17, %17, %17, %17
%19 = block 2
%20:i8 = phi %19, 1:i8, 0:i8
%21 = block 2
%22:i8 = phi %21, 1:i8, 0:i8
%23 = block 2
%24 = block 2
%25:i8 = phi %24, 1:i8, 0:i8
%26:i8 = phi %23, 1:i8, %25
%27:i8 = phi %0, 0:i8, 1:i8, 0:i8, %4, %8, %14, %18, 0:i8, %20, 0:i8, 1:i8, %22, %26, 0:i8, 0:i8, 0:i8, %22, %22
infer %27

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 1:i8, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = or 50:i32, %2
%4:i32 = var
%5:i1 = eq 0:i32, %4
%6:i32 = select %5, 65:i32, 70:i32
%7:i32 = var
%8:i1 = eq 0:i32, %7
%9:i32 = select %8, 65:i32, 70:i32
%10:i32 = phi %0, %3, 70:i32, 65:i32, 70:i32, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 23
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1832:i32, 3692:i32, 3692:i32
%4:i32 = phi %1, %3, 3691:i32, 3692:i32
%5:i32 = phi %0, 0:i32, 3322:i32, 1837:i32, 4489:i32, 3323:i32, 2480:i32, 3633:i32, 3696:i32, 3693:i32, 3694:i32, 3695:i32, %4, %4, 3690:i32, 3690:i32, 4488:i32, 4488:i32, 4488:i32, 4488:i32, 4488:i32, 3336:i32, 3335:i32, 4488:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, %2, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 58
%3:i32 = var
%4:i64 = zext %3
%5:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%7:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%8:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%9:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%10:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%11:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%12:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%13:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%14:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%15:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%16:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%17:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%18:i64 = phi %2, %4, 6:i64, %4, %4, 5:i64, %4, %4, 5:i64, 4:i64, %4, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, %4, 4:i64, %4, 4:i64, 4:i64, %4, %4, 3:i64, 3:i64, %4, %4, %4, 3:i64, %4, 3:i64, 2:i64, %4, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 2:i64, 2:i64, 2:i64, 2:i64, %5, %6, %7, %8, %9, %10, %11, %12, %13, %14, %15, %16, %17, 7:i64
%19 = block 126
%20:i64 = var (0000000000000000000000000000000000000000000000000000000000000xxx) (zn)
%21:i64 = var (000000000000000000000000000000000000000000000000000000000000010x) (zn)
%22:i64 = var (000000000000000000000000000000000000000000000000000000000000010x) (zn)
%23:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%24:i64 = or 4:i64, %23
%25:i64 = addnw 5:i64, %23
%26:i64 = var (00000000000000000000000000000000000000000000000000000000000001xx) (zn)
%27:i64 = var (00000000000000000000000000000000000000000000000000000000000001xx) (zn)
%28:i64 = var (00000000000000000000000000000000000000000000000000000000000001xx) (zn)
%29:i64 = phi %19, %4, %4, 9:i64, 9:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 10:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 6:i64, 6:i64, 8:i64, 7:i64, 7:i64, 7:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 5:i64, 7:i64, 8:i64, 6:i64, 6:i64, 4:i64, 5:i64, 6:i64, 6:i64, 6:i64, 5:i64, 6:i64, 3:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 6:i64, 7:i64, 7:i64, %20, %20, %21, %22, %21, %21, %22, %24, %21, %21, 4:i64, %21, %21, %25, %26, %27, %28
%30:i64 = phi %1, %18, %29
%31 = block 22
%32:i64 = phi %31, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 6:i64, 6:i64, 5:i64, 3:i64, 5:i64, 3:i64, 5:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, %24, 5:i64, %25, 6:i64
%33:i64 = phi %0, %30, %18, %32, %4
infer %33

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 262145:i32, %3
%5:i32 = or 262144:i32, %3
%6:i32 = phi %0, %4, %4, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 5
%4:i1 = var
%5:i8 = zext %4
%6 = block 2
%7:i8 = phi %6, %5, %5
%8:i8 = phi %2, %5, %7
%9:i8 = phi %1, %8, %5
%10:i8 = phi %0, %9, %7
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = phi %1, 2:i32, %2
%4:i32 = phi %0, 1:i32, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 2:i32, 0:i32
%5:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32, %4
%6:i1 = var
%7:i32 = select %6, 2:i32, 0:i32
%8:i32 = phi %0, %5, 0:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 14
%2:i32 = phi %1, 231:i32, 231:i32, 231:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 231:i32, 231:i32
%3:i32 = phi %0, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, 232:i32, 232:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = var (00xxxxxx) (n)
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5 = block 3
%6:i8 = var (00xxxxxx) (n)
%7:i8 = and 1:i8, %6
%8:i8 = phi %5, %7, 0:i8, 0:i8
%9:i8 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 1:i32, 2:i32, 0:i32, 0:i32
%2:i32 = subnsw 2:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = var (0000000x) (n)
%6:i1 = ne 0:i8, %5
%7:i8 = select %6, %4, 1:i8
%8:i8 = phi %0, %4, %4, %4, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3 = block 3
%4 = block 6
%5:i8 = phi %4, %2, %2, %2, %2, 1:i8, %2
%6:i8 = phi %3, %2, %5, %5
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 5
%3:i8 = phi %2, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, %2, 1:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 0:i32
%5:i64 = var
%6:i1 = ne 0:i64, %5
%7:i32 = zext %6
%8:i32 = phi %0, %4, %4, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, %2, 0:i32
%5:i32 = phi %0, 1:i32, %2, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, 0:i1, 1:i1, %2
%4:i32 = select %3, 7:i32, 5:i32
%5 = block 5
%6:i1 = var
%7 = block 4
%8:i32 = var (0000000000000000000000000000xxx0) (n)
%9:i32 = select %6, %8, 9:i32
%10 = block 2
%11:i1 = var
%12:i32 = select %11, 1:i32, 4:i32
%13:i1 = var
%14:i32 = var (0000000000000000000000000000xxx0) (n)
%15:i32 = select %13, 3:i32, %14
%16:i32 = phi %5, 0:i32, %9, 2:i32, %12, %15
%17:i32 = phi %0, %4, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000xxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, 3:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000x1xx00) (zn)
%2:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%3:i32 = addnw %1, %2
%4:i32 = addnw 132:i32, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00)
%2:i32 = and 252:i32, %1
%3:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%4:i32 = or %2, %3
%5:i32 = or 262144:i32, %4
%6:i32 = or 262145:i32, %4
%7:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%8:i32 = or %3, %7
%9:i32 = or %2, %8
%10:i32 = phi %0, %5, %5, %6, %6, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 1:i8, %2
%4:i8 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = select %1, 3:i32, 1:i32
%3:i8 = var (0000000x) (n)
%4:i1 = eq 0:i8, %3
%5:i1 = var
%6:i32 = select %5, 0:i32, 2:i32
%7:i32 = or 4:i32, %6
%8:i32 = select %4, %6, %7
%9:i32 = phi %0, %2, %8, 0:i32, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 3:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i1 = var
%4:i1 = or %2, %3
%5:i32 = select %3, 60:i32, 59:i32
%6:i32 = select %4, %5, 60:i32
%7:i32 = phi %0, 59:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = select %1, 0:i32, 24:i32
%3:i32 = addnw 24:i32, %2
%4:i32 = phi %0, %3, %2, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %1, %3, %3, %3, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, %2, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 4:i32
%4:i32 = phi %1, 0:i32, %3, %3
%5:i1 = var
%6:i32 = zext %5
%7:i32 = or %4, %6
%8:i32 = phi %0, %7, %4, %3, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000x00x) (n)
%3:i32 = phi %1, %2, 1:i32
%4:i32 = phi %0, 5:i32, %3, 5:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 4
%2 = block 2
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6:i1 = var
%7:i8 = select %6, 1:i8, %5
%8:i8 = phi %1, %5, %5, %5, %7
%9:i8 = phi %0, %8, %8, 1:i8, 1:i8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = phi %0, 8:i32, 16:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 0:i32, 4:i32
%4 = block 3
%5:i32 = phi %4, 2:i32, 0:i32, 6:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, 6:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var
%2:i32 = sub %0, %1
%3:i32 = and 4293918720:i32, %2
%4:i32 = sub %2, %3
%5:i32 = var
%6:i32 = urem %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 4:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = shlnw %1, 16:i32
%3:i32 = or 33554432:i32, %2
%4:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%5:i32 = var (0000000000000000xxx0000000000000) (n)
%6:i32 = or %4, %5
%7:i32 = or 50331648:i32, %6
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = phi %0, 8:i32, 4:i32, 1:i32, 2:i32, 2:i32, 2:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = var (000000000000000000000111101xx10x) (zn)
%4:i32 = var (00000000000000000000011110101xxx) (zn)
%5:i32 = select %2, %3, %4
%6:i32 = phi %1, 1971:i32, %5
%7:i1 = var
%8:i32 = select %7, 1967:i32, 1966:i32
%9:i32 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = phi %0, %2, %2, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnw 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5 = block 6
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %5, %4, %4, %4, %4, %7, %4
%9:i8 = phi %0, %4, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4:i32 = phi %0, %1, 0:i32, %2, %3
%5:i32 = and 4293918720:i32, %4
%6:i32 = sub %4, %5
%7 = block 2
%8:i32 = var (00000000000000000000xxxxxxxx0000) (n)
%9:i32 = var
%10:i32 = phi %7, %8, %9
%11:i32 = urem %6, %10
%12:i32 = sub %6, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = var
%4:i8 = and 1:i8, %3
%5:i8 = phi %1, 0:i8, %4, %4
%6:i8 = phi %0, 0:i8, %5, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 31
%4:i8 = phi %3, %2, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (000000000000000000000000x0000000) (n)
%2:i32 = var (0000000000000x00000000000x000000) (n)
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = or %2, %3
%5:i32 = or %1, %4
%6:i32 = var (000000000000000000000000x0000000) (n)
%7:i32 = or %4, %6
%8:i32 = phi %0, %5, %7, %4
%9:i1 = ult 2097151:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4 = block 3
%5:i1 = phi %4, 0:i1, 0:i1, 1:i1
%6:i8 = var (0000000x) (n)
%7:i32 = zext %6
%8:i32 = select %5, %7, 2:i32
%9:i32 = phi %0, 0:i32, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i1 = var
%3:i8 = zext %2
%4:i8 = and %1, %3
%5:i64 = var
%6:i1 = ult %5, 32:i64
%7:i8 = zext %6
%8:i8 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = var
%3:i64 = zext %2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = phi %1, 0:i64, 0:i64, %3, %5, 0:i64
%7:i64 = phi %0, %6, 0:i64
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4 = block 7
%5:i8 = phi %4, 0:i8, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8
%6:i8 = phi %1, %3, %5, 0:i8
%7:i8 = phi %0, %6, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4 = block 2
%5 = block 4
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, %6, 1:i32
%8:i32 = phi %1, %3, %7
%9:i32 = phi %0, %8, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 0:i32, 4:i32
%3 = block 3
%4:i32 = phi %3, 2:i32, 0:i32, 6:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i16 = zext %1
%3:i16 = shlnw %2, 4:i16
%4:i16 = phi %0, 16:i16, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = var (0xxxxxxx) (n)
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, %3, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, %4, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 8:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 4:i32, 0:i32
%5:i32 = phi %0, %2, %2, %4, %4, 2:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 6
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %1, %3, 0:i32
%5:i64 = zext %4
%6 = block 2
%7:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%8:i32 = var
%9:i64 = zext %8
%10:i64 = phi %6, %7, %9
%11:i64 = phi %0, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 0:i32
%7:i32 = phi %2, %3, %6
%8:i32 = phi %1, 0:i32, %7, %6
%9:i32 = phi %0, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 400:i32, 16384:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 400:i32, 16384:i32, 0:i32
%5:i32 = phi %0, 16384:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 2:i32, 1:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %2, %2, %3
%5:i1 = var
%6:i32 = zext %5
%7:i32 = addnw %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 0:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 1:i8, %3
%5:i8 = phi %1, 0:i8, %4
%6:i8 = phi %0, %5, 0:i8, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 9
%2:i32 = phi %1, 0:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32
%3:i32 = phi %0, 1:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 14
%2:i32 = phi %1, 15:i32, 15:i32, 15:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 15:i32, 15:i32
%3:i32 = phi %0, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, 15:i32, 15:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 7:i32, 8:i32
%3:i32 = phi %0, 8:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (00000000000000000000000000xxxxxx) (n)
%2:i1 = ne 0:i32, %1
%3:i32 = subnsw 64:i32, %1
%4:i32 = select %2, %3, 0:i32
%5:i32 = phi %0, %4, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = trunc %1
%3:i32 = and 16777215:i32, %2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i1 = eq 0:i32, %4
%6:i64 = var (0000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%7:i32 = trunc %6
%8:i32 = select %5, %7, %3
%9:i32 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %2, %4
%6:i8 = phi %0, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 4:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i16 = var
%2:i1 = eq 126:i16, %1
%3:i32 = select %2, 224:i32, 223:i32
%4 = block 2
%5:i32 = select %2, 226:i32, 225:i32
%6:i32 = phi %4, %5, %3
%7:i32 = phi %0, %3, %6, %5, 223:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = ne 0:i64, %0
%2 = block 3
%3:i256 = var (000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xxxx) (n)
%4:i256 = shlnw %3, 227:i256
%5:i256 = phi %2, %4, %4, 0:i256
%6:i256 = select %1, 3235193600058076775360041810442355680836457330704868697732433229905920:i256, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var
%3:i64 = zext %2
%4:i64 = shlnw %3, 2:i64
%5:i64 = phi %0, 0:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i1 = eq 0:i8, %2
%4:i1 = var
%5:i32 = select %4, 3:i32, 2:i32
%6:i32 = select %3, %5, 1:i32
%7 = block 2
%8:i8 = var
%9:i1 = eq 0:i8, %8
%10:i1 = var
%11:i32 = select %10, 3:i32, 2:i32
%12:i32 = select %9, %11, 1:i32
%13:i8 = var (0000000x) (n)
%14:i1 = eq 0:i8, %13
%15:i1 = var
%16:i32 = select %15, 3:i32, 2:i32
%17:i32 = select %14, %16, 1:i32
%18 = block 2
%19:i8 = var
%20:i1 = eq 0:i8, %19
%21:i1 = var
%22:i32 = select %21, 3:i32, 2:i32
%23:i32 = select %20, %22, 0:i32
%24:i1 = var
%25:i1 = var
%26:i1 = and %24, %25
%27:i32 = select %26, 2:i32, 0:i32
%28:i32 = phi %0, %6, 0:i32, %12, 0:i32, %17, 0:i32, %23, 1:i32, %27
infer %28

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i64 = zext %1
%3:i64 = shlnw %2, 32:i64
%4:i64 = phi %0, 0:i64, 0:i64, 0:i64, %3, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i32 = var
%2:i32 = var
%3:i1 = ult %1, %2
%4:i16 = select %3, 4:i16, 0:i16
%5 = block 4
%6:i16 = phi %5, 4:i16, 4:i16, 0:i16, 0:i16
%7:i16 = phi %0, 0:i16, 0:i16, 0:i16, %4, 0:i16, 0:i16, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = phi %0, %1, 0:i64
%3:i32 = var
%4:i64 = zext %3
%5:i64 = phi %0, %4, 1:i64
%6:i64 = addnsw 18446744073709551615:i64, %5
%7:i64 = addnsw %2, %6
%8:i64 = urem %7, %5
infer %8

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000xxxx) (n)
%3:i32 = phi %1, %2, 12:i32
%4:i32 = phi %0, 12:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1832:i32, 3692:i32, 3692:i32
%3:i32 = phi %0, %2, 3691:i32, 3692:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 14
%2:i32 = phi %1, 262144:i32, 131072:i32, 196608:i32, 131072:i32, 131072:i32, 327680:i32, 393216:i32, 458752:i32, 524288:i32, 589824:i32, 65536:i32, 65536:i32, 65536:i32, 65536:i32
%3:i32 = phi %0, %2, 0:i32
%4 = block 4
%5 = block 12
%6:i32 = var
%7 = block 6
%8:i32 = var
%9:i32 = phi %4, %6, 1:i32, 0:i32, %8
%10:i32 = and 65535:i32, %9
%11:i32 = or %3, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 8:i32, 4:i32, 2:i32, 1:i32
%3 = block 4
%4:i32 = phi %3, 8:i32, 4:i32, 2:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (znp)
%1:i64 = lshr %0, 1:i64
%2:i32 = trunc %1
%3:i32 = addnuw 2147483647:i32, %2
%4:i32 = and %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%2:i64 = phi %0, %1, 0:i64
%3:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%4:i64 = addnw 4095:i64, %3
%5:i64 = and 17179865088:i64, %4
%6:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (n)
%7:i64 = addnw %5, %6
%8:i64 = addnsw %2, %7
%9:i64 = subnsw %8, %5
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = select %0, 16:i64, 32:i64
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = var
%4:i64 = shl %3, 1:i64
%5:i64 = and %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, %2
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = phi %1, %2, %3
%5:i1 = var
%6:i8 = zext %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %0, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, %3, 1:i8, %3, %3, %3
%5:i32 = var
%6:i1 = slt 7:i32, %5
%7:i8 = select %6, %4, 1:i8
%8:i8 = phi %0, %4, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 1:i32, 2:i32
%4:i32 = phi %1, %3, 2:i32, 1:i32
%5:i32 = phi %0, 1:i32, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, 0:i8, %4
%6:i8 = phi %1, %5, 0:i8
%7:i8 = phi %0, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = add 2:i64, %0
%2:i64 = udiv %1, 3:i64
%3:i64 = addnuw 1:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 2:i32, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 7:i32, 6:i32, 5:i32, 4:i32, 3:i32, 2:i32
%3:i32 = phi %0, %2, 8:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 11
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2, %2, %2, %2, 0:i32, 0:i32
%4:i32 = or 226:i32, %3
%5:i32 = phi %0, 226:i32, %4, 228:i32, 228:i32, 228:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = phi %1, %2, %3
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = and 511:i32, %1
%3:i32 = or 256:i32, %2
%4:i32 = phi %0, %2, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4, 0:i8
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %1, 1:i8, %5, %7
%9 = block 25
%10:i8 = phi %9, 1:i8, %5, %7, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%11:i8 = phi %0, %8, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i32 = zext %0
%2:i32 = subnsw 32:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (000000000000000000000000000000x0) (n)
%2:i32 = phi %0, 1:i32, %1, 3:i32, 4:i32, 1:i32
%3:i24 = trunc %2
%4:i24 = shlnw %3, 16:i24
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, %3
%5 = block 2
%6:i32 = phi %5, %3, %3
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, 0:i8, %4
%6:i8 = phi %0, %1, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = var
%3:i1 = or %1, %2
%4 = block 2
%5:i32 = var (0000000000000000000000000000xxx0) (n)
%6:i32 = var (0000000000000000000000000000xxx0) (n)
%7:i32 = phi %4, %5, %6
%8:i32 = or 128:i32, %7
%9:i32 = select %3, %8, %7
%10:i32 = var
%11:i1 = ne 0:i32, %10
%12:i32 = or 16:i32, %9
%13:i32 = select %11, %12, %9
%14:i32 = phi %0, %9, %9, %9, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5:i32 = var
%6:i1 = eq 0:i32, %5
%7:i8 = select %6, 1:i8, %4
%8:i8 = phi %0, %4, %4, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1073741824:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = phi %1, 0:i64, %2
%4:i64 = phi %0, %3, 0:i64
%5:i1 = var
%6:i64 = select %5, 20:i64, 18:i64
%7:i64 = phi %0, %6, 18:i64
%8:i64 = mulnw %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i72 = var
%2:i8 = trunc %1
%3:i8 = lshr %2, 7:i8
%4 = block 2
%5 = block 2
%6:i8 = phi %5, %3, %3
%7:i8 = phi %4, %3, %6
%8:i8 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i32 = phi %1, 1:i32, 5:i32, 5:i32, 5:i32, 5:i32
%3:i32 = phi %0, 1:i32, 2:i32, 2:i32, 2:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i64 = var (000000000000000000000000000000000000000000000000000000000000x000) (n)
%4:i64 = phi %2, 0:i64, 0:i64, 0:i64, %3
%5 = block 2
%6:i64 = phi %5, %4, 0:i64
%7:i64 = phi %1, %4, %6
%8:i64 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 0:i32, %7
%9 = block 2
%10 = block 2
%11:i32 = phi %10, 1:i32, 0:i32
%12:i32 = phi %9, 0:i32, %11
%13 = block 2
%14 = block 2
%15:i32 = phi %14, 1:i32, 0:i32
%16:i32 = phi %13, 0:i32, %15
%17:i32 = phi %0, 0:i32, %4, %8, %12, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = phi %1, %3, %4
%6:i64 = phi %0, 0:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 132:i32, 132:i32, 131:i32, 131:i32
%3:i32 = phi %0, 131:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (00000000000000xx000x00xxx00000xx) (n)
%5:i32 = var (00000000000000xx000x00xxx00000xx) (n)
%6:i32 = phi %2, %4, %5
%7 = block 2
%8:i32 = phi %7, %5, %5
%9:i32 = phi %1, %6, %8
%10:i32 = phi %0, %9, %8
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = and 255:i32, %2
%4:i32 = or 256:i32, %3
%5:i32 = select %1, %4, %3
%6:i32 = phi %0, %5, 0:i32, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 3
%3:i1 = var
%4:i8 = zext %3
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %2, %4, %4, %6
%8:i8 = phi %1, %7, %4
%9 = block 2
%10:i8 = phi %9, %8, 0:i8
%11:i8 = phi %0, %8, 0:i8, %10, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i16 = var
%4:i32 = zext %3
%5 = block 59
%6:i32 = phi %5, 1074:i32, 1041:i32, 1050:i32, 1065:i32, 1086:i32, 1077:i32, 1080:i32, 1083:i32, 1063:i32, 1057:i32, 1061:i32, 1055:i32, 2181:i32, 2148:i32, 2157:i32, 2172:i32, 2193:i32, 2184:i32, 2187:i32, 2190:i32, 2168:i32, 2162:i32, 1157:i32, 1151:i32, 1154:i32, 1173:i32, 1161:i32, 1167:i32, 2246:i32, 2240:i32, 2243:i32, 2262:i32, 2250:i32, 2256:i32, 1101:i32, 1089:i32, 1095:i32, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
%7:i32 = phi %2, %4, %6
%8:i32 = phi %1, %7, %6
%9:i32 = phi %0, %8, %4
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = select %2, %3, 1:i32
%5:i32 = phi %1, %4, 2:i32
%6:i32 = phi %0, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 2:i32, 4:i32, 1:i32, 3:i32, 2:i32
%3:i32 = phi %0, 5:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = addnw 29:i32, %2
%4:i32 = phi %1, 30:i32, %3
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = or 2:i32, %6
%8:i32 = phi %5, 3:i32, %7
%9:i32 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %3, 0:i32, %7
%9:i32 = phi %0, 1:i32, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 9
%2:i1 = var
%3:i32 = var (0000000000000000000000000000001x) (zn)
%4:i32 = select %2, %3, 1:i32
%5:i1 = var
%6:i32 = var (0000000000000000000000000000001x) (zn)
%7:i32 = select %5, %6, 1:i32
%8:i1 = var
%9:i32 = var (0000000000000000000000000000001x) (zn)
%10:i32 = select %8, %9, 1:i32
%11:i1 = var
%12:i32 = var (0000000000000000000000000000001x) (zn)
%13:i32 = select %11, %12, 0:i32
%14:i1 = var
%15:i32 = select %14, 2:i32, 0:i32
%16:i32 = phi %1, %4, 0:i32, %7, 0:i32, %10, 0:i32, %13, 1:i32, %15
%17 = block 3
%18:i8 = var (0000000x) (n)
%19:i1 = eq 0:i8, %18
%20:i1 = var
%21:i32 = select %20, 3:i32, 2:i32
%22:i32 = select %19, %21, 1:i32
%23:i32 = phi %0, %16, %22, 0:i32
infer %23

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 5
%2:i32 = phi %1, 2:i32, 0:i32, 1:i32, 2:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 2:i32, 2:i32, 2:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 7:i32, 8:i32
%4:i32 = phi %1, 8:i32, %3
%5:i32 = phi %0, 8:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2 = block 2
%3:i32 = var (00000000000000000000000000xxx0x0) (zn)
%4:i32 = phi %2, 48:i32, %3
%5:i32 = select %1, %4, 10:i32
%6:i32 = phi %0, 48:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%2:i32 = phi %0, 65535:i32, %1
%3:i16 = var
%4:i32 = zext %3
%5:i32 = and %2, %4
%6:i32 = var
%7:i32 = lshr %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, %2
%4 = block 3
%5:i64 = var
%6:i64 = var
%7:i1 = ne %5, %6
%8:i8 = select %7, 0:i8, %3
%9:i8 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 15
%2:i32 = phi %1, 4789:i32, 4375:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32
%3:i32 = phi %0, %2, %2, %2, 4636:i32, 0:i32, 4789:i32, 4789:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = and 1:i64, %2
%4:i64 = phi %1, 1:i64, %3
%5 = block 2
%6:i1 = var
%7:i1 = phi %5, 0:i1, %6
%8:i64 = zext %7
%9:i64 = phi %0, 0:i64, 0:i64, 0:i64, %4, 0:i64, %8, 0:i64
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 2:i32
%4:i32 = or 1:i32, %3
%5:i32 = phi %1, %3, %4
%6:i32 = or 4:i32, %5
%7:i32 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i1 = var
%4:i8 = zext %3
%5:i8 = or %2, %4
%6:i8 = phi %0, %5, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2 = block 9
%3:i32 = phi %2, 16:i32, 9:i32, 12:i32, 16:i32, 13:i32, 12:i32, 11:i32, 10:i32, 10:i32
%4:i1 = var
%5:i32 = select %4, 9:i32, 16:i32
%6:i32 = phi %1, %3, 16:i32, %5, 12:i32
%7:i32 = phi %0, %6, %3, %3, %3, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3:i8 = var
%4:i8 = and 1:i8, %3
%5:i8 = xor 1:i8, %4
%6:i8 = phi %0, %2, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i16 = var
%2:i32 = zext %1
%3 = block 2
%4:i16 = var
%5:i32 = zext %4
%6:i32 = phi %3, %5, 0:i32
%7 = block 4
%8:i16 = var
%9:i32 = zext %8
%10:i16 = var
%11:i32 = zext %10
%12:i32 = phi %7, %9, %11, 0:i32, 0:i32
%13 = block 2
%14:i16 = var
%15:i32 = zext %14
%16:i32 = phi %13, %15, 0:i32
%17 = block 2
%18:i16 = var
%19:i32 = zext %18
%20:i32 = phi %17, %19, 0:i32
%21:i32 = phi %0, %2, %6, %6, %12, %16, %20, %12, %16, %20
infer %21

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 12
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, 0:i8, 0:i8, %2, %2, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 4
%4:i8 = phi %3, 0:i8, 1:i8, 0:i8, 1:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i1 = var
%4:i8 = zext %3
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %2, %4, %4, %6
%8:i8 = phi %1, %7, %4
%9:i8 = phi %0, %8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 3:i32, 2:i32, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = var (000000000000000000000000000000x0) (n)
%4:i32 = select %2, 1:i32, %3
%5:i8 = var (0000000x) (n)
%6:i32 = zext %5
%7:i32 = phi %1, %4, %6, 1:i32
%8:i1 = var
%9:i1 = var
%10:i1 = and %8, %9
%11:i32 = select %10, 1:i32, 2:i32
%12:i32 = phi %0, %7, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3, 0:i32
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i8 = trunc %0
%2:i1 = slt %1, 0:i8
%3 = block 8
%4 = block 6
%5:i8 = phi %4, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%6:i8 = phi %3, %5, %5, %5, %5, 0:i8, 0:i8, 0:i8, 0:i8
%7:i8 = select %2, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = mulnw 48:i64, %1
%3:i64 = phi %0, %2, 0:i64
%4:i64 = var (00000000000000000000000000000000000000000000000000000000000x0000) (n)
%5:i64 = phi %0, 16:i64, %4
%6:i64 = var (00000000000000000000000000000000000000000000000000000000000x0000) (n)
%7:i64 = var (000000000000000000000000000000000000000000000000000000000000x000) (n)
%8:i64 = or %6, %7
%9:i64 = addnsw %5, %8
%10:i64 = addnsw %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 4:i32
%3:i32 = phi %0, 0:i32, %2, %2
%4:i32 = var
%5:i1 = ne 0:i32, %4
%6:i32 = zext %5
%7:i32 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = lshr %1, 3:i64
%3:i64 = addnw 2147450881:i64, %2
%4:i64 = phi %0, %3, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = var (000000000000xx0x0000000000000000) (zn)
%3:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%4:i32 = or %2, %3
%5:i32 = or 1:i32, %4
%6:i32 = var (000000000000000000000000xxxxxx00) (n)
%7:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%8:i32 = or %6, %7
%9:i32 = or 327680:i32, %8
%10:i32 = phi %0, %5, %5, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var
%2:i16 = shl %1, 2:i16
%3:i16 = and 4:i16, %2
%4:i64 = var
%5:i1 = eq 0:i64, %4
%6:i16 = or 8:i16, %3
%7:i16 = select %5, %3, %6
%8:i16 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 7
%2:i32 = phi %1, 0:i32, 2:i32, 1:i32, 2:i32, 0:i32, 0:i32, 2:i32
%3:i32 = phi %0, 1:i32, 2:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 35:i32, 34:i32, 10:i32, 12:i32, 11:i32, 7:i32, 6:i32
%3:i32 = phi %0, %2, 5:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i8 = var (00000xxx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, 1:i32, %3, 3:i32, %3, 5:i32
%5:i32 = var
%6:i1 = slt %4, %5
%7:i32 = select %6, %5, %4
%8:i32 = phi %0, %4, %7, %4, %4, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 65535:i32, %0
%2:i16 = var
%3:i32 = zext %2
%4:i32 = mulnw %1, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 7
%1 = block 5
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 4:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 135:i32, 131:i32
%3 = block 2
%4:i32 = phi %3, 16:i32, 0:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = var (00000xxx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, 1:i32, %3, 3:i32, %3, 5:i32
%5:i32 = var
%6:i1 = slt %4, %5
%7:i32 = select %6, %5, %4
%8:i32 = phi %0, %4, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, 1:i32, 1:i32, %3, 2:i32, 2:i32, 0:i32, 0:i32, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i16 = zext %1
%3:i16 = shlnw %2, 4:i16
%4:i16 = phi %0, %3, 16:i16
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, %4, %3, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 8:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i64 = var
%3:i64 = udiv %2, 9:i64
%4:i64 = udiv %2, 5:i64
%5:i64 = udiv %2, 3:i64
%6:i64 = phi %1, %3, %4, %5, 0:i64
%7:i64 = phi %1, 9:i64, 5:i64, 3:i64, 0:i64
%8:i64 = phi %0, %6, %7, %6, %6, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 3:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3 = block 3
%4:i32 = var (000000000000000000000000000000x0) (n)
%5 = block 4
%6:i32 = var (000000000000000000000000000000x1) (zn)
%7:i32 = phi %2, %4, %6
%8:i32 = phi %1, 2:i32, %7, %7, %7
%9:i32 = phi %0, %8, 2:i32, 2:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 3:i32
%4:i32 = phi %1, 3:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 201603:i32, 0:i32
%4:i32 = phi %1, %3, %3
%5 = block 2
%6:i32 = phi %5, %4, %3
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, %2, 6:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3 = block 3
%4 = block 5
%5:i8 = phi %4, %2, %2, %2, %2, 1:i8
%6:i8 = phi %3, %2, %5, %5
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 201603:i32, 0:i32
%5:i32 = phi %2, %4, %4
%6:i32 = phi %1, %5, %4
%7 = block 2
%8:i32 = phi %7, %4, %4
%9:i32 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i8 = select %0, 4:i8, 2:i8
%2:i8 = or 1:i8, %1
%3:i1 = eq 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var
%2:i32 = lshr %1, 4:i32
%3:i32 = and 3:i32, %2
%4 = block 3
%5:i32 = phi %4, 0:i32, 2:i32, 2:i32
%6:i32 = phi %0, %3, %3, %3, 0:i32, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 3:i32
%3:i32 = phi %0, 0:i32, 3:i32, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 51
%2:i32 = phi %1, 2:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 3
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = phi %2, %5, %5, %7
%9:i8 = phi %1, %8, %5
%10:i8 = phi %0, %9, %9, 0:i8, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5:i8 = phi %0, 0:i8, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 2:i32, 0:i32, 0:i32
%3:i32 = or 4:i32, %2
%4:i32 = phi %0, %3, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 4:i32, 5:i32, 7:i32, 16:i32, 6:i32, 8:i32
%3 = block 3
%4:i32 = phi %3, %2, %2, 2:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 3:i32, 1:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var
%3:i32 = lshr %2, 13:i32
%4:i32 = addnw 1:i32, %3
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%7:i32 = addnw %5, %6
%8:i32 = phi %1, %4, %7, %3
%9:i32 = phi %0, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var
%3:i64 = phi %0, %1, %2
%4:i64 = var
%5:i64 = var
%6:i64 = phi %0, %4, %5
%7:i1 = eq %3, %6
%8 = block 10
%9:i8 = var (0001000x) (zn)
%10:i64 = zext %9
%11:i64 = or 34359738368:i64, %10
%12:i64 = phi %8, %11, %10, %10, %10, %10, %10, %10, %10, %10, %10
%13:i64 = or 68719476736:i64, %12
%14:i64 = select %7, %12, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i8 = trunc %0
%2:i1 = slt %1, 0:i8
%3 = block 7
%4 = block 5
%5:i8 = phi %4, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8
%6:i8 = phi %3, %5, %5, %5, 0:i8, 0:i8, 0:i8, 0:i8
%7:i8 = select %2, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, %3, 1:i64
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1 = block 2
%2:i8 = var (0xxxxxxx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, %4, %4, %4, %4, %4, %4, %4, %4, 0:i32, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i64 = zext %1
%3:i64 = shlnw %2, 32:i64
%4:i64 = phi %0, 0:i64, 0:i64, 0:i64, %3, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 3:i32, 1:i32, 3:i32, 2:i32
%3 = block 3
%4:i32 = phi %3, 0:i32, 1:i32, 2:i32
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i64 = phi %2, 18:i64, 9:i64
%4:i64 = phi %1, 10:i64, %3
%5:i64 = phi %0, 20:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 30
%2 = block 7
%3 = block 2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%6:i64 = phi %2, 0:i64, 0:i64, 0:i64, %4, 0:i64, %5, 0:i64
%7:i64 = phi %1, %6, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%8:i64 = phi %0, %7, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, 0:i32, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 152:i64
%4:i64 = subnsw 121360158379668102:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000000xxx) (n)
%2:i256 = zext %1
%3:i256 = shlnw %2, 241:i256
%4:i256 = phi %0, %3, 7067388259113537318333190002971674063309935587502475832486424805170479104:i256
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = sub 4294967294:i32, %0
%2:i32 = xor 4294967295:i32, %0
%3:i32 = or %1, %2
%4:i1 = eq 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (00000000000000000000000xxxxxxxxx) (n)
%2:i32 = and 128:i32, %1
%3:i32 = var (0000000000000x00000000000x000000) (n)
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = or %3, %4
%6:i32 = or %2, %5
%7:i8 = var (x0000000)
%8:i32 = zext %7
%9:i32 = or %5, %8
%10:i32 = phi %0, %6, %9, %5
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i1 = phi %1, %2, %2, 1:i1, 1:i1
%4:i1 = var
%5:i16 = var (0000000000000xxx) (zn)
%6:i16 = var (0000000000001xxx) (zn)
%7:i16 = select %4, %5, %6
%8:i16 = or 16:i16, %7
%9:i16 = select %3, %7, %8
%10:i16 = or 32:i16, %9
%11:i16 = phi %0, %9, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000x000000000x0000000000xxx00x00) (n)
%1:i72 = var (00000000000000000000000000000000000000000000000000000000000000000x000000) (n)
%2:i64 = trunc %1
%3:i64 = shlnw %2, 2:i64
%4:i64 = or %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%1:i64 = xor 18446744073709551615:i64, %0
%2:i64 = var
%3:i1 = ult %1, %2
%4:i64 = select %3, %2, %1
%5:i64 = sub 0:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 9
%3:i32 = phi %2, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 7
%2 = block 4
%3 = block 2
%4:i8 = var (0000000x) (n)
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %2, %4, %6, %4, %4
%8:i8 = phi %1, 1:i8, %7, %7, %7, %7, %7, %7
%9:i8 = phi %0, %8, 1:i8, 1:i8, 1:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 4
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %4
%6 = block 2
%7:i8 = phi %6, %3, %4
%8:i8 = phi %1, %5, %7, %5, %5
%9:i8 = phi %0, 1:i8, %8, %8, %8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, %3
%5:i8 = phi %0, %4, %3, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8
%5 = block 2
%6:i8 = phi %5, %4, 1:i8
%7:i8 = phi %0, %4, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000000x0x) (zn)
%2:i1 = eq 4:i32, %1
%3:i32 = select %2, 0:i32, %1
%4:i32 = phi %0, %3, 2:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i1 = var
%3:i64 = select %2, 2:i64, 0:i64
%4:i64 = phi %1, %3, 0:i64, 0:i64
%5:i64 = phi %0, 4:i64, 2:i64, 3:i64, 2:i64, 2:i64, 1:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 4
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32, 1:i32
%6:i32 = phi %1, 1:i32, 1:i32, 1:i32, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 0:i32, 1:i32, 1:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var
%3:i8 = lshr %2, 7:i8
%4:i8 = phi %1, %3, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 14
%2:i32 = phi %1, 262144:i32, 131072:i32, 196608:i32, 131072:i32, 131072:i32, 327680:i32, 393216:i32, 458752:i32, 524288:i32, 589824:i32, 65536:i32, 65536:i32, 65536:i32, 65536:i32
%3:i32 = phi %0, %2, 0:i32
%4 = block 4
%5 = block 12
%6:i32 = var
%7 = block 7
%8:i32 = var
%9:i32 = phi %4, %6, 1:i32, 0:i32, %8
%10:i32 = and 65535:i32, %9
%11:i32 = or %3, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 1:i32, 1:i32, 4:i32, 4:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i24 = var (00000000000000000000000x) (n)
%3:i8 = trunc %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %5
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 1:i8
%4 = block 2
%5:i8 = phi %4, %3, %2
%6:i8 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i64 = var
%4:i1 = ne 0:i64, %3
%5:i8 = zext %4
%6:i8 = phi %2, 1:i8, %5
%7:i8 = phi %1, %6, 1:i8
%8:i8 = phi %0, %7, %5, 0:i8, 0:i8, 0:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000xxxxxxxx) (n)
%1:i32 = lshr %0, 3:i32
%2:i16 = var (0xxxxxxxxxxxxxxx) (n)
%3:i32 = zext %2
%4:i32 = or %1, %3
%5:i16 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = or 2:i32, %1
%3:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%4:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%5:i32 = or %3, %4
%6:i32 = or %2, %5
%7:i32 = var (000000000000000000000000xxxxxx00) (n)
%8:i32 = or 3:i32, %7
%9:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%10:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%11:i32 = or %9, %10
%12:i32 = or %8, %11
%13:i32 = phi %0, %6, %6, %12, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i64 = var
%3:i64 = lshr %2, 3:i64
%4:i64 = phi %1, %3, 0:i64
%5:i64 = phi %0, %4, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i1 = var
%5:i32 = zext %4
%6:i32 = phi %1, %3, %5, 1:i32
%7:i32 = phi %0, %6, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = urem 1048576:i32, %0
%2:i32 = subnsw 1048576:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, %3, 0:i8, 0:i8
%5:i32 = var
%6:i1 = eq 0:i32, %5
%7:i8 = select %6, 1:i8, %4
%8:i8 = phi %0, %4, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i64 = phi %1, 9:i64, 5:i64, 3:i64, 0:i64
%3:i64 = var
%4:i64 = udiv %3, 9:i64
%5:i64 = udiv %3, 5:i64
%6:i64 = udiv %3, 3:i64
%7:i64 = phi %1, %4, %5, %6, 0:i64
%8:i64 = phi %0, %2, %7, %2, %2, %2
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, 0:i64, %3, 0:i64, 0:i64
%5:i32 = var
%6:i64 = zext %5
%7:i64 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = sext %0
%2:i64 = lshr 21096879384830:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4 = block 2
%5:i32 = phi %4, 1:i32, 2:i32
%6:i32 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i24 = var (000000000000000x00000000) (n)
%2:i24 = lshrexact %1, 8:i24
%3:i8 = trunc %2
%4 = block 2
%5 = block 2
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %5, %3, %7
%9:i8 = phi %4, %8, 0:i8
%10:i8 = phi %0, %3, %3, %3, %9, %7
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i32 = select %1, 3:i32, 1:i32
%3 = block 4
%4:i1 = var
%5:i32 = var (000000000000000000000000000000x0) (n)
%6:i32 = var (000000000000000000000000000001x0) (zn)
%7:i32 = select %4, %5, %6
%8:i32 = phi %3, %2, %7, 0:i32, 0:i32
%9:i32 = phi %0, %2, %8, 0:i32, 0:i32, 0:i32, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, %5, %4
%7:i8 = phi %0, %6, 1:i8, %6, 0:i8, 0:i8, 0:i8, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 3
%4:i8 = phi %3, 0:i8, 1:i8, 0:i8
%5:i8 = phi %0, %2, 0:i8, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 58
%1:i32 = var
%2:i64 = zext %1
%3:i8 = var
%4:i1 = eq 101:i8, %3
%5:i64 = select %4, 2:i64, %2
%6:i8 = var
%7:i1 = eq 101:i8, %6
%8:i64 = select %7, 2:i64, %2
%9:i8 = var
%10:i1 = eq 101:i8, %9
%11:i64 = select %10, 2:i64, %2
%12:i8 = var
%13:i1 = eq 101:i8, %12
%14:i64 = select %13, 2:i64, %2
%15:i32 = var
%16:i1 = eq 0:i32, %15
%17:i64 = select %16, 4:i64, %2
%18:i32 = var
%19:i1 = eq 0:i32, %18
%20:i64 = select %19, 5:i64, %2
%21:i32 = var
%22:i1 = eq 0:i32, %21
%23:i64 = select %22, 5:i64, %2
%24:i32 = var
%25:i1 = eq 0:i32, %24
%26:i64 = select %25, 6:i64, %2
%27:i32 = var
%28:i1 = eq 0:i32, %27
%29:i64 = select %28, 6:i64, %2
%30:i8 = var
%31:i1 = eq 101:i8, %30
%32:i64 = select %31, 4:i64, %2
%33:i8 = var
%34:i1 = eq 101:i8, %33
%35:i64 = select %34, 4:i64, %2
%36:i8 = var
%37:i1 = eq 101:i8, %36
%38:i64 = select %37, 4:i64, %2
%39:i8 = var
%40:i1 = eq 101:i8, %39
%41:i64 = select %40, 4:i64, %2
%42:i64 = phi %0, %2, 6:i64, %2, %2, 5:i64, %2, %2, 5:i64, 4:i64, %2, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, %2, 4:i64, %2, 4:i64, 4:i64, %2, %2, 3:i64, 3:i64, %2, %2, %2, 3:i64, %2, 3:i64, 2:i64, %2, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 2:i64, 2:i64, 2:i64, 2:i64, %5, %8, %11, %14, %17, %20, %23, %26, %29, %32, %35, %38, %41, 7:i64
infer %42

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8, 0:i8
%5:i32 = var
%6:i1 = eq 0:i32, %5
%7:i8 = select %6, 1:i8, %4
%8:i8 = phi %0, %4, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000000xx0) (n)
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%3:i64 = or %1, %2
%4:i64 = xor 1:i64, %3
%5:i64 = phi %0, 0:i64, 0:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = var (0000000000000000000000000000x000) (n)
%3:i32 = phi %1, 0:i32, 6:i32, 0:i32, %2
%4:i1 = ne 0:i32, %3
%5:i32 = select %4, %3, 9:i32
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i1 = ne 0:i8, %7
%9:i1 = phi %6, %8, %8
%10:i32 = select %9, 1:i32, 4:i32
%11:i32 = select %4, %3, 10:i32
%12:i32 = select %8, 3:i32, %11
%13:i32 = phi %0, 0:i32, %5, 2:i32, %10, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i64 = var (000000000000000000000000000000x000000000000000000000000000000000) (n)
%2:i1 = ne 0:i64, %1
%3:i32 = select %2, 3:i32, 1:i32
%4:i64 = var (000000000000000000000000000000x000000000000000000000000000000000) (n)
%5:i1 = ne 0:i64, %4
%6:i32 = select %5, 3:i32, 1:i32
%7 = block 2
%8:i1 = var
%9:i32 = select %8, 3:i32, 1:i32
%10:i32 = phi %7, %9, %6
%11:i32 = phi %0, 2:i32, %3, 2:i32, %6, %10, 3:i32, 2:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i72 = var
%2:i8 = trunc %1
%3:i8 = lshr %2, 7:i8
%4 = block 2
%5 = block 2
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = phi %5, %3, %7
%9:i8 = phi %4, %3, %8
%10:i8 = phi %0, %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i64 = select %2, 8:i64, 0:i64
%4:i64 = phi %1, 0:i64, 0:i64, 0:i64, %3
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i32 = phi %1, 8:i32, 0:i32, 3:i32
%3:i32 = phi %0, 7:i32, 6:i32, 5:i32, 4:i32, 2:i32, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, 0:i8, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = lshr %2, 2:i64
%4:i64 = var
%5:i64 = lshr %4, 2:i64
%6:i64 = phi %1, %3, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000xxxx10) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000001xx10) (zn)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 2:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i8 = var (0000000x) (n)
%2:i1 = eq 0:i8, %1
%3:i1 = var
%4:i32 = select %3, 0:i32, 2:i32
%5:i32 = or 4:i32, %4
%6:i32 = select %2, %4, %5
%7:i1 = var
%8:i32 = select %7, 3:i32, 1:i32
%9:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = cttz %2
%4:i32 = trunc %3
%5:i32 = phi %0, %4, 31:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (00000000000000000000000000000x0x) (n)
%3:i32 = phi %1, %2, 2:i32, 1:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i48 = var (0000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (n)
%2:i48 = lshr 62844636641341:i48, %1
%3:i8 = trunc %2
%4:i8 = phi %0, %3, 40:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = phi %0, 1:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = var
%4:i64 = zext %3
%5:i64 = phi %1, 0:i64, 0:i64, %4
%6:i64 = phi %0, %5, %5, %4, 0:i64
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = var
%4:i64 = zext %3
%5:i64 = phi %1, 0:i64, %4, %4, 0:i64
%6:i64 = phi %0, %5, 0:i64
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000x00000) (n)
%1:i32 = lshrexact %0, 5:i32
%2:i1 = var
%3:i32 = select %2, 14:i32, 15:i32
%4:i32 = shl %1, %3
%5:i8 = var (000xxxxx) (n)
%6:i32 = zext %5
%7:i32 = shlnw %6, 8:i32
%8:i32 = or %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 4
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, %4, 0:i8, %4
%6:i8 = phi %1, %5, 0:i8
%7:i8 = phi %0, %6, %6, 0:i8, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = and 7:i64, %2
%4:i64 = var
%5:i64 = and 7:i64, %4
%6:i64 = phi %1, %3, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000x01) (zn)
%1:i1 = eq 5:i32, %0
%2:i32 = select %1, 0:i32, %0
%3:i3 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 4:i32, 3:i32, 5:i32, 2:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 6:i32, 6:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 3:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 15
%2:i1 = var
%3:i32 = select %2, 3747:i32, 3746:i32
%4:i32 = phi %1, 3757:i32, 3757:i32, %3, 3740:i32, 4033:i32, 3742:i32, 3739:i32, 3757:i32, 3757:i32, 3740:i32, 4033:i32, 3742:i32, 3739:i32, 3757:i32, 3757:i32
%5:i32 = phi %0, %4, %4, %4, 3757:i32, 3757:i32, 3757:i32, 3757:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = and 16777215:i32, %2
%4:i1 = var
%5:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i32 = select %4, %5, %3
%7:i32 = phi %1, %3, %6
%8:i32 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i24 = var (000000000000000x00000000) (n)
%2:i24 = lshrexact %1, 8:i24
%3:i8 = trunc %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %0, %3, 0:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i16 = var
%2:i1 = eq 126:i16, %1
%3:i32 = select %2, 226:i32, 225:i32
%4:i32 = select %2, 224:i32, 223:i32
%5 = block 2
%6:i32 = phi %5, %3, %4
%7:i32 = phi %0, %3, %4, %6, 223:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 14
%3 = block 13
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, %4, %4, %4, %4, 0:i8, 0:i8, %4, %4, %4, %4, %4, %4, %4
%6:i8 = phi %1, 1:i8, %5, 1:i8
%7:i8 = phi %0, %6, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 2:i32, 1:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %2, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 262144:i32, %3
%5:i32 = or 262145:i32, %3
%6:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%7:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%8:i32 = or %6, %7
%9:i32 = or 1:i32, %8
%10:i32 = phi %0, %4, %4, %5, %5, %5, %5, %9, %9, %9, %9, %9, %9, %9, %9, %4, %4
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var
%2:i32 = zext %1
%3 = block 2
%4:i32 = phi %3, 0:i32, %2
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (00000000000000000000000xxxxxxxxx) (n)
%2:i8 = trunc %1
%3:i8 = and 1:i8, %2
%4 = block 2
%5:i64 = var
%6:i64 = var
%7:i1 = ne %5, %6
%8:i8 = zext %7
%9 = block 3
%10:i8 = phi %9, %8, 0:i8, 0:i8
%11:i8 = phi %0, %3, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var
%2:i32 = var (0000000xxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = udiv %1, %2
%4:i32 = lshr %3, 1:i32
%5:i32 = urem %0, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, %2, 1:i1, 0:i1
%4:i8 = zext %3
%5 = block 2
%6 = block 3
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %5, %8, 0:i8
%10:i8 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 409:i32, 380:i32
%3 = block 4
%4:i1 = var
%5:i32 = select %4, 380:i32, %2
%6:i32 = phi %3, %2, %2, %2, %5
%7:i32 = phi %0, %2, %2, %2, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4 = block 2
%5 = block 4
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, %6, 1:i32
%8:i32 = phi %1, %3, %7
%9:i32 = phi %0, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = or 4:i32, %2
%4:i32 = phi %0, %3, %2, 2:i32, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = mulnw 56:i64, %1
%3:i64 = mulnw 52:i64, %1
%4:i64 = phi %0, %2, %3
%5:i32 = var
%6:i64 = zext %5
%7:i64 = addnsw %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %1, %2, %4
%6:i8 = and 1:i8, %5
%7:i8 = xor 1:i8, %6
%8:i8 = phi %0, %6, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (00000000000000000000000000000x01) (zn)
%2:i1 = eq 5:i32, %1
%3:i32 = select %2, 0:i32, %1
%4:i32 = phi %0, %3, 2:i32, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = and 4294967292:i64, %2
%4:i64 = var
%5:i64 = and 4294967292:i64, %4
%6:i64 = phi %1, %3, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 4:i32
%5:i32 = phi %1, 1:i32, 0:i32, %4
%6:i32 = phi %0, 0:i32, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %4
%6:i8 = phi %0, %1, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 0:i32
%4:i32 = or 4:i32, %3
%5:i32 = phi %1, %4, %3
%6:i32 = select %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 3
%2:i1 = var
%3:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%4:i64 = select %2, 2:i64, %3
%5:i64 = phi %0, 0:i64, 2:i64, 2:i64, 2:i64, 2:i64, 2:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %4, 0:i64, 0:i64, 0:i64, 0:i64
%6:i64 = mulnuw 40:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000001x) (zn)
%3 = block 2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 4:i64, %5
%7:i64 = phi %0, %6, %5
%8:i64 = or 8:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i1 = phi %1, %2, 0:i1, 0:i1, 1:i1
%4:i8 = zext %3
%5 = block 2
%6 = block 4
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %5, %8, 0:i8
%10:i8 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var (000000000000000x) (n)
%2:i16 = shlnw %1, 8:i16
%3:i16 = phi %0, %2, 0:i16, 0:i16
%4:i1 = var
%5:i16 = zext %4
%6:i16 = phi %0, %5, %5, 0:i16
%7:i16 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 4:i32, 4:i32
%5:i32 = phi %0, %4, 3:i32, 3:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = add 18446744073709551615:i64, %0
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = subnsw 0:i64, %2
%4:i64 = and %1, %3
%5:i32 = var
%6:i64 = zext %5
%7:i64 = urem %4, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 9
%1:i32 = var (0000000000000000000xxxxxxxxxxxxx) (n)
%2:i1 = ult 26:i32, %1
%3:i32 = addnsw 4294967269:i32, %1
%4:i32 = select %2, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4, 0:i32, 0:i32, %4, 0:i32, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = subnsw %0, %1
%3:i1 = ult 8:i64, %2
%4:i64 = select %3, %2, 8:i64
%5:i1 = eq 0:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = addnsw 4294967295:i32, %1
%3:i32 = shl 1:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (00000000000000xx000x00xxx00000xx) (n)
%5:i32 = var (00000000000000xx000x00xxx00000xx) (n)
%6:i32 = phi %2, %4, %5
%7 = block 2
%8 = block 2
%9:i32 = var (00000000000000xx000x00xxx00000xx) (n)
%10:i32 = phi %7, %9, %5
%11:i32 = phi %1, %6, %10
%12:i32 = phi %0, %11, %10
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3
%5:i8 = phi %1, %4, %4, 0:i8, %4
%6:i8 = phi %0, %5, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 53
%1 = block 2
%2:i64 = phi %1, 41:i64, 0:i64
%3:i64 = phi %0, 117:i64, 116:i64, 115:i64, 114:i64, 113:i64, 112:i64, 111:i64, 110:i64, 39:i64, 43:i64, 36:i64, 505:i64, 37:i64, 40:i64, 38:i64, 35:i64, 237:i64, 236:i64, 235:i64, 234:i64, 233:i64, 232:i64, 231:i64, 230:i64, 23:i64, 29:i64, 20:i64, 504:i64, 21:i64, 24:i64, 22:i64, 19:i64, 245:i64, 244:i64, 243:i64, 242:i64, 241:i64, 240:i64, 239:i64, 238:i64, 8:i64, 6:i64, 14:i64, 45:i64, 503:i64, 502:i64, 501:i64, 500:i64, 6:i64, 6:i64, 8:i64, 8:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2 = block 3
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8, %4
%6:i8 = phi %1, %5, 1:i8, %5
%7 = block 3
%8 = block 3
%9 = block 3
%10:i8 = var (0000000x) (n)
%11:i8 = phi %8, %10, 1:i8, %10
%12:i8 = phi %7, %11, 1:i8, %11
%13:i8 = phi %0, %6, 1:i8, %6, %12, 1:i8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 4:i64, 0:i64
%3:i64 = or 2:i64, %2
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (000xx000) (n)
%3:i8 = or 36:i8, %2
%4 = block 3
%5:i8 = phi %4, 20:i8, %3, 20:i8
%6:i8 = phi %1, %3, 36:i8, %5
%7:i8 = phi %0, %6, %6, 20:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 58
%2:i32 = var
%3:i64 = zext %2
%4:i1 = var
%5:i64 = select %4, 2:i64, %3
%6:i1 = var
%7:i64 = select %6, 2:i64, %3
%8:i1 = var
%9:i64 = select %8, 2:i64, %3
%10:i1 = var
%11:i64 = select %10, 2:i64, %3
%12:i1 = var
%13:i64 = select %12, 4:i64, %3
%14:i1 = var
%15:i64 = select %14, 5:i64, %3
%16:i1 = var
%17:i64 = select %16, 5:i64, %3
%18:i1 = var
%19:i64 = select %18, 6:i64, %3
%20:i1 = var
%21:i64 = select %20, 6:i64, %3
%22:i1 = var
%23:i64 = select %22, 4:i64, %3
%24:i1 = var
%25:i64 = select %24, 4:i64, %3
%26:i1 = var
%27:i64 = select %26, 4:i64, %3
%28:i1 = var
%29:i64 = select %28, 4:i64, %3
%30:i64 = phi %1, %3, 6:i64, %3, %3, 5:i64, %3, %3, 5:i64, 4:i64, %3, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, %3, 4:i64, %3, 4:i64, 4:i64, %3, %3, 3:i64, 3:i64, %3, %3, %3, 3:i64, %3, 3:i64, 2:i64, %3, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 2:i64, 2:i64, 2:i64, 2:i64, %5, %7, %9, %11, %13, %15, %17, %19, %21, %23, %25, %27, %29, 7:i64
%31 = block 126
%32:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%33:i64 = addnw 3:i64, %32
%34:i64 = or 4:i64, %32
%35:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%36:i64 = or 4:i64, %35
%37:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%38:i64 = or 4:i64, %37
%39:i64 = addnw 5:i64, %37
%40:i64 = addnw 5:i64, %32
%41:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%42:i64 = subnsw 6:i64, %41
%43:i64 = subnsw 6:i64, %32
%44:i64 = phi %31, %3, %3, 9:i64, 9:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 10:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 6:i64, 6:i64, 8:i64, 7:i64, 7:i64, 7:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 5:i64, 7:i64, 8:i64, 6:i64, 6:i64, 4:i64, 5:i64, 6:i64, 6:i64, 6:i64, 5:i64, 6:i64, 3:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 6:i64, 7:i64, 7:i64, %33, %33, %34, %36, %34, %34, %36, %38, %34, %34, 4:i64, %34, %34, %39, %40, %42, %43
%45:i64 = phi %0, %30, %44
infer %45

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4:i32, 5:i32
%3:i32 = phi %0, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5 = block 2
%6:i8 = phi %5, %4, 0:i8
%7:i8 = phi %1, %4, %4, %6
%8:i8 = phi %0, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 3:i32
%3:i16 = var
%4:i1 = ne 22:i16, %3
%5:i32 = zext %4
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 4:i32, 5:i32
%4:i32 = phi %1, 3:i32, %3
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 7:i32, 1:i32, 1:i32, 7:i32
%3:i1 = eq 7:i32, %2
%4:i32 = select %3, 0:i32, %2
%5:i32 = phi %0, %4, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 13
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 3:i32, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 126
%1:i32 = var
%2:i64 = zext %1
%3:i64 = var (0000000000000000000000000000000000000000000000000000x00000000000) (n)
%4:i64 = lshrexact %3, 11:i64
%5:i64 = addnw 3:i64, %4
%6:i64 = or 4:i64, %4
%7:i64 = var (000000000000000000000000000000000000000000000000000x000000000000) (n)
%8:i64 = lshrexact %7, 12:i64
%9:i64 = or 4:i64, %8
%10:i64 = var (00000000000000000000000000000000000000000000000000000x0000000000) (n)
%11:i64 = lshrexact %10, 10:i64
%12:i64 = or 4:i64, %11
%13:i64 = addnw 5:i64, %11
%14:i64 = addnw 5:i64, %4
%15:i64 = var (00000000000000000000000000000000000000000000000000x0000000000000) (n)
%16:i64 = lshrexact %15, 13:i64
%17:i64 = subnsw 6:i64, %16
%18:i64 = subnsw 6:i64, %4
%19:i64 = phi %0, %2, %2, 9:i64, 9:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 10:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 6:i64, 6:i64, 8:i64, 7:i64, 7:i64, 7:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 5:i64, 7:i64, 8:i64, 6:i64, 6:i64, 4:i64, 5:i64, 6:i64, 6:i64, 6:i64, 5:i64, 6:i64, 3:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 6:i64, 7:i64, 7:i64, %5, %5, %6, %9, %6, %6, %9, %12, %6, %6, 4:i64, %6, %6, %13, %14, %17, %18
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 21:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2 = block 4
%3:i1 = var
%4:i32 = zext %3
%5:i32 = phi %1, 1:i32, %4, 1:i32, 1:i32
%6:i32 = phi %0, 0:i32, %5, 1:i32, 1:i32, 1:i32, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i8 = var (xxxxxx00)
%2:i8 = and 4:i8, %1
%3:i8 = or 1:i8, %2
%4:i8 = phi %0, %3, 7:i8, 7:i8, 7:i8, 7:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 14
%2 = block 13
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, %3, %3, %3, %3, 0:i8, 0:i8, %3, %3, %3, %3, %3, %3, %3
%5:i8 = phi %0, 1:i8, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 8193:i32, 1:i32
%3:i32 = or 67108864:i32, %2
%4 = block 3
%5 = block 2
%6:i1 = var
%7:i1 = phi %4, 0:i1, 0:i1, %6
%8:i32 = or 134217728:i32, %2
%9:i32 = select %7, %8, %2
%10:i32 = phi %0, %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, %2, 0:i1
%4:i8 = zext %3
%5 = block 2
%6:i8 = phi %5, %4, 0:i8
%7:i8 = phi %0, %4, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2 = block 2
%3:i32 = var (000000000000000000000000000001x0) (zn)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = select %1, %4, 0:i32
%6:i32 = phi %0, 0:i32, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, 0:i64
%3:i1 = ne 0:i64, %2
%4 = block 2
%5:i1 = var
%6 = block 6
%7:i8 = phi %6, 1:i8, 0:i8, 1:i8, 0:i8, 0:i8, 1:i8
%8:i8 = select %5, %7, 0:i8
%9:i8 = phi %4, %8, %7
%10:i8 = select %3, 0:i8, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3:i8 = var (0000000x) (n)
%4 = block 3
%5:i8 = phi %4, %3, 0:i8, %3
%6:i8 = phi %0, %2, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4 = block 31
%5:i8 = phi %4, %3, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6:i8 = phi %1, %3, %5
%7:i8 = phi %0, %6, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i32 = phi %0, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, 7:i32, 8:i32
%2:i32 = subnsw 8:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 3:i32
%4:i32 = phi %0, 1:i32, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8
%4:i8 = phi %0, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000000000xx) (n)
%2:i32 = addnw 1:i32, %1
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %0, %2, %4, 0:i32, 0:i32
%6:i5 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = var
%2:i1 = ult %0, 12:i64
%3:i64 = select %2, %0, 12:i64
%4:i64 = select %1, %3, 16:i64
%5:i1 = ult %0, %4
%6:i64 = select %5, %0, %4
%7:i64 = subnsw %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8, 0:i8, 0:i8
%4:i8 = phi %0, 0:i8, %3, %3, %3, %3
%5:i8 = shl %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i128 = phi %1, 34359738368:i128, 0:i128
%3:i128 = phi %0, 0:i128, 0:i128, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 109
%1:i64 = var (0000000000000000000000000000000000000000000000000000x00000000000) (n)
%2:i64 = lshrexact %1, 11:i64
%3:i64 = addnw 3:i64, %2
%4:i64 = or 4:i64, %2
%5:i64 = var (000000000000000000000000000000000000000000000000000x000000000000) (n)
%6:i64 = lshrexact %5, 12:i64
%7:i64 = or 4:i64, %6
%8:i64 = var (00000000000000000000000000000000000000000000000000000x0000000000) (n)
%9:i64 = lshrexact %8, 10:i64
%10:i64 = or 4:i64, %9
%11:i64 = addnw 5:i64, %9
%12:i64 = addnw 5:i64, %2
%13:i64 = var (00000000000000000000000000000000000000000000000000x0000000000000) (n)
%14:i64 = lshrexact %13, 13:i64
%15:i64 = subnsw 6:i64, %14
%16:i64 = subnsw 6:i64, %2
%17:i64 = phi %0, 10:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 6:i64, 6:i64, 8:i64, 7:i64, 7:i64, 7:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 5:i64, 7:i64, 8:i64, 6:i64, 6:i64, 4:i64, 5:i64, 6:i64, 6:i64, 6:i64, 5:i64, 6:i64, 3:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 6:i64, 7:i64, 7:i64, %3, %3, %4, %7, %4, %4, %7, %10, %4, %4, 4:i64, %4, %4, %11, %12, %15, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (000000000000xx01xxxxxxxx00000000) (zn)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5:i32 = var (000000000000000000000000xxxxxx00) (n)
%6:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%7:i32 = or %5, %6
%8:i32 = or 2752512:i32, %7
%9:i32 = or 2818048:i32, %7
%10:i32 = or 2883584:i32, %7
%11:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%12:i32 = or %7, %11
%13:i32 = or 1:i32, %12
%14:i32 = var (000000000000000000000000xxxxxx00) (n)
%15:i32 = var (000000000000xx00xxxxxxxx00000000) (zn)
%16:i32 = or %14, %15
%17:i32 = or 1:i32, %16
%18:i32 = phi %0, %4, %4, %3, %3, %8, %8, %9, %9, %10, %10, %13, %13, %17, %17, %16, %16
infer %18

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i8 = var (0000000x) (n)
%2:i8 = xor 1:i8, %1
%3:i8 = var (0000000x) (n)
%4:i8 = xor 1:i8, %3
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 0:i8
%7:i8 = phi %1, %3, %6
%8:i8 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 3
%4:i8 = phi %3, 1:i8, 0:i8, 0:i8
%5:i8 = phi %2, 1:i8, %4, %4
%6:i8 = phi %1, 1:i8, %5, %5
%7 = block 7
%8 = block 3
%9:i8 = phi %8, 0:i8, %4, %5
%10:i8 = phi %7, %9, %5, %5, %4, %4, 0:i8, 0:i8
%11:i8 = phi %0, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 59
%4:i16 = var
%5:i32 = zext %4
%6:i32 = phi %3, 1074:i32, 1041:i32, 1050:i32, 1065:i32, 1086:i32, 1077:i32, 1080:i32, 1083:i32, 1063:i32, 1057:i32, 1061:i32, 1055:i32, 2181:i32, 2148:i32, 2157:i32, 2172:i32, 2193:i32, 2184:i32, 2187:i32, 2190:i32, 2168:i32, 2162:i32, 1157:i32, 1151:i32, 1154:i32, 1173:i32, 1161:i32, 1167:i32, 2246:i32, 2240:i32, 2243:i32, 2262:i32, 2250:i32, 2256:i32, 1101:i32, 1089:i32, 1095:i32, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
%7:i32 = phi %2, %6, %5
%8:i32 = phi %1, %7, %6
%9:i32 = phi %0, %8, %5
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 17
%3 = block 13
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, %4, %4, %4, %4, 0:i8, 0:i8, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
%6:i8 = phi %1, %5, 1:i8
%7:i8 = phi %0, %6, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000x)
%1:i64 = shl %0, 32:i64
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 3:i32, 4:i32
%3:i32 = phi %0, %2, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 1:i32, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var
%3:i32 = lshr %2, 6:i32
%4:i32 = phi %1, %3, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (0000000000000000000000000000000000000000000000000000000000000x10) (zn)
%3 = block 2
%4:i64 = var (0000000000000000000000000000000000000000000000000000000000000x00) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 1:i64, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = and 7:i32, %2
%4:i32 = var (00000000000000000000000000xxxxxx) (n)
%5:i32 = or 39:i32, %4
%6:i32 = phi %1, 0:i32, %3, %5, 0:i32, 0:i32
%7:i32 = or 64:i32, %6
%8:i32 = or 128:i32, %6
%9:i32 = phi %0, %6, %7, %8, %6, %6, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 5
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5:i8 = phi %1, 0:i8, 0:i8, %4
%6:i8 = phi %0, %5, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %4, %3
%6:i8 = phi %0, %1, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 7
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3 = block 4
%4:i8 = phi %3, %2, 0:i8, %2, %2
%5:i8 = phi %0, %2, %2, %4, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i32 = shlnw %2, 16:i32
%4:i32 = phi %0, 589824:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8
%10 = block 2
%11 = block 2
%12:i32 = var (0000000000000000000000000000000x) (n)
%13:i32 = phi %10, 0:i32, %12
%14 = block 2
%15 = block 2
%16:i32 = var (0000000000000000000000000000000x) (n)
%17:i32 = phi %14, 0:i32, %16
%18:i32 = phi %1, 0:i32, %5, %9, %13, %17
%19 = block 2
%20:i32 = phi %19, 1:i32, 0:i32
%21:i32 = phi %0, %18, %20
infer %21

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %1, 0:i32, %5, %7
%9:i32 = phi %0, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = ult 8:i64, %0
%2:i64 = select %1, %0, 8:i64
%3:i1 = eq 0:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i8 = var (0000xxxx) (n)
%3:i8 = and 1:i8, %2
%4 = block 3
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 0:i8, 0:i8
%7:i8 = phi %1, %3, %6
%8:i8 = var (0000000x) (n)
%9:i8 = phi %0, %7, %7, %8, %7, %7, %7, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %3, %5
%7:i32 = var (000000000000000000000000xxxxxx00) (n)
%8:i32 = or %7, %2
%9:i32 = var (000000000000000000000000xxxxxxxx) (n)
%10:i32 = shlnw %9, 16:i32
%11:i32 = or %8, %10
%12:i32 = or 1:i32, %11
%13:i32 = phi %0, %6, %6, %11, %11, %11, %11, %11, %11, %12, %12, %12, %12, %6, %6
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i1 = var
%4:i8 = zext %3
%5 = block 2
%6:i8 = phi %5, %4, %4
%7:i8 = phi %1, %4, %6
%8:i8 = phi %0, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = var (00000000000000000000000000000xxx) (n)
%4:i32 = select %2, 0:i32, %3
%5:i32 = phi %1, %4, 2:i32
%6:i32 = phi %0, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (xxxxx000)
%2:i8 = and 24:i8, %1
%3:i8 = or 36:i8, %2
%4 = block 3
%5:i8 = phi %4, 20:i8, %3, 20:i8
%6:i8 = phi %0, %3, 36:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5:i32 = var
%6:i1 = eq 0:i32, %5
%7:i8 = select %6, 1:i8, %4
%8:i8 = phi %0, %4, %7, %4, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 2:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 3:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 59
%3:i16 = var
%4:i32 = zext %3
%5:i32 = phi %2, 1074:i32, 1041:i32, 1050:i32, 1065:i32, 1086:i32, 1077:i32, 1080:i32, 1083:i32, 1063:i32, 1057:i32, 1061:i32, 1055:i32, 2181:i32, 2148:i32, 2157:i32, 2172:i32, 2193:i32, 2184:i32, 2187:i32, 2190:i32, 2168:i32, 2162:i32, 1157:i32, 1151:i32, 1154:i32, 1173:i32, 1161:i32, 1167:i32, 2246:i32, 2240:i32, 2243:i32, 2262:i32, 2250:i32, 2256:i32, 1101:i32, 1089:i32, 1095:i32, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
%6:i32 = phi %1, %5, %4
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3
%5:i8 = phi %1, %4, 0:i8, 0:i8
%6:i8 = phi %0, %5, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 30
%1 = block 7
%2 = block 2
%3:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%4:i64 = phi %2, 1:i64, %3
%5 = block 2
%6:i1 = var
%7:i64 = zext %6
%8:i64 = phi %1, 0:i64, 0:i64, 0:i64, %4, 0:i64, %7, 0:i64
%9:i64 = phi %0, %8, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 4:i32, 3:i32, 2:i32, 1:i32, 0:i32, 5:i32
%3:i32 = phi %0, %2, 6:i32, 6:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2, %2
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 0:i32, 0:i32
%5 = block 6
%6:i32 = phi %5, 1:i32, 0:i32, 0:i32, 1:i32, 1:i32, 1:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, 0:i32, 0:i32, %2, %4, %6, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = addnw 1:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8, 0:i8
%5 = block 3
%6:i8 = var (0000000x) (n)
%7:i8 = phi %5, %6, 0:i8, 0:i8
%8:i8 = phi %1, %4, %7
%9:i8 = phi %0, 0:i8, %8, %4, %4, %7, %7, 0:i8
%10:i8 = shl %9, 1:i8
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000xxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = phi %0, 0:i64, 0:i64, 0:i64, %2, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%4:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = zext %4
%6:i64 = phi %0, 0:i64, 0:i64, 0:i64, %5, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%7:i64 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, %3, %3
%5:i64 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000)
%1:i65 = uadd.with.overflow %0, 8:i64
%2:i1 = extractvalue %1, 1:i32
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 3:i32, 3:i32, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i1 = xor 1:i1, %1
%3:i8 = zext %2
%4 = block 2
%5:i8 = phi %4, %3, 0:i8
%6:i8 = phi %0, %3, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var
%3:i32 = zext %2
%4 = block 59
%5:i32 = phi %4, 1074:i32, 1041:i32, 1050:i32, 1065:i32, 1086:i32, 1077:i32, 1080:i32, 1083:i32, 1063:i32, 1057:i32, 1061:i32, 1055:i32, 2181:i32, 2148:i32, 2157:i32, 2172:i32, 2193:i32, 2184:i32, 2187:i32, 2190:i32, 2168:i32, 2162:i32, 1157:i32, 1151:i32, 1154:i32, 1173:i32, 1161:i32, 1167:i32, 2246:i32, 2240:i32, 2243:i32, 2262:i32, 2250:i32, 2256:i32, 1101:i32, 1089:i32, 1095:i32, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, %2, %2, %2, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 10
%2:i32 = phi %1, 0:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32
%3:i32 = phi %0, 1:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 128:i32, %0
%2:i32 = shlnw %1, 2:i32
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 0:i32, 4:i32
%3 = block 3
%4:i32 = phi %3, 5:i32, 0:i32, 4:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 328:i32, 327:i32
%3:i32 = phi %0, 327:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 4:i32, 4:i32, 4:i32, %3
%5:i32 = phi %0, %4, 3:i32, 3:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 3:i32, %0
%2:i64 = select %1, 18446744073709551615:i64, 1:i64
%3:i64 = addnsw 1:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (000000000000xx000000000000000000) (zn)
%3:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%4:i32 = or %2, %3
%5:i32 = or 1:i32, %4
%6:i32 = var (000000000000000000000000xxxxxx00) (n)
%7:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%8:i32 = or %6, %7
%9:i32 = or 262144:i32, %8
%10:i32 = phi %0, %5, %5, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 2:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 2:i32, 0:i32, 6:i32
%4:i32 = phi %1, 4:i32, %3
%5:i32 = phi %0, %4, 6:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = shlnw %1, 16:i32
%3:i32 = phi %0, 589824:i32, %2
%4:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00)
%5:i32 = and 252:i32, %4
%6:i32 = var (000000000000000000000000xxxxxxxx) (n)
%7:i32 = shlnw %6, 8:i32
%8:i32 = or %5, %7
%9:i32 = or %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 15
%2:i1 = var
%3:i32 = select %2, 3039:i32, 3385:i32
%4:i32 = select %2, 4675:i32, 4371:i32
%5:i1 = var
%6:i32 = select %5, %3, 3386:i32
%7:i1 = var
%8:i32 = select %7, %3, 3386:i32
%9:i1 = var
%10:i32 = select %9, %3, 3386:i32
%11:i1 = var
%12:i32 = select %11, %3, 3386:i32
%13:i32 = phi %1, %3, %4, %3, %3, %3, %3, %3, %3, %3, %6, %8, %10, %12, %3, %3
%14:i32 = phi %0, %13, %13, %13, 4635:i32, 0:i32, %3, %3
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 2:i32, 1:i32, %2, 1:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i64 = phi %1, 0:i64, 1:i64, 2:i64, 3:i64, 4:i64, 5:i64, 6:i64, 7:i64
%3:i64 = phi %0, 0:i64, %2
%4:i64 = lshr 232:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2 = block 3
%3 = block 5
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i32 = phi %2, %4, %5, %4
%7:i1 = var
%8:i32 = select %7, 5:i32, 4:i32
%9:i32 = phi %1, 4:i32, 4:i32, 3:i32, 3:i32, %6, %8
%10:i32 = phi %0, 1:i32, 1:i32, 1:i32, %9, 1:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 6
%6:i32 = phi %5, 1:i32, 0:i32, 0:i32, 1:i32, 1:i32, 1:i32
%7 = block 2
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10:i32 = phi %7, %9, 0:i32
%11:i32 = phi %0, 0:i32, 0:i32, %2, %4, %6, %10, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 46
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4 = block 31
%5:i8 = phi %4, %3, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6:i8 = phi %1, %3, %5
%7 = block 3
%8:i8 = phi %7, %6, %5, %5
%9:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %6, %8, 0:i8, 0:i8, %8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3 = block 2
%4:i32 = phi %3, %2, 0:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i16 = and 255:i16, %0
%2:i24 = var (000000000000000x00000000) (n)
%3:i16 = trunc %2
%4:i16 = shlnw %3, 4:i16
%5:i16 = or %1, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i1 = var
%4:i1 = or %2, %3
%5:i8 = zext %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %1, %7, 0:i8, %7
%9:i8 = phi %0, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i8 = var
%2:i1 = slt %1, 0:i8
%3:i32 = select %2, 3:i32, 2:i32
%4 = block 2
%5:i32 = phi %4, 3:i32, %3
%6:i32 = phi %0, %3, %5, %5, %5, 3:i32, %3, %3, %3, %3
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 126
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i1 = var
%4:i32 = select %3, 124:i32, 172:i32
%5:i32 = select %2, %4, 76:i32
%6:i8 = var (0000000x) (n)
%7:i1 = ne 0:i8, %6
%8:i32 = select %7, 100:i32, 52:i32
%9:i8 = var (0000000x) (n)
%10:i1 = ne 0:i8, %9
%11:i1 = var
%12:i32 = select %11, 122:i32, 170:i32
%13:i32 = select %10, %12, 74:i32
%14:i8 = var (0000000x) (n)
%15:i1 = ne 0:i8, %14
%16:i32 = select %15, 98:i32, 50:i32
%17:i8 = var (0000000x) (n)
%18:i1 = ne 0:i8, %17
%19:i1 = var
%20:i32 = select %19, 123:i32, 171:i32
%21:i32 = select %18, %20, 75:i32
%22:i8 = var (0000000x) (n)
%23:i1 = ne 0:i8, %22
%24:i32 = select %23, 99:i32, 51:i32
%25:i8 = var (0000000x) (n)
%26:i1 = ne 0:i8, %25
%27:i1 = var
%28:i32 = select %27, 121:i32, 169:i32
%29:i32 = select %26, %28, 73:i32
%30:i8 = var (0000000x) (n)
%31:i1 = ne 0:i8, %30
%32:i32 = select %31, 97:i32, 49:i32
%33:i8 = var (0000000x) (n)
%34:i1 = ne 0:i8, %33
%35:i1 = var
%36:i32 = select %35, 120:i32, 168:i32
%37:i32 = select %34, %36, 72:i32
%38:i8 = var (0000000x) (n)
%39:i1 = ne 0:i8, %38
%40:i32 = select %39, 96:i32, 48:i32
%41:i8 = var (0000000x) (n)
%42:i1 = ne 0:i8, %41
%43:i1 = var
%44:i32 = select %43, 118:i32, 166:i32
%45:i32 = select %42, %44, 70:i32
%46:i8 = var (0000000x) (n)
%47:i1 = ne 0:i8, %46
%48:i32 = select %47, 94:i32, 46:i32
%49:i8 = var (0000000x) (n)
%50:i1 = ne 0:i8, %49
%51:i1 = var
%52:i32 = select %51, 119:i32, 167:i32
%53:i32 = select %50, %52, 71:i32
%54:i8 = var (0000000x) (n)
%55:i1 = ne 0:i8, %54
%56:i32 = select %55, 95:i32, 47:i32
%57:i8 = var (0000000x) (n)
%58:i1 = ne 0:i8, %57
%59:i1 = var
%60:i32 = select %59, 117:i32, 165:i32
%61:i32 = select %58, %60, 69:i32
%62:i8 = var (0000000x) (n)
%63:i1 = ne 0:i8, %62
%64:i32 = select %63, 93:i32, 45:i32
%65:i8 = var (0000000x) (n)
%66:i1 = ne 0:i8, %65
%67:i1 = var
%68:i32 = select %67, 132:i32, 180:i32
%69:i32 = select %66, %68, 84:i32
%70:i8 = var (0000000x) (n)
%71:i1 = ne 0:i8, %70
%72:i32 = select %71, 108:i32, 60:i32
%73:i8 = var (0000000x) (n)
%74:i1 = ne 0:i8, %73
%75:i1 = var
%76:i32 = select %75, 130:i32, 178:i32
%77:i32 = select %74, %76, 82:i32
%78:i8 = var (0000000x) (n)
%79:i1 = ne 0:i8, %78
%80:i32 = select %79, 106:i32, 58:i32
%81:i8 = var (0000000x) (n)
%82:i1 = ne 0:i8, %81
%83:i1 = var
%84:i32 = select %83, 131:i32, 179:i32
%85:i32 = select %82, %84, 83:i32
%86:i8 = var (0000000x) (n)
%87:i1 = ne 0:i8, %86
%88:i32 = select %87, 107:i32, 59:i32
%89:i8 = var (0000000x) (n)
%90:i1 = ne 0:i8, %89
%91:i1 = var
%92:i32 = select %91, 129:i32, 177:i32
%93:i32 = select %90, %92, 81:i32
%94:i8 = var (0000000x) (n)
%95:i1 = ne 0:i8, %94
%96:i32 = select %95, 105:i32, 57:i32
%97:i8 = var (0000000x) (n)
%98:i1 = ne 0:i8, %97
%99:i1 = var
%100:i32 = select %99, 128:i32, 176:i32
%101:i32 = select %98, %100, 80:i32
%102:i8 = var (0000000x) (n)
%103:i1 = ne 0:i8, %102
%104:i32 = select %103, 104:i32, 56:i32
%105:i8 = var (0000000x) (n)
%106:i1 = ne 0:i8, %105
%107:i1 = var
%108:i32 = select %107, 127:i32, 175:i32
%109:i32 = select %106, %108, 79:i32
%110:i8 = var (0000000x) (n)
%111:i1 = ne 0:i8, %110
%112:i32 = select %111, 103:i32, 55:i32
%113:i8 = var (0000000x) (n)
%114:i1 = ne 0:i8, %113
%115:i1 = var
%116:i32 = select %115, 126:i32, 174:i32
%117:i32 = select %114, %116, 78:i32
%118:i8 = var (0000000x) (n)
%119:i1 = ne 0:i8, %118
%120:i32 = select %119, 102:i32, 54:i32
%121:i8 = var (0000000x) (n)
%122:i1 = ne 0:i8, %121
%123:i1 = var
%124:i32 = select %123, 125:i32, 173:i32
%125:i32 = select %122, %124, 77:i32
%126:i8 = var (0000000x) (n)
%127:i1 = ne 0:i8, %126
%128:i32 = select %127, 101:i32, 53:i32
%129:i8 = var (0000000x) (n)
%130:i1 = ne 0:i8, %129
%131:i1 = var
%132:i32 = select %131, 116:i32, 164:i32
%133:i32 = select %130, %132, 68:i32
%134:i8 = var (0000000x) (n)
%135:i1 = ne 0:i8, %134
%136:i32 = select %135, 92:i32, 44:i32
%137:i8 = var (0000000x) (n)
%138:i1 = ne 0:i8, %137
%139:i1 = var
%140:i32 = select %139, 114:i32, 162:i32
%141:i32 = select %138, %140, 66:i32
%142:i8 = var (0000000x) (n)
%143:i1 = ne 0:i8, %142
%144:i32 = select %143, 90:i32, 42:i32
%145:i8 = var (0000000x) (n)
%146:i1 = ne 0:i8, %145
%147:i1 = var
%148:i32 = select %147, 115:i32, 163:i32
%149:i32 = select %146, %148, 67:i32
%150:i8 = var (0000000x) (n)
%151:i1 = ne 0:i8, %150
%152:i32 = select %151, 91:i32, 43:i32
%153:i8 = var (0000000x) (n)
%154:i1 = ne 0:i8, %153
%155:i1 = var
%156:i32 = select %155, 113:i32, 161:i32
%157:i32 = select %154, %156, 65:i32
%158:i8 = var (0000000x) (n)
%159:i1 = ne 0:i8, %158
%160:i32 = select %159, 89:i32, 41:i32
%161:i8 = var (0000000x) (n)
%162:i1 = ne 0:i8, %161
%163:i1 = var
%164:i32 = select %163, 112:i32, 160:i32
%165:i32 = select %162, %164, 64:i32
%166:i8 = var (0000000x) (n)
%167:i1 = ne 0:i8, %166
%168:i32 = select %167, 88:i32, 40:i32
%169:i8 = var (0000000x) (n)
%170:i1 = ne 0:i8, %169
%171:i1 = var
%172:i32 = select %171, 111:i32, 159:i32
%173:i32 = select %170, %172, 63:i32
%174:i8 = var (0000000x) (n)
%175:i1 = ne 0:i8, %174
%176:i32 = select %175, 87:i32, 39:i32
%177:i8 = var (0000000x) (n)
%178:i1 = ne 0:i8, %177
%179:i32 = select %178, 158:i32, 62:i32
%180:i8 = var (0000000x) (n)
%181:i1 = ne 0:i8, %180
%182:i32 = select %181, 86:i32, 38:i32
%183:i32 = select %178, 157:i32, 61:i32
%184:i8 = var (0000000x) (n)
%185:i1 = ne 0:i8, %184
%186:i32 = select %185, 85:i32, 37:i32
%187:i8 = var (0000000x) (n)
%188:i1 = ne 0:i8, %187
%189:i32 = select %188, 28:i32, 24:i32
%190:i8 = var
%191:i1 = eq 2:i8, %190
%192:i32 = select %191, 13:i32, 11:i32
%193:i8 = var
%194:i1 = eq 1:i8, %193
%195:i32 = select %194, 4:i32, 2:i32
%196:i8 = var
%197:i1 = eq 4:i8, %196
%198:i1 = var
%199:i32 = select %198, 6:i32, 0:i32
%200:i32 = select %197, 5:i32, %199
%201:i8 = var (0000000x) (n)
%202:i1 = eq 0:i8, %201
%203:i32 = select %202, %183, 109:i32
%204:i1 = var
%205:i1 = var
%206:i1 = or %204, %205
%207:i1 = var
%208:i32 = var (000000000000000000000000000xxx1x) (zn)
%209:i32 = select %207, %208, 15:i32
%210 = block 2
%211:i32 = phi %210, 1:i32, 9:i32
%212:i32 = select %206, %209, %211
%213:i32 = phi %0, 35:i32, 33:i32, 22:i32, 21:i32, 148:i32, %5, 172:i32, %8, 146:i32, %13, 170:i32, %16, 147:i32, %21, 171:i32, %24, 145:i32, %29, 169:i32, %32, 144:i32, %37, 168:i32, %40, 142:i32, %45, 166:i32, %48, 143:i32, %53, 167:i32, %56, 141:i32, %61, 165:i32, %64, 156:i32, %69, 180:i32, %72, 154:i32, %77, 178:i32, %80, 155:i32, %85, 179:i32, %88, 153:i32, %93, 177:i32, %96, 152:i32, %101, 176:i32, %104, 151:i32, %109, 175:i32, %112, 150:i32, %117, 174:i32, %120, 149:i32, %125, 173:i32, %128, 140:i32, %133, 164:i32, %136, 138:i32, %141, 162:i32, %144, 139:i32, %149, 163:i32, %152, 137:i32, %157, 161:i32, %160, 136:i32, %165, 160:i32, %168, 135:i32, %173, 159:i32, %176, 134:i32, %179, %182, 133:i32, %183, %186, 36:i32, 34:i32, 32:i32, %189, 30:i32, 31:i32, 26:i32, 27:i32, 25:i32, 29:i32, 23:i32, 20:i32, 20:i32, 10:i32, 16:i32, %192, 11:i32, 12:i32, 18:i32, 7:i32, %195, 2:i32, 3:i32, %200, 17:i32, 8:i32, %203, %212
infer %213

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i32 = or 256:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i16 = zext %1
%3:i16 = shlnw %2, 8:i16
%4:i16 = phi %0, 0:i16, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3 = block 5
%4:i8 = phi %3, %2, %2, %2, %2, 1:i8
%5:i8 = phi %0, %2, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 14
%2:i32 = phi %1, 3387:i32, 3387:i32, 4376:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32, 3387:i32
%3:i32 = phi %0, %2, %2, %2, 4637:i32, 0:i32, 3387:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 17
%2 = block 13
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, %3, %3, %3, %3, 0:i8, 0:i8, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 21:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i64 = phi %1, 4:i64, 8:i64, 4:i64, 16:i64
%3:i64 = phi %0, %2, 16:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i24 = var
%2:i24 = and 255:i24, %1
%3:i32 = zext %2
%4 = block 2
%5:i24 = var (0000000000000000xxxxxxxx) (n)
%6:i32 = zext %5
%7:i24 = var (0000000000000000xxxxxxxx) (n)
%8:i32 = zext %7
%9:i32 = phi %4, %6, %8
%10:i32 = phi %0, %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i72 = var
%2:i8 = trunc %1
%3:i8 = lshr %2, 7:i8
%4 = block 2
%5:i8 = phi %4, %3, %3
%6:i8 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = phi %0, 18446744073709551615:i64, %1
%3:i64 = ctlz %2
%4:i64 = subnsw 64:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 7
%2 = block 5
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, %3, %3, 0:i8, 0:i8, 0:i8, 0:i8
%5:i8 = var
%6:i1 = slt %5, 0:i8
%7:i8 = select %6, %4, 0:i8
%8:i8 = phi %0, %4, %4, %7, %4, %4, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 2:i32, 0:i32
%4:i1 = var
%5:i32 = select %4, 2:i32, 0:i32
%6:i32 = phi %1, %3, %5, %5
%7:i32 = phi %0, %6, 1:i32, 0:i32, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 65535:i32, %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i8 = var
%2:i1 = slt %1, 0:i8
%3:i32 = select %2, 3:i32, 2:i32
%4 = block 2
%5:i32 = phi %4, 3:i32, %3
%6:i32 = phi %0, %3, %5, %5, %5, 3:i32, %3
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 3:i32
%4:i1 = var
%5:i32 = zext %4
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, %6, %6, %5, 4:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = select %1, 2:i32, 0:i32
%3:i32 = zext %1
%4 = block 2
%5:i32 = phi %4, 4:i32, 3:i32
%6:i32 = phi %0, %2, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000001x) (zn)
%3 = block 2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 4:i64, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i1 = var
%2:i32 = select %1, 3039:i32, 3385:i32
%3:i32 = select %1, 4675:i32, 4371:i32
%4:i32 = var
%5:i1 = eq 0:i32, %4
%6:i32 = select %5, %2, 3386:i32
%7:i32 = var
%8:i1 = eq 0:i32, %7
%9:i32 = select %8, %2, 3386:i32
%10:i32 = var
%11:i1 = eq 0:i32, %10
%12:i32 = select %11, %2, 3386:i32
%13:i32 = var
%14:i1 = eq 0:i32, %13
%15:i32 = select %14, %2, 3386:i32
%16:i32 = phi %0, %2, %2, %3, %2, %2, %2, %2, %2, %2, %2, %6, %9, %12, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = add 18446744073709551607:i64, %0
%2:i1 = ult %1, 12:i64
%3:i64 = select %2, %1, 12:i64
%4:i1 = ult 16:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i16 = var
%2:i32 = zext %1
%3 = block 2
%4:i16 = var
%5:i32 = zext %4
%6:i32 = phi %3, %5, 0:i32
%7 = block 4
%8:i16 = var
%9:i32 = zext %8
%10:i16 = var
%11:i32 = zext %10
%12:i32 = phi %7, %9, %11, 0:i32, 0:i32
%13 = block 2
%14:i16 = var
%15:i32 = zext %14
%16:i32 = phi %13, %15, 0:i32
%17 = block 2
%18:i16 = var
%19:i32 = zext %18
%20:i32 = phi %17, %19, 0:i32
%21:i32 = phi %0, %2, %6, %6, %12, %12, %16, %16, %20, %20
infer %21

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5 = block 5
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %5, %4, %4, %4, %4, %7
%9:i8 = phi %0, %4, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var (00000000000000xxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 7:i32, %2
%4:i32 = phi %0, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 15
%5:i32 = var (000000000000000000000000000000xx) (n)
%6:i32 = phi %3, 1:i32, %5
%7:i32 = phi %2, %6, 0:i32
%8:i32 = phi %1, 4:i32, %7
%9 = block 2
%10 = block 2
%11:i32 = phi %10, %8, 4:i32
%12:i32 = phi %9, %11, %6
%13:i32 = phi %0, %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, %2, %3
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 3:i32, 1:i32
%4:i32 = phi %1, 2:i32, %3, %3, 3:i32
%5:i32 = phi %0, 0:i32, 0:i32, 0:i32, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 14
%2:i1 = var
%3:i32 = select %2, 3039:i32, 3385:i32
%4:i32 = select %2, 4675:i32, 4371:i32
%5:i1 = var
%6:i32 = select %5, %3, 3386:i32
%7:i1 = var
%8:i32 = select %7, %3, 3386:i32
%9:i1 = var
%10:i32 = select %9, %3, 3386:i32
%11:i1 = var
%12:i32 = select %11, %3, 3386:i32
%13:i32 = phi %1, %3, %3, %4, %3, %3, %3, %3, %3, %3, %3, %6, %8, %10, %12
%14:i32 = phi %0, %13, %13, %13, 4635:i32, 0:i32, %3
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, 0:i32, %3
%5:i32 = phi %0, 2:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, 1:i32, 1:i32, %3, %3, 1:i32, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %5
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 4:i32, 5:i32, 7:i32, 16:i32, 6:i32, 8:i32
%3:i32 = phi %0, %2, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3 = block 4
%4:i8 = var
%5:i32 = zext %4
%6:i8 = var
%7:i32 = zext %6
%8:i32 = phi %3, 16:i32, %5, %7, 8:i32
%9:i32 = phi %0, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, %5, 1:i8
%7:i8 = phi %2, 0:i8, %6
%8:i8 = phi %1, %7, %6
%9:i8 = phi %0, 0:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = var (0000000x) (n)
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %1, %2, %4, %4, %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = and %5, %7
%9:i8 = phi %0, %8, %5, %5, %5
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i48 = var (0000000000000000000000000000000000000xxxxxxxx000) (n)
%2:i48 = lshr 9930031760644:i48, %1
%3:i8 = trunc %2
%4:i8 = phi %0, 5:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = var (0000000000000000000000000000111x) (zn)
%2:i32 = shl %0, %1
%3:i32 = var (000000000000000000000000000xxxxx) (n)
%4:i32 = shlnw %3, 8:i32
%5:i32 = or %2, %4
%6:i8 = var
%7:i32 = zext %6
%8:i32 = or %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1 = block 2
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = phi %0, %2, %2, %2, %2, %2, %2, %2, %2, %2, 0:i32, 0:i32, 0:i32, 0:i32
%4:i16 = trunc %3
%5:i16 = shl %4, 3:i16
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000000000x0) (n)
%2:i32 = phi %0, 1:i32, %1, 3:i32, 4:i32
%3:i24 = trunc %2
%4:i24 = shlnw %3, 16:i24
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 5:i32
%3:i32 = phi %0, 5:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1 = block 6
%2:i32 = phi %1, 2:i32, 2:i32, 1:i32, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var
%2:i1 = eq 2:i32, %1
%3:i1 = var
%4:i32 = select %3, 0:i32, 2:i32
%5:i32 = select %2, 1:i32, %4
%6 = block 2
%7:i32 = phi %6, 1:i32, 2:i32
%8:i32 = phi %0, 2:i32, 0:i32, 0:i32, %5, 1:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = var
%3:i1 = or %1, %2
%4:i1 = var
%5:i32 = var (00000000000000000000000000001xx0) (zn)
%6:i32 = var (00000000000000000000000000000xx0) (n)
%7:i32 = select %4, %5, %6
%8:i32 = or 128:i32, %7
%9:i32 = select %3, %8, %7
%10:i32 = var
%11:i1 = ne 0:i32, %10
%12:i32 = or 16:i32, %9
%13:i32 = select %11, %12, %9
%14:i32 = phi %0, %9, %9, %9, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 33
%2 = block 2
%3:i1 = var
%4:i64 = zext %3
%5:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i64 = and 1:i64, %5
%7:i64 = phi %1, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %4, %6
%8 = block 4
%9:i64 = phi %8, 1:i64, 0:i64, 0:i64, 0:i64
%10:i64 = phi %0, %7, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 4:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 5:i32, 0:i32, 4:i32
%3 = block 3
%4:i32 = phi %3, 0:i32, 4:i32, 4:i32
%5:i32 = phi %0, %2, %4, 4:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxx0000)
%4:i32 = phi %0, %2, %3
%5:i32 = urem 1048576:i32, %4
%6:i32 = subnsw 1048576:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1:i1 = var
%2:i32 = select %1, 3039:i32, 3385:i32
%3:i32 = select %1, 4675:i32, 4371:i32
%4:i32 = var
%5:i1 = eq 0:i32, %4
%6:i32 = select %5, %2, 3386:i32
%7:i32 = var
%8:i1 = eq 0:i32, %7
%9:i32 = select %8, %2, 3386:i32
%10:i32 = var
%11:i1 = eq 0:i32, %10
%12:i32 = select %11, %2, 3386:i32
%13:i32 = var
%14:i1 = eq 0:i32, %13
%15:i32 = select %14, %2, 3386:i32
%16:i32 = phi %0, %2, %3, %2, %2, %2, %2, %2, %2, %2, %6, %9, %12, %15, %2, %2
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i16 = zext %1
%3:i16 = phi %0, 0:i16, %2
%4 = block 2
%5:i16 = var (000000000000000x) (n)
%6:i16 = shlnw %5, 8:i16
%7:i16 = phi %4, 0:i16, %6
%8:i16 = or %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 1:i32, 0:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var
%2:i32 = zext %1
%3 = block 59
%4:i32 = phi %3, 1074:i32, 1041:i32, 1050:i32, 1065:i32, 1086:i32, 1077:i32, 1080:i32, 1083:i32, 1063:i32, 1057:i32, 1061:i32, 1055:i32, 2181:i32, 2148:i32, 2157:i32, 2172:i32, 2193:i32, 2184:i32, 2187:i32, 2190:i32, 2168:i32, 2162:i32, 1157:i32, 1151:i32, 1154:i32, 1173:i32, 1161:i32, 1167:i32, 2246:i32, 2240:i32, 2243:i32, 2262:i32, 2250:i32, 2256:i32, 1101:i32, 1089:i32, 1095:i32, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000xxxxxxx) (n)
%1:i32 = addnsw 4294967252:i32, %0
%2:i1 = ult 2:i32, %1
%3 = block 2
%4:i1 = var
%5 = block 3
%6:i32 = var (00000000000000000000000000xxx0x0) (n)
%7:i32 = select %4, %6, 10:i32
%8:i32 = phi %3, 48:i32, %7
%9:i32 = select %2, %8, 10:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = addnw 1:i64, %2
%4:i64 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = addnw 1:i64, %4
%6:i64 = phi %1, %3, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, %5, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5 = block 3
%6 = block 5
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, %4, %4, %4, %4, %7
%9:i8 = phi %5, %4, %8, %8
%10:i8 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000x0000000000xx0000xx) (n)
%3:i32 = var (0000000000000x0000000000xx0000xx) (n)
%4:i32 = var (0000000000000x00000000000x0000xx) (n)
%5:i32 = phi %1, %2, %3, %4
%6:i32 = or 256:i32, %5
%7:i32 = phi %0, %6, %5
%8:i1 = ult 2097151:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5:i1 = var
%6:i1 = xor 1:i1, %5
%7:i8 = zext %6
%8:i8 = phi %0, %4, %4, %4, %4, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000x00000000000000000000000000) (n)
%2:i32 = lshrexact %1, 26:i32
%3:i8 = trunc %2
%4:i8 = phi %0, 1:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4 = block 2
%5 = block 4
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, %6, 1:i32
%8:i32 = phi %1, %3, %7
%9 = block 2
%10:i32 = phi %9, 1:i32, %8
%11:i32 = phi %0, 1:i32, 1:i32, 1:i32, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = phi %0, %1, 0:i64
%3:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = phi %0, %3, 1:i64
%5:i64 = addnsw 18446744073709551615:i64, %4
%6:i64 = addnsw %2, %5
%7:i64 = urem %6, %4
%8:i64 = subnsw %6, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = var
%3:i8 = or %1, %2
%4:i8 = and 1:i8, %3
%5 = block 2
%6:i8 = var (0000000x) (n)
%7 = block 3
%8:i8 = var (0000000x) (n)
%9:i8 = phi %5, %6, %8
%10:i8 = or %9, %4
%11:i8 = phi %0, %4, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, 1:i8, 0:i8, 0:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 11:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i64 = var
%2:i64 = add 18446744073709551615:i64, %1
%3:i64 = phi %0, %2, %1, %1, 4:i64, 5:i64, %1
%4:i64 = add 18446744073709551614:i64, %3
%5:i1 = ult %3, %4
%6:i64 = select %5, %3, %4
%7:i64 = sub %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = var (00000000000000000000000000000x10) (zn)
%3:i32 = var (00000000000000000000000000000x00) (n)
%4:i32 = select %1, %2, %3
%5:i32 = or 1:i32, %4
%6:i32 = phi %0, 0:i32, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (n)
%2:i64 = phi %0, 0:i64, 2:i64, 2:i64, 2:i64, 2:i64, 2:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %1, 0:i64, 0:i64, 0:i64, 0:i64
%3:i64 = mulnuw 40:i64, %2
%4:i64 = sdivexact %3, 40:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var
%2:i1 = eq 20:i16, %1
%3:i1 = var
%4:i32 = select %3, 0:i32, 2:i32
%5:i32 = select %2, 1:i32, %4
%6 = block 3
%7:i8 = var
%8:i8 = and 1:i8, %7
%9:i32 = zext %8
%10:i32 = phi %0, %5, %9, 1:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2 = block 2
%3:i32 = var (000000000000000000000000000001x0) (zn)
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, %3, %4
%6:i32 = select %1, %5, 0:i32
%7:i32 = phi %0, 0:i32, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 53
%2 = block 2
%3:i64 = phi %2, 41:i64, 0:i64
%4:i64 = phi %1, 117:i64, 116:i64, 115:i64, 114:i64, 113:i64, 112:i64, 111:i64, 110:i64, 39:i64, 43:i64, 36:i64, 505:i64, 37:i64, 40:i64, 38:i64, 35:i64, 237:i64, 236:i64, 235:i64, 234:i64, 233:i64, 232:i64, 231:i64, 230:i64, 23:i64, 29:i64, 20:i64, 504:i64, 21:i64, 24:i64, 22:i64, 19:i64, 245:i64, 244:i64, 243:i64, 242:i64, 241:i64, 240:i64, 239:i64, 238:i64, 8:i64, 6:i64, 14:i64, 45:i64, 503:i64, 502:i64, 501:i64, 500:i64, 6:i64, 6:i64, 8:i64, 8:i64, %3
%5 = block 33
%6:i64 = phi %5, 117:i64, 116:i64, 115:i64, 114:i64, 113:i64, 112:i64, 111:i64, 110:i64, 39:i64, 43:i64, 36:i64, 44:i64, 37:i64, 40:i64, 38:i64, 35:i64, 237:i64, 236:i64, 235:i64, 234:i64, 233:i64, 232:i64, 231:i64, 230:i64, 23:i64, 29:i64, 20:i64, 30:i64, 21:i64, 24:i64, 22:i64, 19:i64, 0:i64
%7:i64 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 17
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = add 18446744073709551607:i64, %0
%2:i1 = var
%3:i1 = ult %1, 12:i64
%4:i64 = select %3, %1, 12:i64
%5:i64 = select %2, %4, 16:i64
%6:i1 = ult %1, %5
%7:i64 = select %6, %1, %5
%8:i64 = subnsw %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 4:i32, 1:i32, 1:i32
%3:i32 = phi %0, 4:i32, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 2:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %3, %5, %2
%7:i8 = phi %0, %2, %2, %6, %2, %2
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 4:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 128:i64, 0:i64
%3:i64 = or 256:i64, %2
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2
%4:i8 = zext %3
%5 = block 3
%6:i8 = phi %5, %4, 0:i8, %4
%7:i8 = phi %0, %4, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = var (0xxxxxxx) (n)
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5 = block 3
%6:i8 = var (0xxxxxxx) (n)
%7:i8 = and 1:i8, %6
%8:i8 = phi %5, %7, 0:i8, 0:i8
%9:i8 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i48 = var (000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000) (n)
%2:i48 = lshr 94490132488:i48, %1
%3:i16 = trunc %2
%4:i16 = phi %0, 15:i16, 17:i16, 6:i16, 3:i16, %3, 10:i16
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %5
%7 = block 2
%8:i8 = phi %7, %3, %5
%9:i8 = phi %0, %6, %8, %6, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 26:i32, 22:i32
%3:i32 = addnw 4:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i1 = var
%2:i32 = select %1, 3:i32, 2:i32
%3 = block 2
%4:i32 = phi %3, 3:i32, %2
%5:i32 = phi %0, %2, %4, %4, %4, 3:i32, %2, %2, %2, %2
%6:i8 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, %5, 0:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, %2, 0:i8
%5 = block 2
%6:i8 = phi %5, %2, 1:i8
%7 = block 3
%8:i8 = phi %7, %2, %2, 1:i8
%9 = block 2
%10:i8 = phi %9, %2, 1:i8
%11 = block 2
%12:i8 = phi %11, %2, 1:i8
%13:i8 = phi %0, %2, %2, %4, %2, %6, %8, %10, %12, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 15
%2:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%3:i32 = phi %1, %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = lshr %1, 2:i64
%3:i64 = addnw 1:i64, %2
%4:i64 = var
%5:i64 = lshr %4, 2:i64
%6:i64 = addnw 1:i64, %5
%7:i64 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = cttz %1
%3:i32 = addnw 33:i32, %2
%4:i32 = var
%5:i32 = cttz %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, 0:i32, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000xxxx) (n)
%2:i8 = trunc %1
%3:i8 = or 48:i8, %2
%4:i8 = phi %0, %3, 0:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var (0xxxxxxx) (n)
%2:i8 = and 1:i8, %1
%3:i8 = xor 1:i8, %2
%4:i8 = phi %0, 0:i8, 0:i8, %3, 0:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1:i32 = var (0000000000000000000xxxxxxxxxxxxx) (n)
%2:i1 = ult 26:i32, %1
%3:i32 = addnsw 4294967269:i32, %1
%4:i32 = select %2, %3, 0:i32
%5:i32 = phi %0, 0:i32, 0:i32, %4, 0:i32, 0:i32, %4, 0:i32, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i24 = var (0000000000000000xxxxxxxx) (n)
%2:i32 = zext %1
%3:i24 = var (0000000000000000xxxxxxxx) (n)
%4:i32 = zext %3
%5:i32 = phi %0, %2, %4
%6:i24 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000xxxxx) (zn)
%1:i16 = var (00000000xxxxxxxx) (n)
%2:i32 = zext %1
%3:i32 = addnw %0, %2
%4:i32 = addnsw 4294967295:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 3
%2 = block 5
%3:i32 = var (000000000000000000000000000000x0) (n)
%4:i32 = phi %2, 1:i32, 1:i32, 1:i32, 0:i32, %3
%5:i1 = var
%6:i32 = select %5, 2:i32, 0:i32
%7:i32 = phi %1, %4, 0:i32, %6
%8:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %7, 1:i32, 1:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i8 = phi %1, 0:i8, 2:i8, 3:i8, 0:i8, 0:i8
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %0, %2, 2:i8, 0:i8, 3:i8, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 9
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, %3, %3, 0:i8
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 253:i32, 250:i32
%3:i32 = phi %0, %2, 250:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000xxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = phi %0, 0:i64, 0:i64, 0:i64, %2, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%4:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = zext %4
%6:i64 = phi %0, 0:i64, 0:i64, 0:i64, %5, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%7:i64 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, 1:i8, 0:i8, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, %2, %2, 2:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 1:i32, %7
%9:i32 = phi %0, 0:i32, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = and 255:i32, %1
%3:i32 = addnw 267:i32, %2
%4:i32 = addnw 229:i32, %2
%5:i32 = addnw 221:i32, %2
%6:i32 = phi %0, %3, %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 5
%2:i32 = phi %1, 232:i32, 233:i32, 234:i32, 234:i32, 234:i32
%3:i32 = phi %0, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, %2, 230:i32, 230:i32, 230:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 14
%2:i32 = phi %1, 0:i32, 0:i32, 2:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, %2, %2, 3:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i64 = select %2, 8:i64, 0:i64
%4:i64 = phi %1, 0:i64, 0:i64, 0:i64, %3
%5 = block 2
%6:i64 = phi %5, %4, 0:i64
%7:i64 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 13
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2, %2, %2, %2, 0:i32, 0:i32
%4:i32 = or 226:i32, %3
%5:i32 = phi %0, 226:i32, %4, 228:i32, 228:i32, 228:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var
%4:i8 = lshr %3, 7:i8
%5:i8 = phi %2, %4, %4
%6:i8 = phi %1, %5, %4
%7:i8 = phi %0, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i64 = shlnw %1, 4:i64
%3:i64 = phi %0, 16:i64, %2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = shlnw %4, 4:i64
%6:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%7:i64 = shlnw %6, 3:i64
%8:i64 = or %5, %7
%9:i64 = addnsw %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, 1:i32, %2, %4, %6, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%1:i64 = ctlz %0
%2:i64 = addnw 4294967240:i64, %1
%3:i32 = trunc %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 31
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 46
%1 = block 2
%2 = block 17
%3:i8 = phi %2, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8
%4 = block 16
%5:i8 = phi %4, %3, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6:i8 = phi %1, %3, %5
%7 = block 3
%8:i8 = phi %7, %6, %5, %5
%9:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %6, %8, 0:i8, 0:i8, %8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i64 = shlnw %1, 4:i64
%3:i64 = phi %0, 16:i64, %2
%4:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = mulnw 48:i64, %4
%6:i64 = phi %0, %5, 0:i64
%7:i64 = addnsw %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = phi %0, 2:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 4:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 409:i32, 380:i32
%3:i37 = var (000000000000000000000000000000000000x) (n)
%4:i1 = ne 0:i37, %3
%5:i32 = select %4, 380:i32, %2
%6:i32 = phi %0, %2, %2, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (xxxxx000)
%2:i8 = and 24:i8, %1
%3:i8 = or 36:i8, %2
%4:i8 = phi %0, 20:i8, %3, 20:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i16 = zext %1
%3:i16 = shlnw %2, 8:i16
%4:i16 = phi %0, %3, 0:i16, 0:i16
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4:i32 = phi %0, %1, 0:i32, %2, %3
%5:i32 = and 4293918720:i32, %4
%6:i32 = sub %4, %5
%7 = block 2
%8:i32 = var (000000000000000000000000xxxxxxxx) (n)
%9:i32 = shlnw %8, 4:i32
%10:i32 = var
%11:i32 = var
%12:i32 = add %10, %11
%13:i32 = phi %7, %9, %12
%14:i32 = urem %6, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, %3, %3, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, %4, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 4:i32
%3:i32 = phi %0, 0:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 314
%1:i32 = phi %0, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 0:i32, 1:i32, 1:i32, 1:i32, 4294967295:i32, 4294967295:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 0:i32, 0:i32, 0:i32, 0:i32, 4294967295:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32
%2:i32 = addnw 1:i32, %1
%3:i24 = var (0000000000000000xxxxxxxx) (n)
%4:i24 = and 1:i24, %3
%5:i32 = zext %4
%6:i32 = add %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 109
%3:i64 = var (0000000000000000000000000000000000000000000000000000000000000xxx) (zn)
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000010x) (zn)
%5:i64 = var (000000000000000000000000000000000000000000000000000000000000010x) (zn)
%6:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%7:i64 = or 4:i64, %6
%8:i64 = addnw 5:i64, %6
%9:i64 = var (00000000000000000000000000000000000000000000000000000000000001xx) (zn)
%10:i64 = var (00000000000000000000000000000000000000000000000000000000000001xx) (zn)
%11:i64 = var (00000000000000000000000000000000000000000000000000000000000001xx) (zn)
%12:i64 = phi %2, 10:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 6:i64, 6:i64, 8:i64, 7:i64, 7:i64, 7:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 5:i64, 7:i64, 8:i64, 6:i64, 6:i64, 4:i64, 5:i64, 6:i64, 6:i64, 6:i64, 5:i64, 6:i64, 3:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 4:i64, 4:i64, 5:i64, 5:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 5:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 7:i64, 6:i64, 6:i64, 7:i64, 7:i64, %3, %3, %4, %5, %4, %4, %5, %7, %4, %4, 4:i64, %4, %4, %8, %9, %10, %11
%13 = block 76
%14:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%15:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%16:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%17:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%18:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%19:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%20:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%21:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%22:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%23:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%24:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%25:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%26:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%27:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%28:i64 = phi %13, %14, 6:i64, %14, %14, 5:i64, %14, %14, 5:i64, 4:i64, %14, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, %14, 4:i64, %14, 4:i64, 4:i64, %14, %14, 3:i64, 3:i64, %14, %14, %14, 3:i64, %14, 3:i64, 2:i64, %14, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 2:i64, 2:i64, 2:i64, 2:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 9:i64, 9:i64, %14, %14, %14, %15, %16, %17, %18, %19, %20, %21, %22, %23, %24, %25, %26, %27, 7:i64
%29:i64 = phi %1, %12, %28
%30 = block 22
%31:i64 = phi %30, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 6:i64, 6:i64, 5:i64, 3:i64, 5:i64, 3:i64, 5:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, %7, 5:i64, %8, 6:i64
%32:i64 = phi %0, %29, %28, %31
infer %32

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i64 = var
%3:i64 = udiv %2, 9:i64
%4:i64 = udiv %2, 5:i64
%5:i64 = udiv %2, 3:i64
%6:i64 = phi %1, %3, %4, %5, 0:i64
%7 = block 4
%8:i64 = phi %1, 9:i64, 5:i64, 3:i64, 0:i64
%9:i64 = phi %7, %6, %8, %8, %8
%10:i64 = phi %0, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5 = block 2
%6:i8 = phi %5, 0:i8, 1:i8
%7 = block 2
%8:i8 = phi %7, 0:i8, 1:i8
%9:i8 = phi %0, %2, %4, %6, %8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, 1:i8, 0:i8, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 12:i64
%4:i64 = subnsw 1537228672809129301:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 1:i8, 0:i8
%4:i8 = phi %0, %3, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 13:i32, 14:i32, 15:i32
%3:i32 = and 7:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 53
%2:i64 = phi %1, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 14:i64, 45:i64, 14:i64, 45:i64, 0:i64
%3 = block 129
%4:i64 = phi %3, 0:i64, 221:i64, 220:i64, 219:i64, 218:i64, 217:i64, 216:i64, 215:i64, 214:i64, 213:i64, 212:i64, 211:i64, 210:i64, 209:i64, 208:i64, 207:i64, 206:i64, 205:i64, 204:i64, 203:i64, 202:i64, 201:i64, 200:i64, 199:i64, 198:i64, 197:i64, 196:i64, 195:i64, 194:i64, 193:i64, 192:i64, 191:i64, 190:i64, 189:i64, 188:i64, 187:i64, 186:i64, 185:i64, 184:i64, 183:i64, 182:i64, 181:i64, 180:i64, 179:i64, 178:i64, 177:i64, 176:i64, 175:i64, 174:i64, 173:i64, 172:i64, 171:i64, 170:i64, 169:i64, 168:i64, 167:i64, 166:i64, 165:i64, 164:i64, 163:i64, 162:i64, 161:i64, 160:i64, 159:i64, 158:i64, 157:i64, 156:i64, 155:i64, 154:i64, 153:i64, 152:i64, 151:i64, 150:i64, 149:i64, 148:i64, 147:i64, 146:i64, 145:i64, 144:i64, 143:i64, 142:i64, 141:i64, 140:i64, 139:i64, 138:i64, 137:i64, 136:i64, 135:i64, 134:i64, 133:i64, 132:i64, 131:i64, 130:i64, 129:i64, 128:i64, 127:i64, 126:i64, 117:i64, 116:i64, 115:i64, 114:i64, 113:i64, 112:i64, 111:i64, 110:i64, 39:i64, 43:i64, 36:i64, 505:i64, 37:i64, 40:i64, 38:i64, 35:i64, 237:i64, 236:i64, 235:i64, 234:i64, 233:i64, 232:i64, 231:i64, 230:i64, 23:i64, 29:i64, 20:i64, 504:i64, 21:i64, 24:i64, 22:i64, 19:i64
%5:i64 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 4
%2:i32 = phi %1, 232:i32, 233:i32, 234:i32, 234:i32
%3:i32 = phi %0, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, %2, 230:i32, 230:i32, 230:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i64 = var (000000000000000000000000000000000000000000000000000000000000x000) (n)
%4 = block 2
%5:i64 = phi %4, %3, 0:i64
%6:i64 = phi %1, %3, %5
%7:i64 = phi %0, %6, %5
%8:i32 = trunc %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 3
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %3, %4, 1:i32
%6:i1 = var
%7:i32 = select %6, 1:i32, 2:i32
%8:i32 = phi %1, %5, %7
%9:i32 = phi %0, %8, 1:i32, 0:i32, 1:i32, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i1 = ne 0:i64, %1
%3:i32 = select %2, 0:i32, 2:i32
%4 = block 2
%5 = block 5
%6:i32 = phi %5, 2:i32, 0:i32, 0:i32, 0:i32, 0:i32
%7:i32 = phi %4, %6, 2:i32
%8:i32 = phi %0, %3, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, 0:i1, 1:i1, %2
%4:i32 = select %3, 7:i32, 5:i32
%5 = block 6
%6:i1 = var
%7 = block 4
%8:i32 = var (0000000000000000000000000000xxx0) (n)
%9:i32 = select %6, %8, 9:i32
%10 = block 2
%11:i1 = var
%12:i32 = select %11, 1:i32, 4:i32
%13:i1 = var
%14:i32 = var (0000000000000000000000000000xxx0) (n)
%15:i32 = select %13, 3:i32, %14
%16:i32 = phi %5, 0:i32, %9, 2:i32, %12, %15, 0:i32
%17:i32 = phi %0, %4, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2:i64 = var
%3:i64 = var
%4:i64 = phi %1, %2, %3, %3, 4:i64, 5:i64, %3
%5:i64 = var
%6:i64 = sub %4, %5
%7:i64 = phi %0, %4, %4, %4, %6
%8:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (znp)
%9:i64 = sub %7, %8
%10:i1 = ult %7, %9
%11:i64 = select %10, %7, %9
%12:i64 = sub %7, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000000xxx) (n)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = addnw %1, %2
%4:i1 = var
%5:i32 = zext %4
%6:i32 = addnw %3, %5
%7 = block 2
%8:i1 = var
%9:i32 = select %8, 1:i32, 2:i32
%10:i32 = phi %7, 1:i32, %9
%11:i32 = phi %0, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000000000000000xxxxx) (n)
%1:i64 = addnsw 18446744073709551611:i64, %0
%2:i64 = shl 1:i64, %1
%3:i64 = add 4096:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, %2, 1:i8
%5 = block 3
%6:i8 = phi %5, %2, %2, 1:i8
%7 = block 2
%8:i8 = phi %7, %2, 1:i8
%9 = block 2
%10:i8 = phi %9, %2, 1:i8
%11:i8 = phi %0, %2, %2, 0:i8, %2, %4, %6, %8, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5 = block 2
%6:i8 = phi %5, 0:i8, 1:i8
%7:i8 = phi %0, %2, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = mul %0, %1
%3:i64 = ctlz %2
%4:i64 = subnsw 64:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7:i32 = phi %0, 1:i32, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, %3, 0:i8
%5:i8 = phi %1, 0:i8, %4
%6:i8 = phi %0, %5, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 226:i32, 225:i32
%4:i32 = select %2, 224:i32, 223:i32
%5 = block 2
%6:i32 = phi %5, %3, %4
%7:i32 = phi %1, %3, %4, %6, 223:i32
%8:i32 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = ctlz %1
%3:i64 = subnsw 64:i64, %2
%4:i64 = addnw 4294967295:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = cttz %1
%3:i32 = phi %0, %2, 32:i32
%4:i32 = shl 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var (0000000x) (n)
%2:i8 = var (0000000x) (n)
%3:i8 = var
%4:i1 = eq %2, %3
%5:i8 = select %4, 0:i8, %1
%6:i8 = phi %0, %1, %1, %5, %1
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 68:i32, 66:i32, 67:i32, 67:i32
%3:i32 = phi %0, 68:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 7
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 1:i32, %0
%2:i32 = and 1:i32, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
%6:i32 = lshr %1, 1:i32
%7:i32 = addnw %5, %6
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 4:i64, 0:i64
%3:i64 = or 2:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = or 1:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = and %1, %2
%4:i32 = and %0, %3
%5:i8 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i64 = zext %3
%5:i64 = addnsw 18446744073709551615:i64, %4
%6:i32 = var
%7:i64 = zext %6
%8:i64 = addnsw %5, %7
%9:i64 = urem %8, %4
infer %9

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, %3, 0:i8, 1:i8, 1:i8
%5:i8 = phi %0, 0:i8, 0:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 3
%2:i1 = var
%3:i32 = var (000000000000000000000001011001xx) (zn)
%4:i32 = select %2, %3, 0:i32
%5:i1 = var
%6:i32 = var (00000000000000000000000101100xxx) (zn)
%7:i32 = select %5, %6, 0:i32
%8:i1 = var
%9:i32 = select %8, 354:i32, 353:i32
%10:i32 = phi %1, %4, %7, %9
%11:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 8
%2 = block 6
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, %3, %3, %3, 0:i8, 0:i8, 0:i8, 0:i8
%5:i8 = var
%6:i1 = slt %5, 0:i8
%7:i8 = select %6, %4, 0:i8
%8:i8 = phi %0, %4, %4, %7, %4, %4, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %3, %4, 0:i8, %4
%6:i8 = phi %0, %2, %5
%7:i8 = var
%8:i8 = var
%9:i8 = or %7, %8
%10:i8 = and 1:i8, %9
%11:i8 = or %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = var
%4 = block 2
%5:i32 = var
%6:i32 = phi %1, %3, %5
%7:i64 = zext %6
%8 = block 2
%9:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%10:i32 = var
%11:i64 = zext %10
%12:i64 = phi %8, %9, %11
%13:i64 = phi %0, %7, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i1 = var
%3:i1 = phi %1, %2, 0:i1, 0:i1, 0:i1
%4:i8 = zext %3
%5:i8 = var
%6:i8 = and 1:i8, %5
%7:i8 = xor 1:i8, %6
%8:i8 = phi %0, %4, %4, %4, %4, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 15
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, %2, %2, 2:i32, 0:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 12
%2:i1 = var
%3:i16 = select %2, 15:i16, 0:i16
%4:i1 = var
%5:i16 = select %4, 0:i16, 6:i16
%6:i16 = select %4, 7:i16, 0:i16
%7:i1 = var
%8:i16 = select %7, 8:i16, 9:i16
%9:i16 = phi %1, %3, %5, %6, %8, 1:i16, 2:i16, 3:i16, 4:i16, 5:i16, 10:i16, 14:i16, 0:i16
%10 = block 3
%11:i64 = var
%12:i64 = var
%13:i1 = ne %11, %12
%14:i16 = or 32:i16, %9
%15:i16 = select %13, %14, %9
%16:i16 = phi %0, %9, %9, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 511:i32, %1
%3:i32 = xor 256:i32, %2
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 9
%2:i32 = phi %1, 16:i32, 9:i32, 12:i32, 16:i32, 13:i32, 12:i32, 11:i32, 10:i32, 10:i32
%3:i1 = var
%4:i1 = var
%5:i1 = or %3, %4
%6:i32 = select %5, 9:i32, 16:i32
%7:i32 = phi %0, %2, 16:i32, %6, 12:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 1:i8
%6:i8 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 7
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3 = block 4
%4:i8 = phi %3, %2, 0:i8, %2, %2
%5:i8 = phi %0, %2, %2, %4, %4, 0:i8, 0:i8, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8
%5 = block 5
%6:i8 = phi %5, %4, 0:i8, 0:i8, 0:i8, 0:i8
%7:i8 = phi %0, %4, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 7
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i1 = var
%5:i32 = zext %4
%6:i32 = phi %1, %3, %5, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%7:i32 = phi %0, %6, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = phi %0, %1, %1, 1:i1, 1:i1
%3:i1 = var
%4:i16 = var (0000000000000xxx) (zn)
%5:i16 = var (0000000000001xxx) (zn)
%6:i16 = select %3, %4, %5
%7:i16 = or 16:i16, %6
%8:i16 = select %2, %6, %7
%9:i1 = ult 511:i16, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %5, %5, %5
%7:i64 = var
%8:i1 = ne 0:i64, %7
%9:i8 = zext %8
%10:i8 = phi %0, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i8 = phi %1, 0:i8, 2:i8, 3:i8, 0:i8, 0:i8
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %0, %2, 2:i8, 0:i8, 3:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 39
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 42:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 41:i32, 0:i32
%6 = block 2
%7:i32 = var (00000000000000000000000000000xxx) (zn)
%8:i32 = phi %6, %7, 0:i32
%9:i32 = phi %1, %3, %5, %8
%10:i16 = var
%11:i1 = eq 135:i16, %10
%12:i32 = select %11, 1:i32, 2:i32
%13:i32 = phi %0, %9, 5:i32, 6:i32, 7:i32, 8:i32, 9:i32, 10:i32, 11:i32, 12:i32, 13:i32, 14:i32, 15:i32, 16:i32, 17:i32, 18:i32, 19:i32, 20:i32, 21:i32, 22:i32, 23:i32, 24:i32, 25:i32, 26:i32, 27:i32, 28:i32, 29:i32, 30:i32, 31:i32, 32:i32, 33:i32, 34:i32, 35:i32, 36:i32, 37:i32, 38:i32, 39:i32, 40:i32, 44:i32, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3 = block 3
%4:i32 = var (000000000000000000000000000000x0) (n)
%5 = block 4
%6:i32 = var (000000000000000000000000000000x1) (zn)
%7:i32 = phi %2, %4, %6
%8:i32 = phi %1, 2:i32, %7, %7, %7
%9:i32 = phi %0, 2:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4 = block 3
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 0:i8, 0:i8
%7:i8 = phi %3, %6, 0:i8, 0:i8
%8:i8 = phi %0, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 4
%3:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = phi %2, 0:i64, %3, 0:i64, 0:i64
%5:i32 = var
%6:i64 = zext %5
%7:i64 = phi %1, %4, %6
%8:i64 = phi %0, 0:i64, %7, 0:i64, 0:i64, 0:i64, 0:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 52:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 354745078340568300:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 354745078340568300:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = phi %3, 253:i32, 250:i32
%5:i32 = phi %2, %4, 250:i32
%6:i32 = phi %1, %5, %4
%7:i32 = phi %0, 254:i32, 251:i32, %6, %6, %6, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 76
%1:i32 = var
%2:i64 = zext %1
%3:i8 = var
%4:i1 = eq 101:i8, %3
%5:i64 = select %4, 2:i64, %2
%6:i8 = var
%7:i1 = eq 101:i8, %6
%8:i64 = select %7, 2:i64, %2
%9:i8 = var
%10:i1 = eq 101:i8, %9
%11:i64 = select %10, 2:i64, %2
%12:i8 = var
%13:i1 = eq 101:i8, %12
%14:i64 = select %13, 2:i64, %2
%15:i32 = var
%16:i1 = eq 0:i32, %15
%17:i64 = select %16, 4:i64, %2
%18:i32 = var
%19:i1 = eq 0:i32, %18
%20:i64 = select %19, 5:i64, %2
%21:i32 = var
%22:i1 = eq 0:i32, %21
%23:i64 = select %22, 5:i64, %2
%24:i32 = var
%25:i1 = eq 0:i32, %24
%26:i64 = select %25, 6:i64, %2
%27:i32 = var
%28:i1 = eq 0:i32, %27
%29:i64 = select %28, 6:i64, %2
%30:i8 = var
%31:i1 = eq 101:i8, %30
%32:i64 = select %31, 4:i64, %2
%33:i8 = var
%34:i1 = eq 101:i8, %33
%35:i64 = select %34, 4:i64, %2
%36:i8 = var
%37:i1 = eq 101:i8, %36
%38:i64 = select %37, 4:i64, %2
%39:i8 = var
%40:i1 = eq 101:i8, %39
%41:i64 = select %40, 4:i64, %2
%42:i64 = phi %0, %2, 6:i64, %2, %2, 5:i64, %2, %2, 5:i64, 4:i64, %2, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, 5:i64, %2, 4:i64, %2, 4:i64, 4:i64, %2, %2, 3:i64, 3:i64, %2, %2, %2, 3:i64, %2, 3:i64, 2:i64, %2, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 3:i64, 2:i64, 2:i64, 2:i64, 2:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 6:i64, 9:i64, 9:i64, %2, %2, %2, %5, %8, %11, %14, %17, %20, %23, %26, %29, %32, %35, %38, %41, 7:i64
infer %42

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 264:i32, 776:i32
%3:i32 = phi %0, 264:i32, 264:i32, 776:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = phi %1, %2, 1:i32, 2:i32
%4:i32 = phi %0, 2:i32, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = var (0000000x) (n)
%3:i1 = ne 0:i8, %2
%4:i32 = select %3, 115:i32, 23:i32
%5:i8 = var (0000000x) (n)
%6:i1 = ne 0:i8, %5
%7:i32 = select %6, 114:i32, 234:i32
%8:i32 = phi %1, 22:i32, %4, %7, 19:i32
%9:i32 = select %3, 116:i32, 21:i32
%10:i32 = select %6, 113:i32, 233:i32
%11 = block 2
%12:i1 = phi %11, 0:i1, 1:i1
%13:i32 = select %12, 24:i32, 22:i32
%14:i32 = phi %0, %8, 19:i32, %9, %10, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = var (001xx100) (zn)
%4:i8 = phi %2, %3, 20:i8
%5:i8 = phi %1, %4, 20:i8
%6:i8 = phi %0, 20:i8, %5, 36:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 2:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %1, 0:i32, %3, %7
%9:i32 = phi %0, 1:i32, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 35:i32, 34:i32, 10:i32, 12:i32, 11:i32, 7:i32, 6:i32
%3:i32 = phi %0, 5:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 2147483647:i32, %0
%2:i32 = var
%3:i32 = and 2147483647:i32, %2
%4:i32 = subnsw %1, %3
%5:i32 = sub %1, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %3, %5, %7
%9:i64 = var
%10:i64 = var
%11:i1 = ne %9, %10
%12:i8 = zext %11
%13:i8 = phi %0, %2, %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000xxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 29:i32, %2
%4:i32 = phi %0, 30:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = lshr %1, 2:i64
%3:i64 = xor 4398046511104:i64, %2
%4:i64 = addnw 87960930222080:i64, %3
%5:i64 = or 131941395333120:i64, %3
%6:i64 = phi %0, %3, %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 3
%2:i1 = phi %1, 1:i1, 0:i1, 0:i1
%3:i32 = phi %1, 0:i32, 352:i32, 353:i32
%4:i32 = select %2, 347:i32, %3
%5:i32 = phi %0, 0:i32, 354:i32, 354:i32, 354:i32, 356:i32, 355:i32, 348:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %4, 0:i32, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3 = block 6
%4:i8 = phi %3, %2, %2, %2, %2, 1:i8, %2
%5:i8 = phi %0, %2, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 11
%2:i32 = phi %1, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 3:i32, 1:i32, 0:i32
%3:i32 = phi %0, 2:i32, 3:i32, 3:i32, 2:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i1 = ult %1, %2
%4:i64 = select %3, %1, %2
%5 = block 2
%6:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (zn)
%7:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%8:i64 = phi %5, %6, %7
%9:i1 = ult %1, %8
%10:i64 = select %9, %1, %8
%11:i64 = phi %0, %4, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, %3
%5:i32 = var
%6:i1 = eq 0:i32, %5
%7:i8 = select %6, 1:i8, %4
%8:i8 = phi %0, %4, %4, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3 = block 3
%4 = block 2
%5:i8 = phi %4, 1:i8, 0:i8
%6 = block 7
%7:i8 = phi %6, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 1:i8
%8:i8 = phi %3, %5, %7, 0:i8
%9:i8 = phi %0, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 3:i32, 4:i32
%4 = block 2
%5:i32 = phi %4, %3, 3:i32
%6:i1 = var
%7:i32 = select %6, 3:i32, 4:i32
%8:i32 = phi %1, %3, %5, %5, %7
%9:i32 = phi %0, 0:i32, 4:i32, %8, 1:i32, 2:i32, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i256 = zext %1
%3:i256 = shlnw %2, 227:i256
%4:i256 = phi %0, %3, %3, 0:i256
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i64 = zext %3
%5:i64 = phi %1, %4, 0:i64
%6:i64 = phi %0, 0:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = and 4294901760:i64, %2
%4:i64 = var
%5:i64 = and 4294901760:i64, %4
%6:i64 = phi %1, %3, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var (00000000000000x0) (n)
%2:i16 = lshrexact %1, 1:i16
%3:i8 = trunc %2
%4 = block 3
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %5, %6, 1:i8
%8 = block 2
%9:i8 = phi %8, %7, %6
%10:i8 = phi %4, %7, %9, %9
%11:i8 = phi %0, %3, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 1:i8, %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = and %3, %5
%7:i8 = phi %0, %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4 = block 3
%5:i8 = phi %4, 1:i8, %3, %3
%6:i8 = phi %1, 0:i8, %3, %5
%7:i8 = phi %0, %6, %5, %5, %3, %3, 0:i8, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i16 = trunc %0
%2:i16 = lshr 1095:i16, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 7
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = phi %0, 64:i32, 128:i32, 0:i32
%2:i32 = var
%3:i32 = udiv %1, %2
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var (000000000000000000000000000xxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 7:i32, %2
%4:i32 = phi %0, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2 = block 5
%3 = block 5
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i32 = phi %2, %4, %5, %4, %4, %4
%7:i1 = var
%8:i32 = select %7, 5:i32, 4:i32
%9:i32 = phi %1, 4:i32, 4:i32, 3:i32, 3:i32, %6, %8
%10:i32 = phi %0, 1:i32, 1:i32, 1:i32, %9, 1:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4 = block 2
%5:i32 = phi %4, 1:i32, 2:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 201603:i32, 0:i32
%5:i32 = phi %2, %4, %4
%6:i32 = phi %1, %5, %4
%7 = block 2
%8 = block 2
%9:i32 = phi %8, %4, %4
%10:i32 = phi %7, %9, %4
%11:i32 = phi %0, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = lshr %1, 58:i64
%3:i64 = shl 18446744073709551615:i64, %2
%4:i64 = xor 18446744073709551615:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var
%3:i8 = var (0000000x) (n)
%4:i8 = and %2, %3
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, 1:i8, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = ctlz %2
%4:i32 = subnsw 32:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, %5, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i64 = var
%3:i64 = cttz %2
%4:i32 = trunc %3
%5:i32 = phi %0, %4, 31:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2 = block 2
%3 = block 3
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i64 = zext %4
%6:i32 = var
%7:i64 = zext %6
%8:i64 = phi %2, %5, %7
%9:i64 = phi %0, %1, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 4
%2 = block 2
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6:i1 = var
%7:i8 = select %6, 1:i8, %5
%8:i8 = phi %1, %5, %5, %5, %7
%9:i8 = phi %0, %8, 1:i8, 1:i8, %8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var
%2:i32 = sub %0, %1
%3:i32 = and 4293918720:i32, %2
%4:i32 = sub %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 17:i64, 24:i64
%3:i64 = phi %0, 8:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 14
%2:i1 = var
%3:i32 = select %2, 3747:i32, 3746:i32
%4:i32 = phi %1, 3757:i32, 3757:i32, 3757:i32, %3, 3740:i32, 4033:i32, 3742:i32, 3739:i32, 3757:i32, 3757:i32, 3740:i32, 4033:i32, 3742:i32, 3739:i32
%5:i32 = phi %0, %4, %4, %4, 3757:i32, 3757:i32, 3757:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8, 0:i8
%4:i1 = var
%5:i8 = zext %4
%6:i8 = and %3, %5
%7:i8 = phi %0, %6, %3, %3, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var
%3:i64 = zext %2
%4:i16 = var
%5:i64 = zext %4
%6:i64 = phi %1, %3, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 3:i32, 4:i32
%3 = block 2
%4:i32 = phi %3, %2, 3:i32
%5:i64 = var
%6:i1 = eq 0:i64, %5
%7:i32 = select %6, 3:i32, 4:i32
%8:i32 = phi %0, %2, %4, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00)
%2:i32 = and 252:i32, %1
%3:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%4:i32 = var (000000000000xx010000000000000000) (zn)
%5:i32 = or %3, %4
%6:i32 = or %2, %5
%7:i32 = var (000000000000000000000000xxxxxx00) (n)
%8:i32 = or %7, %3
%9:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%10:i32 = or %8, %9
%11:i32 = or 1:i32, %10
%12:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%13:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%14:i32 = or %12, %13
%15:i32 = or 1:i32, %14
%16:i32 = or 524288:i32, %8
%17:i32 = phi %0, %6, %6, %11, %11, %15, %15, %16, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 10:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i1 = var
%3 = block 6
%4:i8 = phi %3, 1:i8, 0:i8, 1:i8, 0:i8, 0:i8, 1:i8
%5:i8 = select %2, %4, 0:i8
%6:i8 = phi %1, %5, %4
%7 = block 2
%8:i64 = var
%9:i1 = ne 0:i64, %8
%10:i8 = select %9, 0:i8, %6
%11:i8 = phi %0, %6, 0:i8, 0:i8, %6, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i1 = eq 15:i8, %1
%3:i32 = zext %1
%4:i32 = select %2, 14:i32, %3
%5:i32 = phi %0, %4, 14:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 9
%4:i1 = var
%5:i32 = zext %4
%6:i1 = var
%7:i32 = zext %6
%8:i1 = var
%9:i32 = zext %8
%10:i1 = var
%11:i32 = zext %10
%12:i1 = var
%13:i32 = zext %12
%14:i1 = var
%15:i32 = zext %14
%16:i1 = var
%17:i32 = zext %16
%18:i1 = var
%19:i32 = zext %18
%20:i1 = var
%21:i32 = zext %20
%22:i32 = phi %3, %5, %7, %9, %11, %13, %15, %17, %19, %21
%23 = block 9
%24:i1 = var
%25:i32 = zext %24
%26:i1 = var
%27:i32 = zext %26
%28:i1 = var
%29:i32 = zext %28
%30:i1 = var
%31:i32 = zext %30
%32:i1 = var
%33:i32 = zext %32
%34:i1 = var
%35:i32 = zext %34
%36:i1 = var
%37:i32 = zext %36
%38:i1 = var
%39:i32 = zext %38
%40:i1 = var
%41:i32 = zext %40
%42:i32 = phi %23, %25, %27, %29, %31, %33, %35, %37, %39, %41
%43 = block 9
%44:i1 = var
%45:i32 = zext %44
%46:i1 = var
%47:i32 = zext %46
%48:i1 = var
%49:i32 = zext %48
%50:i1 = var
%51:i32 = zext %50
%52:i1 = var
%53:i32 = zext %52
%54:i1 = var
%55:i32 = zext %54
%56:i1 = var
%57:i32 = zext %56
%58:i1 = var
%59:i32 = zext %58
%60:i1 = var
%61:i32 = zext %60
%62:i32 = phi %43, %45, %47, %49, %51, %53, %55, %57, %59, %61
%63:i32 = phi %0, %2, %22, %42, %62
infer %63

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = ult %0, 12:i64
%2:i64 = select %1, %0, 12:i64
%3:i1 = ult 16:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = lshr %1, 3:i32
%3:i32 = addnw 536870913:i32, %2
%4:i32 = phi %0, %3, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 2:i32, 0:i32
%3:i32 = or 4:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ult %1, 6:i32
%3:i32 = select %2, %1, 15:i32
%4 = block 16
%5:i32 = var
%6:i32 = var
%7:i32 = var
%8 = block 3
%9:i32 = var (0000000000000000000000000000xxx0) (n)
%10:i32 = phi %4, %5, 0:i32, 13:i32, 3:i32, 0:i32, %6, %7, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %9
%11:i32 = and 15:i32, %10
%12:i32 = phi %0, %3, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, 0:i64, %3, 0:i64, 0:i64, 0:i64
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 1:i32, 0:i32, 0:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 3
%3:i32 = var (000000000000000000000000000000x1) (zn)
%4:i1 = var
%5:i32 = zext %4
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, %6, %6, %5, 4:i32
%8:i32 = shlnw %7, 16:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 192:i64
%4:i64 = subnsw 96076792050570581:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 33
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 1:i32, 0:i32, 0:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 1:i32, 1:i32, %4, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = select %2, %3, 0:i32
%5:i32 = phi %1, 0:i32, %4, 0:i32
%6:i32 = phi %0, %5, 0:i32, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3 = block 6
%4:i64 = var
%5:i64 = var
%6:i64 = phi %2, %4, %4, %4, %5
%7:i64 = var
%8:i64 = phi %1, %6, %7
%9:i64 = phi %0, %8, %6, %6
%10:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (znp)
%11:i64 = sub %9, %10
%12:i1 = ult %9, %11
%13:i64 = select %12, %9, %11
%14:i64 = sub %9, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 14
%2:i32 = phi %1, 4789:i32, 4789:i32, 4375:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32, 4789:i32
%3:i32 = phi %0, %2, %2, %2, 4636:i32, 0:i32, 4789:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 2:i32, 1:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %2, %2, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4, 1:i32, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2 = block 6
%3:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = phi %2, %3, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%5:i32 = var
%6:i64 = zext %5
%7:i64 = phi %1, %4, %6
%8:i64 = phi %0, 0:i64, %7, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%2:i1 = eq 6:i32, %1
%3:i32 = var
%4:i1 = ne 0:i32, %3
%5:i32 = select %4, 358:i32, 357:i32
%6:i32 = select %2, %5, 0:i32
%7:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%8:i1 = eq 6:i32, %7
%9:i32 = select %4, 356:i32, 355:i32
%10:i32 = select %8, %9, 0:i32
%11:i32 = select %4, 354:i32, 353:i32
%12:i32 = phi %0, %6, %10, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, %2, 0:i1
%4:i8 = zext %3
%5 = block 2
%6:i8 = phi %5, 1:i8, 0:i8
%7:i8 = phi %0, %4, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i24 = var (000000000000000x00000000) (n)
%2:i24 = lshrexact %1, 8:i24
%3:i8 = trunc %2
%4 = block 3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %4, %3, 0:i8, %6
%8:i8 = phi %0, %3, %3, %3, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i64 = phi %1, 1:i64, 1:i64, 0:i64
%3:i64 = phi %0, 1:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 30
%1 = block 7
%2:i1 = var
%3:i32 = select %2, 3:i32, 1:i32
%4:i1 = var
%5:i32 = select %4, 3:i32, 1:i32
%6 = block 2
%7:i32 = var (000000000000000000000000000000x1) (zn)
%8:i32 = phi %6, %7, %5
%9:i32 = phi %1, 2:i32, %3, 2:i32, %5, %8, 3:i32, 2:i32
%10:i32 = phi %0, 0:i32, %9, %9, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 4
%3:i64 = phi %2, 9:i64, 5:i64, 3:i64, 0:i64
%4:i64 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%7:i64 = phi %2, %4, %5, %6, 0:i64
%8:i64 = phi %1, %3, %7, %7, %7
%9:i64 = phi %0, 0:i64, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i64 = select %2, 4:i64, 8:i64
%4:i64 = phi %1, %3, 4:i64
%5:i64 = phi %0, %4, 4:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var
%2:i32 = lshr %1, 31:i32
%3:i32 = addnw 7:i32, %2
%4:i32 = phi %0, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 5
%2:i8 = phi %1, 64:i8, 4:i8, 0:i8, 64:i8, 64:i8
%3:i1 = var
%4:i8 = select %3, 0:i8, 64:i8
%5:i8 = phi %0, %2, 4:i8, 64:i8, 0:i8, 64:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 6
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, %2, %2, %2, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = and 2097151:i64, %2
%4:i64 = var
%5:i64 = and 2097151:i64, %4
%6:i64 = phi %1, %3, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2
%4:i8 = zext %3
%5 = block 6
%6:i8 = phi %5, %4, 0:i8, %4, %4, %4, %4
%7:i8 = phi %0, %4, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 6
%2:i32 = phi %1, 2:i32, 2:i32, 1:i32, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 59
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, 1074:i32, 1041:i32, 1050:i32, 1065:i32, 1086:i32, 1077:i32, 1080:i32, 1083:i32, 1063:i32, 1057:i32, 1061:i32, 1055:i32, 2181:i32, 2148:i32, 2157:i32, 2172:i32, 2193:i32, 2184:i32, 2187:i32, 2190:i32, 2168:i32, 2162:i32, 1157:i32, 1151:i32, 1154:i32, 1173:i32, 1161:i32, 1167:i32, 2246:i32, 2240:i32, 2243:i32, 2262:i32, 2250:i32, 2256:i32, 1101:i32, 1089:i32, 1095:i32, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2 = block 8
%3 = block 6
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, %4, %4, %4, 0:i8, 0:i8, 0:i8, 0:i8
%6:i1 = var
%7:i8 = select %6, %5, 0:i8
%8:i8 = phi %1, %5, %5, %7, %5, %5, %5
%9:i8 = phi %0, %8, %8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var
%2:i32 = sub %0, %1
%3:i32 = and 4293918720:i32, %2
%4:i32 = sub %2, %3
%5:i32 = var
%6:i32 = urem %4, %5
%7:i32 = sub %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i64 = sext %0
%2:i64 = addnsw 4294967293:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = lshr %1, 13:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = and 1:i32, %2
%5:i32 = and 65535:i32, %2
%6:i32 = addnw %4, %5
%7:i32 = phi %0, %3, %6, %2
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 3
%3:i32 = var (000000000000000000000000000000xx) (n)
%4 = block 3
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %2, %3, %5, 1:i32
%7:i1 = var
%8:i32 = select %7, 1:i32, 2:i32
%9:i32 = phi %1, %6, %8
%10:i32 = phi %0, %9, 1:i32, 0:i32, 1:i32, 0:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (znp)
%4:i32 = phi %2, %3, 0:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 5:i32, %2, 1:i32
%4:i32 = phi %0, 5:i32, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 3
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, 0:i8, %5, 0:i8
%7:i8 = phi %1, %3, %6
%8:i8 = phi %0, %7, 0:i8, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, %3, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%5:i32 = var
%6:i64 = zext %5
%7:i64 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000x00x) (n)
%3:i32 = phi %1, 8:i32, %2
%4:i32 = phi %0, 8:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 11
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 4294967295:i32, %1
%3:i1 = var
%4:i32 = var (000000000000000000000000000001x0) (zn)
%5 = block 2
%6:i32 = var (000000000000000000000000000000x0) (n)
%7:i32 = select %3, %4, %6
%8:i32 = or 8:i32, %7
%9:i32 = select %2, %8, %7
%10:i32 = var
%11:i1 = eq 4294967295:i32, %10
%12:i1 = var
%13:i32 = select %12, %4, %6
%14:i32 = or 8:i32, %13
%15:i32 = select %11, %14, %13
%16:i32 = phi %0, %9, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var
%2:i32 = shl %1, 3:i32
%3:i64 = zext %2
%4:i64 = urem %0, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i1 = ne 0:i64, %1
%3:i32 = select %2, 0:i32, 2:i32
%4 = block 5
%5:i32 = phi %4, 2:i32, 0:i32, 0:i32, 0:i32, 0:i32
%6:i32 = phi %0, %3, %5, 2:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, 0:i64, %3
%5:i64 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4, 1:i32, 1:i32
%6:i32 = phi %1, %5, 1:i32, 1:i32
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 327680:i32, %3
%5:i32 = var (000000000000000000000000xxxxxx00) (n)
%6:i32 = or %5, %2
%7:i32 = or 524288:i32, %6
%8:i32 = or 589824:i32, %6
%9:i32 = or 524289:i32, %6
%10:i32 = var (000000000000000000000000xxxxxx00) (n)
%11:i32 = var (000000000000xx01xxxxxxxx00000000) (zn)
%12:i32 = or %10, %11
%13:i32 = or 1:i32, %12
%14:i32 = or 262145:i32, %6
%15:i32 = or 262144:i32, %6
%16:i32 = phi %0, %4, %4, %7, %7, %8, %8, %9, %9, %13, %13, %14, %14, %15, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3:i32 = shl 2:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 2:i32, 1:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 1:i8
%4:i8 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 14
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, %2, %2, 2:i32, 0:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000xxxxx) (n)
%1:i32 = addnsw 4294967291:i32, %0
%2:i32 = shl 1:i32, %1
%3:i32 = add 4096:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, 1:i8, %4, 1:i8, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (000xx000) (n)
%3:i8 = or 36:i8, %2
%4:i8 = phi %1, %3, 20:i8
%5:i8 = phi %0, %4, 0:i8, 20:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 2:i32, 0:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = var (000000000000000000000000000000x0) (n)
%4:i32 = select %2, 1:i32, %3
%5 = block 3
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %5, %6, 0:i32, 0:i32
%8:i32 = phi %1, %4, %7, 1:i32
%9:i1 = var
%10:i1 = var
%11:i1 = and %9, %10
%12:i32 = select %11, 1:i32, 2:i32
%13:i32 = phi %0, %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3:i32 = shl 4:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var
%2:i1 = eq 0:i32, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = select %3, 2:i32, 1:i32
%6:i32 = select %2, %4, %5
%7 = block 3
%8:i32 = addnw 1:i32, %6
%9:i32 = var (0000000000000000000000000000000x) (n)
%10:i32 = addnw %6, %9
%11:i32 = phi %7, %6, %8, %10
%12 = block 3
%13:i32 = addnsw 1:i32, %11
%14:i32 = var (0000000000000000000000000000000x) (n)
%15:i32 = addnsw %11, %14
%16:i32 = phi %12, %11, %13, %15
%17:i32 = add 1:i32, %16
%18:i1 = var
%19:i32 = zext %18
%20:i32 = add %16, %19
%21:i32 = phi %0, %6, %11, %16, %16, %17, %20
infer %21

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 0:i32
%7:i32 = phi %1, %3, %6
%8:i32 = phi %0, 0:i32, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 116:i32, 21:i32
%4:i1 = var
%5:i32 = select %4, 113:i32, 233:i32
%6 = block 2
%7:i1 = var
%8:i32 = select %7, 24:i32, 22:i32
%9:i32 = phi %1, 19:i32, %3, %5, %8
%10:i8 = var (0000000x) (n)
%11:i1 = ne 0:i8, %10
%12:i32 = select %11, 44:i32, 30:i32
%13:i32 = phi %0, %9, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = var
%4:i64 = urem %2, %3
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %3, 1:i32, %7, 0:i32
%9:i32 = phi %0, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (000000000000000000000000000000xx) (n)
%2:i32 = addnw 1:i32, %1
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %0, %2, %4, 0:i32, 0:i32, 0:i32
%6:i5 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 201603:i32, 0:i32
%5:i32 = phi %2, %4, %4
%6:i32 = phi %1, %5, %4
%7 = block 2
%8:i32 = phi %7, %6, %4
%9:i32 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 17
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8
%3 = block 16
%4:i8 = phi %3, %2, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2 = block 2
%3:i32 = var (000000000000000000000001011001xx) (zn)
%4:i32 = phi %2, 0:i32, %3
%5 = block 2
%6:i32 = var (00000000000000000000000101100xxx) (zn)
%7:i32 = phi %5, 0:i32, %6
%8:i1 = var
%9:i32 = select %8, 354:i32, 353:i32
%10:i32 = phi %1, %4, %7, %9
%11:i32 = phi %0, 0:i32, %10, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2 = block 17
%3:i32 = var (00000000000000000000000x0xxxx0xx) (n)
%4:i32 = phi %2, 0:i32, 354:i32, 356:i32, 355:i32, 348:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %3, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, %4, 354:i32
%7:i32 = phi %1, %4, %6, %6, %6, %6, %6
%8:i32 = phi %0, %7, 354:i32, 354:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 2:i32, 1:i32, 1:i32, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = or 98:i32, %2
%4 = block 2
%5 = block 2
%6:i32 = phi %5, 98:i32, 99:i32
%7:i32 = phi %4, %6, %3
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2 = block 5
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = var (0000000x) (n)
%6:i8 = phi %2, %3, %4, %5, %4, %5
%7:i8 = phi %1, %6, 1:i8
%8:i8 = phi %0, 1:i8, %7, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 8:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %0, 0:i32, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000x000) (n)
%5:i32 = phi %2, %4, 8:i32
%6:i32 = phi %1, 8:i32, %5
%7:i32 = phi %0, %6, 8:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i16 = select %2, 0:i16, 512:i16
%4:i16 = phi %1, 0:i16, 0:i16, %3
%5:i8 = var
%6:i1 = eq 12:i8, %5
%7:i16 = or 8:i16, %4
%8:i16 = select %6, %7, %4
%9:i16 = phi %0, 0:i16, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, %2, %4, 1:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = phi %1, 0:i32, 26:i32
%3 = block 3
%4:i32 = phi %3, 0:i32, 0:i32, 28:i32
%5 = block 3
%6:i32 = phi %5, 0:i32, 0:i32, 27:i32
%7 = block 3
%8:i32 = phi %7, 0:i32, 0:i32, 26:i32
%9 = block 3
%10:i32 = phi %9, 0:i32, 0:i32, 13:i32
%11 = block 3
%12:i32 = phi %11, 0:i32, 0:i32, 11:i32
%13:i32 = phi %0, 0:i32, %2, %4, %6, %8, %10, %12, 0:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 134:i32, 133:i32, 129:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i32 = phi %2, 4292:i32, 4293:i32, 4293:i32, 4292:i32, 4292:i32
%4:i32 = phi %1, %3, 4292:i32
%5:i32 = phi %0, 4292:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 327680:i32, %3
%5:i32 = or 524288:i32, %3
%6:i32 = or 589824:i32, %3
%7:i32 = or 524289:i32, %3
%8:i32 = var (00000000xxxxxxxxxxxxxxxx00000000) (n)
%9:i32 = or %1, %8
%10:i32 = or 1:i32, %9
%11:i32 = or 262145:i32, %3
%12:i32 = or 262144:i32, %3
%13:i32 = phi %0, %4, %4, %5, %5, %6, %6, %7, %7, %10, %10, %11, %11, %12, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 3
%4:i32 = var (000000000000000000000000000x0x01) (zn)
%5:i32 = phi %2, %4, 1:i32
%6:i32 = phi %1, %5, 1:i32, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i1 = var
%2:i1 = var
%3:i32 = select %2, 7:i32, 8:i32
%4:i32 = select %2, 9:i32, 10:i32
%5:i32 = select %1, %3, %4
%6:i1 = var
%7:i32 = select %2, 8:i32, 7:i32
%8:i32 = select %2, 10:i32, 9:i32
%9:i32 = select %6, %7, %8
%10:i32 = phi %0, 0:i32, 0:i32, %5, %9, 6:i32, 5:i32, 3:i32, 2:i32, 1:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2, %2
%5:i32 = addnsw 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var
%3:i1 = eq 135:i16, %2
%4:i32 = select %3, 3:i32, 4:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = select %3, 1:i32, 2:i32
%7:i32 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i32 = phi %1, 3:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 3:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 3:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 3:i32
%9:i32 = phi %0, 0:i32, 1:i32, 1:i32, 1:i32, %2, 1:i32, %4, %6, %8, 1:i32, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 15
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, %5, 0:i32
%7:i32 = phi %0, 4:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000x0x) (zn)
%1:i32 = var (0000000000000000000000000000x000) (n)
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = mulnsw %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 2:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 4
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8, %3, %3, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 30
%1 = block 2
%2:i32 = phi %1, 42:i32, 25:i32
%3 = block 2
%4:i32 = phi %3, 37:i32, 31:i32
%5:i32 = var
%6:i1 = eq 1:i32, %5
%7:i32 = select %6, 1:i32, 34:i32
%8 = block 2
%9:i32 = phi %8, 55:i32, 1:i32
%10:i32 = phi %0, 0:i32, 27:i32, 43:i32, %2, 44:i32, 45:i32, 28:i32, 38:i32, %4, 40:i32, 39:i32, 41:i32, 36:i32, 28:i32, 29:i32, 31:i32, 36:i32, 41:i32, 27:i32, 25:i32, 26:i32, 12:i32, 20:i32, 21:i32, 22:i32, 1:i32, 32:i32, 33:i32, %7, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 2
%2:i64 = var
%3:i1 = ne 0:i64, %2
%4:i32 = select %3, 2:i32, 1:i32
%5:i1 = var
%6:i32 = select %5, 0:i32, 2:i32
%7 = block 2
%8:i1 = var
%9:i1 = phi %7, 1:i1, %8
%10:i32 = zext %9
%11 = block 2
%12:i32 = phi %11, 2:i32, 0:i32
%13 = block 2
%14:i32 = phi %13, 2:i32, 0:i32
%15:i32 = phi %0, 1:i32, %4, 2:i32, %6, 0:i32, %10, 1:i32, 0:i32, 2:i32, 0:i32, %12, 0:i32, %14, 0:i32
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 2
%2:i8 = var (0xxxxxxx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 10:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 3
%4 = block 3
%5:i32 = phi %4, 0:i32, 1:i32, 1:i32
%6:i32 = phi %3, 0:i32, %5, 1:i32
%7:i32 = phi %0, 0:i32, 1:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 3
%2:i32 = phi %1, 3:i32, 1:i32, 0:i32
%3 = block 2
%4 = block 3
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 1:i32, 0:i32, %6
%8:i32 = phi %3, 0:i32, %7
%9 = block 2
%10 = block 3
%11:i32 = phi %10, 3:i32, 1:i32, 0:i32
%12:i32 = phi %9, 3:i32, %11
%13:i32 = phi %0, 0:i32, 1:i32, 1:i32, %2, %8, %12, 1:i32, 1:i32, 1:i32, 1:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = xor 1:i1, %1
%3:i8 = zext %2
%4 = block 3
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, %3, %3
%7:i8 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4, 0:i32
%6:i32 = phi %1, 1:i32, 1:i32, %5
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, 0:i32, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i16 = phi %1, 52:i16, 62:i16, 51:i16, 50:i16
%3:i16 = phi %0, 63:i16, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 1:i64, 0:i64
%3:i64 = or 4:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = or 64:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4, 0:i8
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, %7, %5
%9:i8 = phi %1, %5, %5, %8, %5
%10:i8 = phi %0, 0:i8, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 268697828:i64, 0:i64
%3:i64 = or 256:i64, %2
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32, 0:i32, 0:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i8 = zext %1
%3 = block 6
%4:i1 = var
%5:i8 = zext %4
%6 = block 6
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, %7, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%9:i8 = phi %3, %5, %8, %8, %8, %8, %8
%10:i8 = phi %0, %2, %9, %9, %9, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 4
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 21:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2 = block 11
%3:i1 = var
%4:i32 = zext %3
%5:i32 = phi %2, %4, %4, %4, %4, %4, %4, %4, %4, %4, 1:i32, %4
%6:i32 = phi %1, %5, %4, %4, %4, %4, %4
%7:i32 = phi %0, %6, %4, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 4:i32, 2:i32, 1:i32
%3:i32 = phi %0, %2, %2, 2:i32, 1:i32, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000000000000000000000000001x0000000) (zn)
%3 = block 2
%4:i64 = var (00000000000000000000000000000000000000000000000000000000x0000000) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 16:i64, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8, %4, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (n)
%2:i64 = addnw 8:i64, %1
%3:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = shlnw %3, 3:i64
%5:i64 = addnw %2, %4
%6:i64 = phi %0, %5, %2
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var
%1:i16 = and 8192:i16, %0
%2 = block 9
%3:i8 = var
%4:i16 = zext %3
%5:i16 = shlnw %4, 13:i16
%6:i16 = or %1, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 5:i32
%3:i32 = phi %0, %2, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3 = block 4
%4:i32 = phi %3, 3:i32, 0:i32, 2:i32, 0:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i32 = var (000000000000000000000000000000x1) (zn)
%4:i32 = phi %2, 3:i32, %3, 3:i32, 2:i32, 0:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 8:i32, 3:i32, 2:i32, 1:i32, 0:i32, 0:i32
%3:i32 = or 16:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 2:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i32 = phi %1, 2:i32, 2:i32, 1:i32
%3:i32 = phi %0, 2:i32, 0:i32, 0:i32, 2:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 2:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, 1:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 526:i32, 524:i32
%3 = block 2
%4:i32 = phi %3, 525:i32, 523:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, 1:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, %2, 1:i32, 2:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i64 = var (0000000000000000000000000000000000000000000000000000000000000x10) (zn)
%4 = block 2
%5:i64 = var (0000000000000000000000000000000000000000000000000000000000000x00) (n)
%6:i64 = phi %2, %3, %5
%7:i64 = or 1:i64, %6
%8:i64 = phi %1, %7, %6
%9:i64 = phi %0, 0:i64, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, %3
%7 = block 2
%8:i1 = var
%9:i32 = select %8, 2:i32, 1:i32
%10:i32 = phi %7, 1:i32, %9
%11 = block 2
%12:i32 = phi %11, 1:i32, %3
%13 = block 2
%14:i1 = var
%15:i32 = select %14, 3:i32, 2:i32
%16:i32 = phi %13, 2:i32, %15
%17 = block 2
%18:i1 = var
%19:i32 = select %18, 3:i32, 2:i32
%20:i32 = phi %17, 2:i32, %19
%21 = block 2
%22:i1 = var
%23:i32 = select %22, 3:i32, 2:i32
%24:i32 = phi %21, 2:i32, %23
%25:i32 = phi %0, 0:i32, 1:i32, 1:i32, %4, %6, %10, %12, 2:i32, %16, 1:i32, 2:i32, %20, 1:i32, 2:i32, %24, 1:i32, 1:i32
infer %25

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 518:i32, 262:i32
%3:i32 = phi %0, 773:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 2:i32, 1:i32, 1:i32, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 1:i8, 0:i8, 1:i8, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 18:i32
%7:i32 = phi %1, 0:i32, %3, %6
%8:i32 = phi %0, 0:i32, %7, 1:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3, %3
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i1 = var
%3:i32 = select %2, 37:i32, 41:i32
%4:i32 = select %2, 36:i32, 40:i32
%5:i32 = select %2, 35:i32, 39:i32
%6:i32 = select %2, 34:i32, 38:i32
%7:i32 = phi %1, 33:i32, %3, %4, %5, %6, 32:i32
%8 = block 7
%9 = block 13
%10:i32 = phi %9, %7, %7, 38:i32, 34:i32, 39:i32, %7, %7, %7, 41:i32, 37:i32, 40:i32, %7, %7
%11:i32 = phi %8, %10, %7, %7, %7, %7, %7, %7
%12:i32 = phi %0, %7, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i32 = select %1, 66:i32, 34:i32
%3:i32 = select %1, 70:i32, 38:i32
%4:i32 = select %1, 69:i32, 37:i32
%5:i32 = select %1, 68:i32, 36:i32
%6:i32 = select %1, 67:i32, 35:i32
%7:i1 = var
%8:i32 = select %1, 65:i32, 33:i32
%9:i32 = select %7, %8, %2
%10:i32 = phi %0, %2, %3, %4, %5, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 1:i32, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 14:i32
%5:i32 = phi %1, 1:i32, 0:i32, %4, 1:i32
%6:i32 = phi %0, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 217:i32, 216:i32
%4:i32 = phi %1, 216:i32, %3
%5:i32 = phi %0, %4, 0:i32, 216:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000010x) (zn)
%3 = block 2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 64:i64, %5
%7:i64 = phi %0, %6, %5
%8:i64 = or 16:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, 0:i8, %3
%5:i8 = phi %1, 0:i8, %4
%6 = block 3
%7 = block 2
%8:i1 = var
%9:i8 = zext %8
%10:i8 = phi %6, 0:i8, %9, %9
%11:i8 = phi %0, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = lshr %1, 31:i32
%3:i8 = trunc %2
%4 = block 5
%5:i8 = phi %4, %3, 0:i8, %3, %3, %3
%6:i8 = phi %0, %3, %5, %3
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3 = block 3
%4 = block 3
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6, 1:i32
%8:i32 = phi %3, 1:i32, 0:i32, %7
%9:i32 = phi %0, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i64 = zext %1
%3:i32 = var
%4:i64 = zext %3
%5:i1 = ult %2, %4
%6:i64 = select %5, %4, %2
%7:i32 = var
%8:i64 = zext %7
%9:i64 = phi %0, %6, %8, %2, %2
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 4
%4 = block 2
%5:i1 = var
%6:i8 = zext %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %3, %6, %6, %8, 0:i8
%10:i8 = phi %0, %2, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 11
%2:i1 = var
%3:i32 = var (0000000000000000000000000000001x) (zn)
%4:i32 = select %2, %3, 1:i32
%5:i1 = var
%6:i32 = var (0000000000000000000000000000001x) (zn)
%7:i32 = select %5, %6, 1:i32
%8:i1 = var
%9:i32 = var (0000000000000000000000000000001x) (zn)
%10:i32 = select %8, %9, 1:i32
%11:i1 = var
%12:i32 = select %11, 3:i32, 2:i32
%13:i32 = phi %1, 0:i32, 1:i32, 2:i32, %4, 0:i32, %7, 0:i32, %10, 0:i32, %12, 0:i32
%14 = block 2
%15:i8 = var
%16:i1 = eq 0:i8, %15
%17:i1 = var
%18:i32 = select %17, 3:i32, 2:i32
%19:i32 = select %16, %18, 1:i32
%20:i32 = phi %0, %13, %19, 0:i32
infer %20

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 0:i8, %4, %4
%6:i8 = phi %0, 0:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4
%6:i8 = phi %1, %5, 1:i8, 1:i8, 1:i8
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = subnsw 32:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = phi %0, 0:i32, 7:i32, 63:i32, 31:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %5, %5
%7:i8 = phi %0, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 3:i32, %5
%7:i32 = addnsw 2:i32, %5
%8:i32 = phi %0, %6, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 5:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 8
%3:i32 = phi %2, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 4
%6:i32 = phi %5, 0:i32, 1:i32, 0:i32, 1:i32
%7 = block 2
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10:i32 = phi %7, 0:i32, %9
%11:i32 = phi %0, 0:i32, 0:i32, %2, 0:i32, 0:i32, %4, 0:i32, 0:i32, %6, 0:i32, 0:i32, %10, 0:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 0:i32, 409:i32, 380:i32
%3 = block 4
%4:i1 = var
%5:i32 = select %4, 380:i32, %2
%6:i32 = phi %3, %2, %2, %2, %5
%7:i32 = phi %0, %2, %2, %2, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = add 18446744073709551614:i64, %0
%2:i1 = ult %0, %1
%3:i64 = select %2, %0, %1
%4:i64 = sub %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%3:i1 = eq 0:i32, %2
%4 = block 2
%5:i32 = var (000000000000000000000000000000x1) (zn)
%6:i32 = phi %4, 3:i32, %5
%7:i32 = select %3, %6, 1:i32
%8:i32 = phi %0, %7, %7, 0:i32, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 0:i8
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %3, %6, %8, %6
%10:i8 = phi %0, %2, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 5
%3:i32 = phi %2, 2:i32, 1:i32, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, 0:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = or 4:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, %2, %2, %2, %2
%4 = block 2
%5 = block 2
%6:i8 = phi %5, 0:i8, %3
%7:i8 = phi %4, %6, %3
%8:i8 = phi %0, %3, %3, %7, %3, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 512:i32, 256:i32
%3:i32 = or 8:i32, %2
%4:i32 = or 6:i32, %2
%5:i32 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 0:i32, %4, 1:i32, 1:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 358:i32, 357:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6:i32 = select %2, 356:i32, 355:i32
%7:i32 = phi %5, 0:i32, %6
%8:i32 = select %2, 354:i32, 353:i32
%9:i32 = phi %0, %4, %7, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = var (000000000000000000000000000x0x0x) (zn)
%4:i32 = select %2, 0:i32, %3
%5:i32 = phi %1, 1:i32, %4
%6:i32 = phi %0, 16:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000000000000000000000000001111x) (zn)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = subnsw %1, %2
%4 = block 3
%5:i1 = var
%6:i32 = zext %5
%7:i32 = subnsw %3, %6
%8:i32 = phi %0, 16:i32, 32:i32, 32:i32, %7, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, 1:i8, %5
%7:i8 = phi %0, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 15:i32, 13:i32, 15:i32, 15:i32, 15:i32, 15:i32, 15:i32
%3:i32 = phi %0, %2, 15:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 4
%4:i8 = phi %3, %2, %2, 0:i8, 0:i8
%5:i8 = phi %0, %2, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = or 2:i32, %3
%5:i32 = phi %1, %4, %3
%6:i32 = or 16:i32, %5
%7:i32 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = phi %1, %2, 4:i32
%4:i32 = phi %0, 4:i32, 4:i32, %3
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 12
%2:i32 = phi %1, 14:i32, 14:i32, 1:i32, 14:i32, 1:i32, 14:i32, 14:i32, 1:i32, 14:i32, 1:i32, 14:i32, 14:i32
%3:i1 = eq 14:i32, %2
%4:i32 = select %3, 0:i32, %2
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 8193:i32, 1:i32
%3:i32 = or 67108864:i32, %2
%4 = block 4
%5:i1 = phi %4, 0:i1, 0:i1, 1:i1, 0:i1
%6:i32 = or 134217728:i32, %2
%7:i32 = select %5, %6, %2
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 4
%4 = block 2
%5:i32 = var (000000000000000000000000000000xx) (zn)
%6:i32 = phi %3, 1:i32, %5, 1:i32, 1:i32
%7:i32 = phi %2, %6, 1:i32, 1:i32
%8:i32 = phi %1, %7, %6, 1:i32, 1:i32
%9:i32 = phi %0, %8, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var
%2:i8 = var (0000000x) (n)
%3:i8 = and %1, %2
%4:i8 = phi %0, 1:i8, 1:i8, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = phi %1, %2, %3
%5:i8 = xor 1:i8, %4
%6:i8 = phi %0, %5, %4, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 20
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 10:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 6:i32, 0:i32
%3:i32 = phi %0, 8:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 55:i32, 1:i32
%3:i32 = phi %0, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 3035:i32
%3 = block 4
%4:i32 = var (0000000000000000000000000x0xx0xx) (n)
%5:i32 = addnw 2967:i32, %4
%6:i32 = phi %3, 2970:i32, 0:i32, %5, 3035:i32
%7 = block 2
%8:i32 = phi %7, 0:i32, 3035:i32
%9:i32 = phi %0, %2, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i8 = select %0, 5:i8, 2:i8
%2:i8 = or 1:i8, %1
%3:i1 = eq 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 7
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %3
%5 = block 9
%6:i32 = phi %5, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%7:i32 = phi %0, 1:i32, 0:i32, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 146:i32, 72:i32
%4:i32 = phi %1, %3, 72:i32
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4:i8 = phi %3, %2, 0:i8, %2
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3 = block 5
%4:i32 = var (0000000000000000000000000000xxx0) (n)
%5:i32 = select %2, %4, 10:i32
%6:i32 = phi %1, 3:i32, %5
%7:i8 = var (0000000x) (n)
%8:i1 = ne 0:i8, %7
%9:i32 = select %8, 1:i32, 4:i32
%10:i32 = phi %0, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, 0:i1, 1:i1, %2
%4:i8 = zext %3
%5 = block 3
%6:i8 = phi %5, %4, 1:i8, 1:i8
%7:i8 = phi %0, %4, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 3:i32, 2:i32
%5:i1 = var
%6:i32 = zext %5
%7:i32 = phi %1, %4, 2:i32, %6
%8:i32 = phi %0, %7, 0:i32, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = select %1, 7:i32, 6:i32
%3 = block 4
%4:i1 = var
%5:i32 = select %4, 7:i32, 6:i32
%6:i32 = phi %3, 0:i32, %5, 0:i32, 0:i32
%7:i32 = phi %0, %2, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = and 7:i32, %1
%3:i32 = or 16:i32, %2
%4:i32 = phi %0, %3, 14:i32, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2169:i32, 3658:i32
%3:i32 = phi %0, %2, 3657:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i1 = var
%3 = block 6
%4:i8 = phi %3, 1:i8, 0:i8, 1:i8, 0:i8, 0:i8, 1:i8
%5:i8 = select %2, %4, 0:i8
%6:i8 = phi %1, %5, %4
%7 = block 6
%8:i64 = var
%9:i1 = ne 0:i64, %8
%10:i8 = select %9, 0:i8, %6
%11:i8 = phi %0, %6, 0:i8, 0:i8, %6, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = phi %0, %3, 127:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, %5
%7:i32 = phi %0, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %4
%6:i8 = phi %1, 1:i8, %5
%7:i8 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = and 4294967295:i64, %2
%4:i64 = phi %1, %3, 0:i64
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 9:i32, 8:i32
%3:i32 = phi %0, %2, 8:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 3:i32
%5:i32 = phi %1, 1:i32, %4, 0:i32
%6:i32 = phi %0, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 5:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, 1:i8, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 7:i32, 4:i32, 6:i32, 5:i32
%3:i32 = phi %0, 3:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var
%2:i1 = eq 20:i16, %1
%3:i8 = zext %2
%4 = block 2
%5 = block 4
%6:i8 = phi %5, 1:i8, 0:i8, 0:i8, 0:i8
%7:i8 = phi %4, 1:i8, %6
%8:i8 = phi %0, %3, %7, 0:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 2147483647:i32, %0
%2:i32 = var
%3:i1 = ult %1, %2
%4:i32 = var
%5:i32 = and 2147483647:i32, %4
%6:i1 = ule %5, %1
%7:i1 = and %3, %6
%8:i32 = subnsw %1, %5
%9:i32 = select %7, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = phi %1, 2:i32, %2
%4 = block 2
%5:i32 = var (000000000000000000000000000000xx) (n)
%6:i32 = phi %4, 2:i32, %5
%7:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3 = block 3
%4 = block 4
%5 = block 3
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 1:i32, 1:i32, 0:i32, %6
%8 = block 4
%9 = block 3
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = phi %8, 1:i32, 0:i32, 1:i32, %10
%12:i32 = phi %3, 0:i32, %7, %11
%13:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 360360:i32, %0
infer %1

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (n)
%2:i64 = addnw 32:i64, %1
%3:i64 = phi %0, 0:i64, %2, 0:i64, 32:i64
%4:i64 = addnsw 7:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3, 0:i32
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %1, 0:i32, %5, 1:i32, 1:i32, 1:i32, %7
%9:i32 = phi %0, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i16 = var (000000x000000000) (n)
%3:i16 = phi %1, 0:i16, 0:i16, %2
%4:i1 = var
%5:i16 = var (000000x000001000) (zn)
%6:i16 = select %4, %5, %3
%7:i16 = phi %0, 0:i16, %3, %6
%8:i16 = or 256:i16, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 4:i32, 1:i32
%4:i32 = phi %1, 4:i32, %3, 4:i32
%5:i32 = phi %0, 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5 = block 2
%6:i8 = phi %5, 1:i8, %4
%7:i8 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 3:i32
%4:i32 = phi %1, 3:i32, %3
%5 = block 2
%6:i32 = addnsw 4294967295:i32, %4
%7:i32 = phi %5, %6, %4
%8:i32 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 4
%3 = block 9
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8, 1:i8, 1:i8
%6:i8 = phi %1, %5, 1:i8, 1:i8, 1:i8
%7:i8 = phi %0, %6, 1:i8, 1:i8, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 4:i32, 1:i32
%3:i32 = phi %0, 4:i32, %2, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000000000000000000000000001x0000000) (zn)
%3 = block 2
%4:i64 = var (00000000000000000000000000000000000000000000000000000000x0000000) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 16:i64, %5
%7:i64 = phi %0, %6, %5
%8:i64 = or 8:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, 1:i32, 0:i32, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (000xx000) (n)
%3:i8 = or 36:i8, %2
%4:i8 = phi %1, 20:i8, %3
%5:i8 = phi %0, 20:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, 0:i32, 2:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 9
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32
%4 = block 4
%5:i32 = phi %4, 1:i32, 1:i32, 1:i32, 0:i32
%6:i32 = phi %1, 1:i32, 0:i32, %3, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 3:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 2:i32, 4:i32, 4:i32, 5:i32, 0:i32, 4:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %0, %1, %3
%5 = block 2
%6:i8 = var
%7:i8 = phi %5, 0:i8, %6
%8:i8 = and 1:i8, %7
%9:i8 = or %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000001x) (zn)
%4:i32 = phi %2, 0:i32, %3
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = udiv %1, %0
%3:i64 = lshr %2, 2:i64
%4:i64 = mul %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2 = block 3
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, 0:i8, %3, 0:i8, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 7:i32, 4:i32, 6:i32, 5:i32
%3:i32 = phi %0, 3:i32, %2, 1:i32
%4:i32 = or 96:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 9
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 2:i32, 1:i32
%6:i32 = phi %1, 1:i32, %3, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, %5, %4, 0:i8
%7:i8 = phi %0, 0:i8, 0:i8, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4 = block 3
%5:i32 = phi %4, 1:i32, 0:i32, 2:i32
%6:i32 = phi %1, %3, %5
%7:i1 = var
%8:i1 = var
%9:i1 = and %7, %8
%10:i32 = select %9, 1:i32, 2:i32
%11:i32 = phi %0, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var
%2:i32 = zext %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = or 8:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i8 = var (0001000x) (zn)
%2:i64 = zext %1
%3:i64 = or 34359738368:i64, %2
%4:i64 = phi %0, %3, %2, %2, %2, %2, %2, %2, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000001100110110xx) (zn)
%5 = block 2
%6 = block 2
%7:i32 = var (00000000000000000000xxx11111000x) (zn)
%8:i32 = phi %5, %7, 0:i32
%9:i32 = phi %2, %4, %8
%10:i32 = phi %1, %9, %8
%11:i32 = phi %0, %10, %9
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 1:i1, %2
%4:i8 = zext %3
%5 = block 2
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %5, 0:i8, %7
%9:i8 = phi %0, %4, %8, 1:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 1:i32, 0:i32, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 3
%5:i32 = phi %4, 1:i32, 1:i32, 0:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7:i32 = phi %0, 1:i32, 0:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 0:i32, 1:i32
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 5:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %1, 1:i32, %4, %6
%8:i32 = phi %0, %7, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32
%6:i32 = phi %1, 1:i32, 1:i32, 1:i32, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = zext %2
%4:i1 = var
%5:i32 = select %4, 2:i32, 0:i32
%6:i1 = var
%7:i32 = zext %6
%8:i32 = phi %1, %3, %5, %7
%9:i1 = var
%10:i32 = zext %9
%11:i32 = phi %0, 1:i32, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 6
%2:i64 = var
%3 = block 9
%4:i64 = var
%5:i64 = phi %1, %2, %4, %4, %4, %4, %4
%6:i64 = var
%7:i64 = sub %5, %6
%8:i64 = phi %0, %7, %5, %5, %5, %5, %5
%9:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (znp)
%10:i64 = sub %8, %9
%11:i1 = ult %8, %10
%12:i64 = select %11, %8, %10
%13:i64 = sub %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (00000000000000000000000000000xx0) (zn)
%4:i32 = phi %1, %3, 0:i32
%5:i1 = var
%6:i32 = zext %5
%7:i32 = or %4, %6
%8:i32 = phi %0, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, 1:i32, 4:i32
%2:i32 = addnsw 4294967295:i32, %1
%3:i64 = var
%4:i32 = trunc %3
%5:i32 = and %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000001x0) (zn)
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 1:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = or 1024:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, 1:i8, %2
%5:i8 = phi %0, %2, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 244:i32, 0:i32, 0:i32
%3:i32 = phi %0, 245:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 0:i32, 2:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = shlnw %1, 1:i32
%3:i1 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = shlnw %6, 1:i32
%8:i1 = var
%9:i32 = zext %8
%10:i32 = or %7, %9
%11:i32 = phi %0, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, 1:i32, %4
%6:i32 = phi %1, 0:i32, 1:i32, %5
%7:i32 = phi %0, 0:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 10
%3 = block 2
%4:i32 = var (0000000000000000000000000000010x) (zn)
%5:i32 = phi %2, 3:i32, 3:i32, 1:i32, 1:i32, 0:i32, 3:i32, 5:i32, 5:i32, %4, 1:i32
%6 = block 3
%7 = block 4
%8:i32 = var (00000000000000000000000000000xxx) (n)
%9:i32 = phi %6, %8, 5:i32, 0:i32
%10:i32 = phi %1, %5, 0:i32, %9
%11:i32 = phi %0, 0:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i64 = select %2, 8589934592:i64, 0:i64
%4:i64 = phi %1, 0:i64, %3
%5:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (znp)
%6:i64 = shlnw %5, 32:i64
%7 = block 4
%8:i8 = var
%9:i64 = zext %8
%10:i64 = or %6, %9
%11:i64 = phi %0, %4, %10, 0:i64
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2 = block 3
%3:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%4:i16 = var
%5:i32 = zext %4
%6:i32 = phi %2, %3, %5, %5
%7:i32 = phi %1, %6, %5
%8 = block 2
%9:i16 = var
%10:i32 = zext %9
%11:i32 = phi %8, %5, %10
%12 = block 2
%13:i16 = var
%14:i32 = zext %13
%15:i32 = phi %12, %14, %5
%16:i32 = phi %0, %7, %11, %5, %5, %5, %5, %5, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32, 1:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5 = block 3
%6:i8 = phi %5, 0:i8, 0:i8, 1:i8
%7 = block 3
%8:i8 = var (0000000x) (n)
%9:i8 = xor 1:i8, %8
%10 = block 5
%11 = block 2
%12:i8 = var (0000000x) (n)
%13:i8 = phi %10, 0:i8, 0:i8, 0:i8, 0:i8, %12
%14:i8 = phi %7, %9, %13, %13
%15:i8 = phi %0, %2, %4, 1:i8, 1:i8, 0:i8, 0:i8, %6, %14, %13
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, 1:i8, %5
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2
%4:i32 = zext %3
%5 = block 4
%6:i32 = phi %5, 0:i32, 1:i32, 0:i32, 0:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (000000000000000000000000000000xx) (zn)
%2 = block 3
%3:i32 = var (00000000000000000000000000000xx1) (zn)
%4:i32 = phi %2, %3, 3:i32, 2:i32
%5:i32 = phi %0, 1:i32, %1, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i32 = zext %3
%5:i32 = phi %1, %4, 0:i32
%6:i32 = phi %0, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %2, 1:i8, %4, %4
%6:i8 = phi %1, %5, %4
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 16:i32, 32:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 4:i32, 1:i32
%3:i32 = phi %0, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4:i1 = var
%5:i8 = zext %4
%6 = block 3
%7:i8 = phi %6, 1:i8, 0:i8, 0:i8
%8:i8 = phi %3, %5, %7, 0:i8
%9:i8 = phi %0, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4 = block 3
%5:i8 = phi %4, 1:i8, 0:i8, 0:i8
%6:i8 = phi %3, 0:i8, %5
%7:i8 = phi %0, %2, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 2:i32, 1:i32, %2
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 8:i32, 3:i32, 2:i32, 1:i32, 0:i32, 0:i32
%3:i32 = or 16:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 32:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 0:i32, %7
%9:i32 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000000x000000000x0000000001xxx00x00) (zn)
%3 = block 2
%4:i64 = var (00000000000000000000000000000000000x000000000x0000000000xxx00x00) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 512:i64, %5
%7:i64 = phi %0, %6, %5
%8:i64 = or 2147483648:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3 = block 9
%4:i32 = var (0000000000000000000000000000000x) (n)
%5 = block 4
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %2, 1:i32, 0:i32, %4, %6
%8:i32 = phi %1, 1:i32, %7
%9:i32 = phi %0, %8, 1:i32, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 8
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = select %2, 0:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i64 = phi %1, 58:i64, 56:i64, 46:i64, 35:i64, 13:i64
%3:i16 = var
%4:i1 = eq 288:i16, %3
%5:i64 = select %4, 50:i64, 49:i64
%6:i64 = phi %0, %2, 38:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4 = block 2
%5:i32 = var
%6:i1 = eq 2:i32, %5
%7:i8 = var (0000000x) (n)
%8:i32 = zext %7
%9:i32 = select %6, %8, 2:i32
%10:i32 = phi %0, 0:i32, %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 130
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i1 = var
%4:i32 = select %3, 124:i32, 172:i32
%5:i32 = select %2, %4, 76:i32
%6:i8 = var (0000000x) (n)
%7:i1 = ne 0:i8, %6
%8:i32 = select %7, 100:i32, 52:i32
%9:i8 = var (0000000x) (n)
%10:i1 = ne 0:i8, %9
%11:i1 = var
%12:i32 = select %11, 122:i32, 170:i32
%13:i32 = select %10, %12, 74:i32
%14:i8 = var (0000000x) (n)
%15:i1 = ne 0:i8, %14
%16:i32 = select %15, 98:i32, 50:i32
%17:i8 = var (0000000x) (n)
%18:i1 = ne 0:i8, %17
%19:i1 = var
%20:i32 = select %19, 123:i32, 171:i32
%21:i32 = select %18, %20, 75:i32
%22:i8 = var (0000000x) (n)
%23:i1 = ne 0:i8, %22
%24:i32 = select %23, 99:i32, 51:i32
%25:i8 = var (0000000x) (n)
%26:i1 = ne 0:i8, %25
%27:i1 = var
%28:i32 = select %27, 121:i32, 169:i32
%29:i32 = select %26, %28, 73:i32
%30:i8 = var (0000000x) (n)
%31:i1 = ne 0:i8, %30
%32:i32 = select %31, 97:i32, 49:i32
%33:i8 = var (0000000x) (n)
%34:i1 = ne 0:i8, %33
%35:i1 = var
%36:i32 = select %35, 120:i32, 168:i32
%37:i32 = select %34, %36, 72:i32
%38:i8 = var (0000000x) (n)
%39:i1 = ne 0:i8, %38
%40:i32 = select %39, 96:i32, 48:i32
%41:i8 = var (0000000x) (n)
%42:i1 = ne 0:i8, %41
%43:i1 = var
%44:i32 = select %43, 118:i32, 166:i32
%45:i32 = select %42, %44, 70:i32
%46:i8 = var (0000000x) (n)
%47:i1 = ne 0:i8, %46
%48:i32 = select %47, 94:i32, 46:i32
%49:i8 = var (0000000x) (n)
%50:i1 = ne 0:i8, %49
%51:i1 = var
%52:i32 = select %51, 119:i32, 167:i32
%53:i32 = select %50, %52, 71:i32
%54:i8 = var (0000000x) (n)
%55:i1 = ne 0:i8, %54
%56:i32 = select %55, 95:i32, 47:i32
%57:i8 = var (0000000x) (n)
%58:i1 = ne 0:i8, %57
%59:i1 = var
%60:i32 = select %59, 117:i32, 165:i32
%61:i32 = select %58, %60, 69:i32
%62:i8 = var (0000000x) (n)
%63:i1 = ne 0:i8, %62
%64:i32 = select %63, 93:i32, 45:i32
%65:i8 = var (0000000x) (n)
%66:i1 = ne 0:i8, %65
%67:i1 = var
%68:i32 = select %67, 132:i32, 180:i32
%69:i32 = select %66, %68, 84:i32
%70:i8 = var (0000000x) (n)
%71:i1 = ne 0:i8, %70
%72:i32 = select %71, 108:i32, 60:i32
%73:i8 = var (0000000x) (n)
%74:i1 = ne 0:i8, %73
%75:i1 = var
%76:i32 = select %75, 130:i32, 178:i32
%77:i32 = select %74, %76, 82:i32
%78:i8 = var (0000000x) (n)
%79:i1 = ne 0:i8, %78
%80:i32 = select %79, 106:i32, 58:i32
%81:i8 = var (0000000x) (n)
%82:i1 = ne 0:i8, %81
%83:i1 = var
%84:i32 = select %83, 131:i32, 179:i32
%85:i32 = select %82, %84, 83:i32
%86:i8 = var (0000000x) (n)
%87:i1 = ne 0:i8, %86
%88:i32 = select %87, 107:i32, 59:i32
%89:i8 = var (0000000x) (n)
%90:i1 = ne 0:i8, %89
%91:i1 = var
%92:i32 = select %91, 129:i32, 177:i32
%93:i32 = select %90, %92, 81:i32
%94:i8 = var (0000000x) (n)
%95:i1 = ne 0:i8, %94
%96:i32 = select %95, 105:i32, 57:i32
%97:i8 = var (0000000x) (n)
%98:i1 = ne 0:i8, %97
%99:i1 = var
%100:i32 = select %99, 128:i32, 176:i32
%101:i32 = select %98, %100, 80:i32
%102:i8 = var (0000000x) (n)
%103:i1 = ne 0:i8, %102
%104:i32 = select %103, 104:i32, 56:i32
%105:i8 = var (0000000x) (n)
%106:i1 = ne 0:i8, %105
%107:i1 = var
%108:i32 = select %107, 127:i32, 175:i32
%109:i32 = select %106, %108, 79:i32
%110:i8 = var (0000000x) (n)
%111:i1 = ne 0:i8, %110
%112:i32 = select %111, 103:i32, 55:i32
%113:i8 = var (0000000x) (n)
%114:i1 = ne 0:i8, %113
%115:i1 = var
%116:i32 = select %115, 126:i32, 174:i32
%117:i32 = select %114, %116, 78:i32
%118:i8 = var (0000000x) (n)
%119:i1 = ne 0:i8, %118
%120:i32 = select %119, 102:i32, 54:i32
%121:i8 = var (0000000x) (n)
%122:i1 = ne 0:i8, %121
%123:i1 = var
%124:i32 = select %123, 125:i32, 173:i32
%125:i32 = select %122, %124, 77:i32
%126:i8 = var (0000000x) (n)
%127:i1 = ne 0:i8, %126
%128:i32 = select %127, 101:i32, 53:i32
%129:i8 = var (0000000x) (n)
%130:i1 = ne 0:i8, %129
%131:i1 = var
%132:i32 = select %131, 116:i32, 164:i32
%133:i32 = select %130, %132, 68:i32
%134:i8 = var (0000000x) (n)
%135:i1 = ne 0:i8, %134
%136:i32 = select %135, 92:i32, 44:i32
%137:i8 = var (0000000x) (n)
%138:i1 = ne 0:i8, %137
%139:i1 = var
%140:i32 = select %139, 114:i32, 162:i32
%141:i32 = select %138, %140, 66:i32
%142:i8 = var (0000000x) (n)
%143:i1 = ne 0:i8, %142
%144:i32 = select %143, 90:i32, 42:i32
%145:i8 = var (0000000x) (n)
%146:i1 = ne 0:i8, %145
%147:i1 = var
%148:i32 = select %147, 115:i32, 163:i32
%149:i32 = select %146, %148, 67:i32
%150:i8 = var (0000000x) (n)
%151:i1 = ne 0:i8, %150
%152:i32 = select %151, 91:i32, 43:i32
%153:i8 = var (0000000x) (n)
%154:i1 = ne 0:i8, %153
%155:i1 = var
%156:i32 = select %155, 113:i32, 161:i32
%157:i32 = select %154, %156, 65:i32
%158:i8 = var (0000000x) (n)
%159:i1 = ne 0:i8, %158
%160:i32 = select %159, 89:i32, 41:i32
%161:i8 = var (0000000x) (n)
%162:i1 = ne 0:i8, %161
%163:i1 = var
%164:i32 = select %163, 112:i32, 160:i32
%165:i32 = select %162, %164, 64:i32
%166:i8 = var (0000000x) (n)
%167:i1 = ne 0:i8, %166
%168:i32 = select %167, 88:i32, 40:i32
%169:i8 = var (0000000x) (n)
%170:i1 = ne 0:i8, %169
%171:i1 = var
%172:i32 = select %171, 111:i32, 159:i32
%173:i32 = select %170, %172, 63:i32
%174:i8 = var (0000000x) (n)
%175:i1 = ne 0:i8, %174
%176:i32 = select %175, 87:i32, 39:i32
%177:i8 = var (0000000x) (n)
%178:i1 = ne 0:i8, %177
%179:i32 = select %178, 158:i32, 62:i32
%180:i8 = var (0000000x) (n)
%181:i1 = ne 0:i8, %180
%182:i32 = select %181, 86:i32, 38:i32
%183:i32 = select %178, 157:i32, 61:i32
%184:i8 = var (0000000x) (n)
%185:i1 = ne 0:i8, %184
%186:i32 = select %185, 85:i32, 37:i32
%187:i8 = var (0000000x) (n)
%188:i1 = ne 0:i8, %187
%189:i32 = select %188, 28:i32, 24:i32
%190:i8 = var
%191:i1 = eq 2:i8, %190
%192:i32 = select %191, 13:i32, 11:i32
%193 = block 3
%194:i8 = var (0000000x) (n)
%195:i1 = eq 0:i8, %194
%196:i32 = select %195, 1:i32, 9:i32
%197:i8 = var
%198:i1 = eq 1:i8, %197
%199:i32 = select %198, 4:i32, 2:i32
%200:i8 = var
%201:i1 = eq 4:i8, %200
%202:i1 = var
%203:i32 = select %202, 6:i32, 0:i32
%204:i32 = select %201, 5:i32, %203
%205 = block 2
%206:i8 = var
%207:i1 = eq 4:i8, %206
%208:i1 = var
%209:i32 = select %208, 19:i32, 14:i32
%210:i32 = select %207, %209, 15:i32
%211:i32 = phi %0, 35:i32, 33:i32, 22:i32, 21:i32, 148:i32, %5, 172:i32, %8, 146:i32, %13, 170:i32, %16, 147:i32, %21, 171:i32, %24, 145:i32, %29, 169:i32, %32, 144:i32, %37, 168:i32, %40, 142:i32, %45, 166:i32, %48, 143:i32, %53, 167:i32, %56, 141:i32, %61, 165:i32, %64, 156:i32, %69, 180:i32, %72, 154:i32, %77, 178:i32, %80, 155:i32, %85, 179:i32, %88, 153:i32, %93, 177:i32, %96, 152:i32, %101, 176:i32, %104, 151:i32, %109, 175:i32, %112, 150:i32, %117, 174:i32, %120, 149:i32, %125, 173:i32, %128, 140:i32, %133, 164:i32, %136, 138:i32, %141, 162:i32, %144, 139:i32, %149, 163:i32, %152, 137:i32, %157, 161:i32, %160, 136:i32, %165, 160:i32, %168, 135:i32, %173, 159:i32, %176, 134:i32, 110:i32, %179, %182, 133:i32, 109:i32, %183, %186, 36:i32, 34:i32, 32:i32, %189, 30:i32, 31:i32, 26:i32, 27:i32, 25:i32, 29:i32, 23:i32, 20:i32, 20:i32, 10:i32, 16:i32, %192, 11:i32, 12:i32, 18:i32, %196, 7:i32, %199, 2:i32, 3:i32, %204, %179, %183, 17:i32, 8:i32, %210
infer %211

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 1:i32, %5, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 3:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 3
%6:i32 = phi %5, 2:i32, 2:i32, 3:i32
%7 = block 3
%8:i32 = phi %7, 2:i32, 2:i32, 3:i32
%9:i32 = phi %0, 0:i32, %4, 0:i32, %6, 1:i32, 0:i32, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i8 = xor 1:i8, %1
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 39
%2:i32 = phi %1, 0:i32, 16:i32, 0:i32, 0:i32, 123:i32, 122:i32, 0:i32, 36:i32, 35:i32, 117:i32, 33:i32, 32:i32, 0:i32, 20:i32, 19:i32, 116:i32, 17:i32, 16:i32, 0:i32, 67:i32, 66:i32, 65:i32, 68:i32, 64:i32, 70:i32, 0:i32, 83:i32, 82:i32, 81:i32, 80:i32, 86:i32, 0:i32, 52:i32, 51:i32, 50:i32, 49:i32, 48:i32, 32:i32, 0:i32
%3:i32 = phi %0, 18:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6:i32 = var
%7:i1 = eq 1:i32, %6
%8:i8 = zext %7
%9:i8 = phi %0, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 2:i32
%7:i32 = phi %3, 0:i32, %6
%8:i32 = phi %0, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 114:i32, 113:i32
%5 = block 23
%6 = block 2
%7:i32 = var (000000000000000000000000x0x000xx) (n)
%8:i32 = phi %5, %7, 161:i32, 160:i32, 96:i32, 95:i32, 94:i32, 160:i32, 161:i32, 97:i32, 162:i32, 160:i32, 162:i32, 162:i32, 162:i32, 163:i32, 161:i32, 163:i32, 163:i32, 163:i32, 160:i32, 162:i32, 161:i32, 163:i32
%9:i32 = phi %1, %4, %8, %4, %4, %4, %4, %4, %4, %4, %4
%10:i32 = phi %0, %9, 0:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4827:i32, 4837:i32
%3:i32 = phi %0, %2, 4829:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 64:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000000000000x00000000000x000000) (n)
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = or %1, %2
%4:i32 = or 128:i32, %3
%5:i32 = phi %0, %3, %4, %3, %4, %3
%6:i1 = ult 2097151:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 82:i32, 0:i32
%3:i32 = addnw 117:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 91:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 10
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3 = block 8
%4:i8 = phi %3, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, %2, %4, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8, %3
%5:i8 = phi %0, %4, %3, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (zn)
%3 = block 4
%4:i32 = var (00000000000000000000000000000x0x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 2:i32
%4:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, %3, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4600:i32, 4599:i32
%3:i32 = phi %0, %2, 4599:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 7
%3 = block 4
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = var (0000000x) (n)
%9:i8 = phi %6, %7, %8
%10:i8 = phi %1, %5, %9
%11 = block 2
%12:i32 = var
%13:i1 = eq 28:i32, %12
%14:i8 = select %13, %10, 0:i8
%15:i8 = phi %0, %10, %10, %10, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5 = block 2
%6:i32 = var (000000000000000000000000000000xx) (zn)
%7:i32 = phi %2, 1:i32, %4, %6
%8:i32 = phi %1, %7, 1:i32
%9:i32 = phi %0, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000000000001x00000000x) (zn)
%3 = block 4
%4:i32 = var (0000000000000000000000x00000000x) (n)
%5:i32 = phi %1, %2, %4, %4
%6:i32 = or 128:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = or 2:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 1:i8, %2
%4:i8 = var (0000000x) (n)
%5 = block 4
%6:i8 = var (0000000x) (n)
%7:i8 = var (0000000x) (n)
%8:i8 = phi %5, %6, %7, %3, %3
%9:i8 = phi %0, %3, %4, %3, %3, %8, %3
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = or %3, %4
%6:i8 = or %2, %5
%7:i8 = var (0000000x) (n)
%8:i8 = or %6, %7
%9 = block 5
%10:i1 = var
%11:i8 = zext %10
%12:i8 = or %8, %11
%13:i8 = phi %0, %6, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000xxxxx0) (n)
%2:i64 = zext %1
%3:i64 = phi %0, %2, 0:i64
%4:i64 = shl 1:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 2:i32
%4:i32 = phi %1, %3, 2:i32
%5:i32 = phi %0, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i32 = select %1, 380:i32, 409:i32
%3 = block 3
%4:i1 = var
%5:i32 = select %4, 380:i32, %2
%6:i32 = phi %3, %2, %5, %2
%7:i32 = phi %0, %2, %2, %2, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 3
%6:i32 = addnsw 1:i32, %4
%7:i32 = phi %5, %6, %4, %4
%8:i32 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4:i32, 1:i32
%3:i32 = phi %0, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 3:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i24 = var (00000000000xxxxxxxxxxxxx) (zn)
%2:i64 = zext %1
%3:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (n)
%4:i64 = addnw 32:i64, %3
%5:i64 = var (000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (n)
%6:i64 = addnw 32:i64, %5
%7:i64 = phi %0, %2, %4, %6, 32:i64
%8:i64 = addnsw 7:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4, 1:i32
%6:i32 = phi %1, 1:i32, 1:i32, %5
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 4
%2:i32 = phi %1, 2184:i32, 2185:i32, 2185:i32, 2185:i32
%3:i32 = phi %0, %2, 2185:i32, 2184:i32, 2184:i32, 2185:i32, 2185:i32, 2185:i32, 2185:i32, 2185:i32, 2185:i32, 2185:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = var
%3:i8 = or %1, %2
%4:i8 = and 1:i8, %3
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = var (0000000x) (n)
%8:i8 = phi %5, %6, %7
%9:i8 = or %8, %4
%10:i8 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, %2, 1:i8
%4:i8 = phi %0, %3, 0:i8, 0:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = select %1, 512:i32, 256:i32
%3:i32 = or 5:i32, %2
%4:i32 = or 16:i32, %2
%5 = block 2
%6:i32 = or 8:i32, %2
%7:i32 = or 6:i32, %2
%8:i32 = phi %5, %6, %7
%9:i32 = phi %0, %3, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = and %1, %2
%4:i64 = phi %0, 0:i64, %3
%5:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%6:i64 = zext %5
%7:i64 = shl 1:i64, %6
%8:i64 = and %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 3:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 3
%4 = block 2
%5:i8 = phi %4, 1:i8, 0:i8
%6:i8 = phi %3, %5, %5, 0:i8
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i1 = eq 0:i32, %1
%3:i1 = var
%4:i32 = select %3, 1:i32, 3:i32
%5:i32 = select %2, %4, 1:i32
%6:i32 = phi %0, 0:i32, 0:i32, %5, 1:i32, 0:i32, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 24
%1 = block 3
%2:i32 = phi %1, 3692:i32, 1832:i32, 3691:i32
%3:i32 = phi %0, 0:i32, 3322:i32, 1837:i32, 4489:i32, 3323:i32, 2480:i32, 3633:i32, 3696:i32, 3693:i32, 3694:i32, 3695:i32, %2, %2, %2, 3690:i32, 3690:i32, 4488:i32, 4488:i32, 4488:i32, 4488:i32, 4488:i32, 3336:i32, 3335:i32, 4488:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 6:i32, 0:i32, 6:i32, 6:i32
%3:i32 = phi %0, 6:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, %3, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = ne 0:i32, %1
%3:i8 = zext %2
%4 = block 2
%5:i8 = phi %4, %3, 1:i8
%6:i8 = phi %0, 0:i8, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8, 0:i8
%4:i8 = phi %0, %3, 1:i8, 1:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, %2
%5:i8 = phi %0, %2, %2, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1:i1 = var
%2:i32 = select %1, 1211:i32, 1221:i32
%3:i1 = var
%4:i32 = select %3, 1206:i32, 1221:i32
%5:i1 = var
%6:i32 = select %5, 1209:i32, 1219:i32
%7:i1 = var
%8:i32 = select %7, 1204:i32, 1219:i32
%9:i1 = var
%10:i1 = var
%11:i32 = select %10, 7868:i32, 1800:i32
%12:i32 = select %9, 7866:i32, %11
%13:i32 = select %10, 7934:i32, 1816:i32
%14:i32 = select %9, 7932:i32, %13
%15:i32 = select %10, 7598:i32, 1765:i32
%16:i32 = select %9, 7596:i32, %15
%17:i32 = select %10, 7479:i32, 1727:i32
%18:i32 = select %9, 7477:i32, %17
%19:i32 = phi %0, 1216:i32, %2, 1221:i32, %4, 1214:i32, %6, 1219:i32, %8, %12, 1484:i32, %14, %16, 0:i32, %18, 1490:i32
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8, 0:i8
%5:i8 = phi %1, %4, 1:i8, 1:i8
%6:i64 = var
%7:i1 = ne 0:i64, %6
%8:i8 = select %7, %5, 1:i8
%9:i64 = var
%10:i1 = ne 0:i64, %9
%11:i8 = select %10, %5, 1:i8
%12:i8 = phi %0, %5, %5, %8, %5, %11, %5
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 2:i32
%7:i32 = phi %1, %3, %6
%8:i32 = phi %0, 1:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %0, 0:i8, 0:i8, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 9
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 2:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 0:i8
%7:i8 = phi %1, %3, %6
%8:i8 = phi %0, %7, 0:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, 2:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 11
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 3:i32, 4:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw %0, %1
%3:i64 = addnsw 18446744073709551615:i64, %2
%4:i64 = urem %3, %0
%5:i64 = subnsw %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 1:i32, %4
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %0, 1:i32, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, %3, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %2, %4, 1:i32
%6:i32 = phi %1, 2:i32, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = phi %1, %2, 4:i32
%4:i32 = phi %0, 4:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, %2, %2, %2, %2
%4:i8 = phi %0, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 2:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = phi %3, 0:i32, 1:i32, 0:i32
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, %5, %4
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 2:i32, 0:i32
%5:i32 = phi %1, 1:i32, 1:i32, 1:i32, %4
%6:i1 = var
%7:i32 = select %6, 2:i32, 0:i32
%8:i32 = phi %0, %5, 0:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i24 = var (000000000000xxxxxxxxxxxx) (n)
%2:i24 = addnw 80:i24, %1
%3:i64 = zext %2
%4:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%5:i64 = zext %4
%6:i64 = addnw 32:i64, %5
%7:i64 = var (00000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%8:i64 = mulnw 24:i64, %7
%9:i64 = addnw 32:i64, %8
%10:i64 = phi %0, %3, %6, %9, 32:i64
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var (000000000000000000001100110110xx) (zn)
%6 = block 2
%7 = block 2
%8:i32 = phi %7, 2033:i32, 2544:i32
%9:i32 = phi %6, %8, 0:i32
%10:i32 = phi %3, %5, %9
%11:i32 = phi %2, %10, %9
%12:i32 = phi %1, %11, %10
%13:i32 = phi %0, %12, %9
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %2, 0:i32, %4, %6, %8
%10:i32 = phi %1, 1:i32, 0:i32, %9
%11:i32 = phi %0, 0:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 2650:i32, 2882:i32
%3:i32 = select %1, 2649:i32, 2881:i32
%4:i32 = phi %0, %2, %3
%5:i32 = addnsw 4294964647:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2, %6, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000000000x0) (n)
%1:i32 = lshrexact %0, 1:i32
%2:i8 = trunc %1
%3:i8 = xor 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%4:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%5:i32 = phi %2, %3, %4
%6:i32 = phi %1, %5, 0:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3 = block 6
%4:i32 = phi %3, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 0:i8, %4
%6:i8 = phi %0, 0:i8, %5, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 2048:i32, 1024:i32, 512:i32, 0:i32
%3:i32 = phi %0, 512:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 3
%2 = block 5
%3:i32 = var (00000000000000000000000000000xxx) (n)
%4:i32 = phi %1, 3:i32, %3, 1:i32
%5:i32 = or 16:i32, %4
%6:i32 = or 32:i32, %4
%7:i32 = or 112:i32, %4
%8:i32 = or 96:i32, %4
%9:i32 = or 80:i32, %4
%10:i32 = or 64:i32, %4
%11:i32 = or 48:i32, %4
%12:i32 = phi %0, %5, %6, %7, %8, %9, %10, %11, %4
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000010000xx) (zn)
%3:i32 = or 1024:i32, %2
%4:i32 = or 512:i32, %2
%5:i32 = phi %0, %3, %4
%6:i32 = or 128:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 4
%3:i32 = phi %2, 0:i32, 1:i32, 2:i32, 2:i32
%4:i32 = phi %1, 2:i32, 2:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 0:i32, 2:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 4:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, 8:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 3
%3:i32 = phi %2, 5:i32, 1:i32, 5:i32
%4:i32 = phi %2, 5:i32, 1:i32, 3:i32
%5:i1 = var
%6:i32 = zext %5
%7:i32 = phi %1, %3, %4, %6, %4
%8 = block 6
%9:i32 = var (00000000000000000000000000000xxx) (n)
%10:i32 = or 5:i32, %9
%11:i32 = var (00000000000000000000000000000x00) (n)
%12:i32 = or 3:i32, %11
%13:i32 = var (00000000000000000000000000000x00) (n)
%14:i32 = or 3:i32, %13
%15:i32 = phi %8, 0:i32, %10, %12, %14, 0:i32, 1:i32
%16:i32 = phi %0, 7:i32, %7, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 30:i32, %1
%3:i8 = zext %2
%4 = block 3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %4, 0:i8, %6, 0:i8
%8:i8 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2 = block 2
%3 = block 2
%4:i32 = phi %3, 5:i32, 4:i32
%5:i32 = phi %2, 6:i32, %4
%6:i32 = phi %1, 6:i32, 7:i32, 8:i32, 9:i32, 1:i32, %5
%7:i32 = phi %0, 2:i32, 3:i32, %6, %4, 4:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, %3, 1:i8, %3, %3
%5:i32 = var
%6:i1 = slt 7:i32, %5
%7:i8 = select %6, %4, 1:i8
%8:i8 = phi %0, %4, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5 = block 3
%6:i32 = phi %5, 0:i32, 1:i32, 1:i32
%7 = block 3
%8:i32 = phi %7, 0:i32, 1:i32, 1:i32
%9:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, %2, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 256:i64, 0:i64
%3:i64 = or 16384:i64, %2
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4, %4
%6:i8 = phi %1, 1:i8, %5, %5
%7 = block 3
%8 = block 3
%9:i8 = phi %8, 0:i8, %4, %5
%10 = block 3
%11:i8 = phi %10, 0:i8, %4, %5
%12 = block 3
%13:i8 = phi %12, 0:i8, %4, %5
%14:i8 = phi %7, %9, %11, %13
%15:i8 = phi %0, %6, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 0:i32, 0:i32, 4:i32, 5:i32, 3:i32, 5:i32, 2:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 2:i32, 4:i32, 2:i32, 4:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5:i8 = phi %0, 1:i8, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 7
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%5 = block 4
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = phi %5, %7, 1:i8, 1:i8, %7
%9:i8 = phi %1, %4, %8
%10 = block 2
%11:i32 = var
%12:i1 = eq 28:i32, %11
%13:i8 = select %12, %9, 0:i8
%14:i8 = phi %0, %9, %9, %9, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 3:i32, 1:i32, 3:i32, 0:i32, 2:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 10:i32, %2, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 3:i32, 2:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8
%10:i32 = phi %5, 0:i32, %9
%11 = block 2
%12 = block 2
%13:i32 = phi %12, 1:i32, 0:i32
%14:i32 = phi %11, 0:i32, %13
%15:i32 = phi %0, 0:i32, %4, %10, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 51:i32, 20:i32, 26:i32, 3:i32
%3 = block 3
%4:i32 = phi %3, 51:i32, 27:i32, 3:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 24
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 0:i32, 1:i32
%8:i32 = phi %5, 0:i32, %7
%9:i32 = phi %0, 0:i32, %2, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = phi %1, 64:i8, 37:i8, 37:i8, 37:i8, 37:i8
%3 = block 2
%4:i8 = phi %3, 64:i8, 37:i8
%5:i8 = phi %0, %2, %4, 37:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i1 = var
%2:i32 = zext %1
%3:i1 = var
%4:i32 = zext %3
%5:i1 = var
%6:i32 = zext %5
%7 = block 2
%8:i1 = var
%9:i32 = zext %8
%10:i32 = phi %7, %9, 0:i32
%11:i1 = var
%12:i32 = zext %11
%13:i1 = var
%14:i32 = zext %13
%15:i32 = phi %0, %2, 1:i32, %4, %6, %10, %12, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 18
%1:i24 = var (0000000000000000xxxxxxxx) (n)
%2:i8 = trunc %1
%3:i8 = and 1:i8, %2
%4:i24 = var (0000000000000000xxxxxxxx) (n)
%5:i8 = trunc %4
%6:i8 = and 1:i8, %5
%7:i24 = var (0000000000000000xxxxxxxx) (n)
%8:i8 = trunc %7
%9:i8 = and 1:i8, %8
%10:i24 = var (0000000000000000xxxxxxxx) (n)
%11:i8 = trunc %10
%12:i8 = and 1:i8, %11
%13:i24 = var (0000000000000000xxxxxxxx) (n)
%14:i8 = trunc %13
%15:i8 = and 1:i8, %14
%16:i24 = var (0000000000000000xxxxxxxx) (n)
%17:i8 = trunc %16
%18:i8 = and 1:i8, %17
%19:i24 = var (0000000000000000xxxxxxxx) (n)
%20:i8 = trunc %19
%21:i8 = and 1:i8, %20
%22:i24 = var (0000000000000000xxxxxxxx) (n)
%23:i8 = trunc %22
%24:i8 = and 1:i8, %23
%25:i24 = var (0000000000000000xxxxxxxx) (n)
%26:i8 = trunc %25
%27:i8 = and 1:i8, %26
%28:i24 = var (0000000000000000xxxxxxxx) (n)
%29:i8 = trunc %28
%30:i8 = and 1:i8, %29
%31:i24 = var (0000000000000000xxxxxxxx) (n)
%32:i8 = trunc %31
%33:i8 = and 1:i8, %32
%34:i24 = var (0000000000000000xxxxxxxx) (n)
%35:i8 = trunc %34
%36:i8 = and 1:i8, %35
%37 = block 5
%38 = block 2
%39:i1 = var
%40:i1 = phi %37, 1:i1, %39, 1:i1, 1:i1, 1:i1
%41:i8 = zext %40
%42:i16 = var (000000000000000x) (n)
%43:i8 = trunc %42
%44:i8 = phi %0, %3, %6, %9, %12, 0:i8, %15, %18, %21, %24, %27, %30, %33, %36, %41, 0:i8, 0:i8, 0:i8, %43
infer %44

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 7
%2 = block 2
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8
%6 = block 2
%7:i8 = phi %6, 0:i8, %5
%8:i8 = phi %1, 0:i8, %5, %5, %7, %5, %5, %5
%9 = block 2
%10:i8 = phi %9, 0:i8, %5
%11 = block 2
%12:i8 = phi %11, 0:i8, %5
%13:i8 = phi %0, %8, 0:i8, %10, %5, %12, %5, %5, %5
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%2:i32 = or 33554432:i32, %1
%3:i32 = var (00000000xxxxxxxxxxx0000000000000) (n)
%4:i32 = or 50331648:i32, %3
%5:i32 = phi %0, %2, %4
%6 = block 2
%7:i32 = var
%8:i32 = shl %7, 10:i32
%9:i32 = and 7168:i32, %8
%10:i32 = or %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 2:i32, 2:i32, 0:i32, 2:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i64 = var
%2:i1 = var
%3:i64 = var
%4:i64 = select %2, %1, %3
%5:i64 = phi %0, %1, 4:i64, %1, %1, %1, %4
%6:i64 = add 18446744073709551614:i64, %5
%7:i1 = ult %5, %6
%8:i64 = select %7, %5, %6
%9:i64 = sub %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ult %1, 6:i32
%3:i32 = var
%4:i32 = and 15:i32, %3
%5:i32 = select %2, %1, %4
%6 = block 18
%7:i32 = var
%8:i32 = var
%9:i32 = var
%10:i32 = phi %6, %7, 0:i32, 13:i32, 3:i32, 0:i32, %8, %9, 0:i32, 0:i32, 0:i32, %7, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%11:i32 = and 15:i32, %10
%12:i32 = phi %0, %5, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i32 = phi %1, 312:i32, 312:i32, 309:i32
%3:i32 = phi %0, 0:i32, 0:i32, 0:i32, %2, 0:i32, 309:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 0:i32, 16:i32, 19:i32, 17:i32, 20:i32, 18:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 113:i32, 106:i32, 64:i32
%3:i32 = phi %0, 0:i32, %2, %2, %2, 24:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 53:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000000000000000000000000001x0000000) (zn)
%3 = block 2
%4:i64 = var (00000000000000000000000000000000000000000000000000000000x0000000) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 4:i64, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 49:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i1 = var
%2:i32 = select %1, 38:i32, 34:i32
%3:i32 = select %1, 40:i32, 36:i32
%4:i8 = var
%5:i1 = eq 18:i8, %4
%6:i32 = select %5, %2, 42:i32
%7:i8 = var
%8:i1 = eq 18:i8, %7
%9:i32 = select %8, %3, 42:i32
%10:i32 = phi %0, %2, %3, %6, %9, 42:i32, 32:i32, 32:i32, 42:i32, 42:i32, 42:i32, 42:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 38:i32
%4:i32 = phi %0, 0:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 112:i64
%4:i64 = subnsw 164703072086692425:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i8 = var
%3:i1 = eq 0:i8, %2
%4:i1 = var
%5:i32 = select %4, 3:i32, 2:i32
%6:i32 = select %3, %5, 1:i32
%7 = block 2
%8:i8 = var
%9:i1 = eq 0:i8, %8
%10:i1 = var
%11:i32 = select %10, 3:i32, 2:i32
%12:i32 = select %9, %11, 1:i32
%13:i8 = var (0000000x) (n)
%14:i1 = eq 0:i8, %13
%15:i1 = var
%16:i32 = select %15, 3:i32, 2:i32
%17:i32 = select %14, %16, 1:i32
%18:i8 = var (0000000x) (n)
%19:i1 = eq 0:i8, %18
%20:i32 = select %19, 3:i32, 2:i32
%21:i32 = phi %0, 0:i32, 1:i32, 2:i32, %6, 0:i32, %12, 0:i32, %17, 0:i32, %20, 0:i32
infer %21

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 8:i32, 0:i32, 3:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32
%4:i32 = shl 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 0:i32, 1251:i32, 1256:i32, 766:i32, 772:i32
%3:i32 = phi %1, 0:i32, 1291:i32, 1298:i32, 830:i32, 836:i32
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 5:i32, 1:i32, 5:i32
%3:i32 = phi %1, 5:i32, 1:i32, 3:i32
%4:i1 = var
%5:i32 = zext %4
%6:i32 = phi %0, %2, %3, %5, %3
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 2:i32, %1
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, 0:i32, 13:i32, %3, 12:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i1 = eq 28:i32, %3
%5 = block 2
%6 = block 7
%7 = block 4
%8:i8 = var (0000000x) (n)
%9:i8 = phi %6, %8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%10 = block 2
%11:i8 = var (0000000x) (n)
%12:i8 = var (0000000x) (n)
%13:i8 = phi %10, %11, %12
%14:i8 = phi %5, %9, %13
%15:i8 = select %4, %14, 0:i8
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var (0000000000000xxx) (zn)
%3:i16 = var (0000000000001xxx) (zn)
%4:i16 = phi %1, %2, %3
%5:i16 = or 16:i16, %4
%6:i16 = phi %0, %4, %5
%7:i1 = ult 511:i16, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i8 = var (0000000x) (n)
%3:i8 = shlnw %2, 3:i8
%4:i8 = or %1, %3
%5:i8 = phi %0, %1, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = xor 1:i1, %1
%3:i8 = zext %2
%4 = block 2
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = var (0000000x) (n)
%8:i8 = phi %5, %6, %7
%9:i1 = var
%10:i8 = zext %9
%11:i8 = phi %4, %8, %10
%12:i8 = phi %0, %3, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, 2:i32, 0:i32, 1:i32, 0:i32, 1:i32, 0:i32, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %1, 0:i32, %3, %5, 1:i32, 1:i32, 1:i32, 1:i32, %7
%9:i32 = phi %0, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, %2
%4:i8 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = or %0, %1
%3:i32 = var
%4:i32 = lshr %3, 1:i32
%5:i32 = addnw %2, %4
%6:i32 = addnw 2:i32, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var (00000000000000xx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (00000000000000000000000000000xxx) (zn)
%5:i32 = phi %2, 2:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = zext %1
%3 = block 3
%4 = block 6
%5 = block 11
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, %6, %2, %2, %2, %2, %2
%8:i32 = phi %3, %7, %2, %2
%9:i32 = phi %0, %2, %2, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000xxxx01x1) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000x0x00x0) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 91:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %1, 0:i32, %3
%5:i32 = addnsw 1:i32, %4
%6:i32 = phi %0, %5, %4, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8
%10:i32 = phi %1, %5, %9
%11:i32 = phi %0, 0:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 1:i32, 1:i32, 2:i32, %3, 1:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10 = block 2
%11:i32 = phi %10, 1:i32, 0:i32
%12:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3, %7, %9, %11
%13:i32 = phi %0, 0:i32, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 2:i32, 2:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = var (00000000000000000000000000000x01) (zn)
%4:i32 = select %2, 0:i32, %3
%5:i32 = phi %1, %4, 2:i32, 1:i32
%6:i32 = phi %0, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32, 1:i32, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000000000x000) (n)
%2:i32 = lshrexact %1, 3:i32
%3:i32 = or 98:i32, %2
%4:i32 = phi %0, %3, 99:i32, 98:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 2:i32, 2:i32, 1:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2 = block 2
%3 = block 5
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8
%6:i8 = phi %1, 1:i8, %5, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%7:i8 = phi %0, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, 0:i8, %5
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 144:i64
%4:i64 = subnsw 128102389400760775:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3 = block 7
%4:i8 = phi %3, %2, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, %2, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i8 = zext %1
%3 = block 6
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %3, %5, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%7:i8 = phi %0, %2, %6, %6, %6, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %2, %4, 3:i32
%6:i32 = phi %1, 3:i32, %5
%7:i32 = phi %0, 3:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = cttz %1
%3:i32 = phi %0, 32:i32, %2
%4:i32 = shl 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 3381:i32
%3:i32 = phi %0, 0:i32, 3383:i32, 3383:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i8 = zext %1
%3 = block 4
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %3, %5, 0:i8, 0:i8, 0:i8
%7:i8 = phi %0, %2, %6, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 55:i32, 55:i32, 40:i32
%3:i32 = phi %0, %2, %2, %2, 40:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 2:i32, 1:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 5
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 19
%3:i32 = var (000000000000000000000000101000x1) (zn)
%4:i32 = var (000000000000000000000000101000x0) (zn)
%5:i32 = phi %2, 0:i32, 0:i32, 161:i32, 163:i32, %3, 0:i32, 161:i32, 163:i32, 0:i32, 160:i32, 162:i32, %4, 0:i32, 160:i32, 162:i32, 94:i32, 95:i32, 96:i32, 97:i32
%6:i1 = var
%7:i32 = select %6, 114:i32, 113:i32
%8:i32 = phi %1, %5, %7, %7, %7, %7
%9:i32 = phi %0, %8, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32
%3 = block 4
%4:i32 = phi %3, 0:i32, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 18
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7 = block 2
%8 = block 2
%9 = block 3
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = phi %8, 0:i32, %10
%12:i32 = phi %7, 0:i32, %11
%13 = block 2
%14:i32 = phi %13, 1:i32, 0:i32
%15 = block 2
%16:i32 = phi %15, 1:i32, 0:i32
%17:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %4, %6, %12, %14, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 2:i32, 2:i32, %3
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 5:i32, 0:i32
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i32 = phi %1, 0:i32, 16:i32, 8:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, 2:i32, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 20
%1:i1 = var
%2:i32 = select %1, 7556:i32, 7554:i32
%3:i32 = select %1, 8026:i32, 8024:i32
%4:i1 = var
%5:i32 = var (000000000000000000011101011xxx01) (zn)
%6:i32 = select %4, 7544:i32, %5
%7:i32 = var (000000000000000000011101011x01x0) (zn)
%8:i32 = select %4, 7541:i32, %7
%9:i32 = select %1, %6, %8
%10:i32 = var (0000000000000000000111110xxx1x11) (zn)
%11:i32 = select %4, 8014:i32, %10
%12:i32 = var (0000000000000000000111110xxx1xx0) (zn)
%13:i32 = select %4, 8011:i32, %12
%14:i32 = select %1, %11, %13
%15 = block 4
%16:i1 = var
%17:i32 = var (0000000000000000000xx1xx1x0xx11x) (zn)
%18:i32 = select %16, 7532:i32, %17
%19:i32 = var (0000000000000000000xx1xx1x0xx1xx) (zn)
%20:i32 = select %16, 7529:i32, %19
%21:i32 = phi %15, 7531:i32, %18, 7528:i32, %20
%22 = block 4
%23:i32 = var (0000000000000000000xx1110x1x0x0x) (zn)
%24:i32 = select %16, 7532:i32, %23
%25:i32 = var (0000000000000000000xx1110x1x00xx) (zn)
%26:i32 = select %16, 7999:i32, %25
%27:i32 = phi %22, 8001:i32, %24, 7998:i32, %26
%28:i32 = select %1, 1300:i32, 2851:i32
%29:i32 = select %1, 1720:i32, 1712:i32
%30:i32 = var (0000000000000000000xx11xxx001x00) (zn)
%31:i32 = select %16, 7873:i32, %30
%32:i32 = var (0000000000000000000xx11xxx00xx11) (zn)
%33:i32 = select %16, 7871:i32, %32
%34:i32 = select %1, %31, %33
%35:i32 = select %1, 1497:i32, 1496:i32
%36:i32 = select %1, 1298:i32, 2844:i32
%37:i32 = select %1, 1213:i32, 1215:i32
%38:i32 = select %1, 1700:i32, 1687:i32
%39:i32 = var (0000000000000000000xx111000x1x10) (zn)
%40:i32 = select %16, 7940:i32, %39
%41:i32 = var (0000000000000000000xx111000x1x01) (zn)
%42:i32 = select %16, 7938:i32, %41
%43:i32 = select %1, %40, %42
%44:i32 = select %1, 1295:i32, 2843:i32
%45:i32 = select %1, 1208:i32, 1210:i32
%46:i32 = select %1, 1218:i32, 1220:i32
%47:i32 = select %1, 1674:i32, 1667:i32
%48:i32 = select %1, 1742:i32, 1735:i32
%49:i32 = select %1, 1741:i32, 1734:i32
%50:i32 = phi %0, %2, %3, %9, %14, %21, %27, %28, %29, %34, %35, %36, %37, %38, %43, %44, %45, %46, %47, %48, %49
infer %50

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000x0x01) (zn)
%3:i32 = phi %1, %2, 18:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 1:i32
%3:i64 = zext %2
%4 = block 2
%5:i32 = var
%6:i64 = zext %5
%7:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%8:i64 = phi %4, %6, %7
%9:i64 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 5:i32
%4:i32 = phi %0, 1:i32, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 30
%2 = block 2
%3:i32 = phi %2, 42:i32, 25:i32
%4 = block 2
%5:i32 = phi %4, 37:i32, 31:i32
%6:i1 = var
%7:i32 = select %6, 1:i32, 34:i32
%8 = block 2
%9:i32 = phi %8, 55:i32, 1:i32
%10:i32 = phi %1, 0:i32, 27:i32, 43:i32, %3, 44:i32, 45:i32, 28:i32, 38:i32, %5, 40:i32, 39:i32, 41:i32, 36:i32, 28:i32, 29:i32, 31:i32, 36:i32, 41:i32, 27:i32, 25:i32, 26:i32, 12:i32, 20:i32, 21:i32, 22:i32, 1:i32, 32:i32, 33:i32, %7, %9
%11:i32 = phi %0, 4:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = cttz %1
%3:i32 = trunc %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 1:i32, %7
%9:i32 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, %4, 1:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (zn)
%3:i64 = var (000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (zn)
%4:i64 = phi %1, %2, %3
%5:i64 = addnsw 16:i64, %4
%6:i64 = phi %0, %5, %4
%7:i64 = add 16:i64, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%1:i64 = var (0000000000000000000000000000000000000x00x0x000000xxx000000000000) (n)
%2:i64 = or %0, %1
%3:i32 = trunc %2
%4:i32 = shl %3, 16:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 5:i32, 4:i32
%4:i32 = phi %1, 6:i32, %3
%5:i32 = phi %0, 6:i32, 7:i32, 8:i32, 9:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 1:i32, %0
%2:i32 = ctlz %1
%3:i32 = subnsw 32:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 4
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, %4, 0:i32
%6:i32 = phi %1, %5, 0:i32
%7 = block 2
%8 = block 3
%9:i32 = phi %8, 0:i32, 3:i32, 0:i32
%10:i32 = phi %7, 0:i32, %9
%11:i32 = phi %0, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11 = block 2
%12:i32 = phi %11, 1:i32, 0:i32
%13:i32 = phi %0, 0:i32, %4, %6, %8, %10, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i1 = var
%4:i8 = zext %3
%5:i8 = or %2, %4
%6:i8 = phi %0, %5, %2, 1:i8, %2
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 39
%3:i32 = phi %2, 0:i32, 16:i32, 0:i32, 0:i32, 123:i32, 122:i32, 0:i32, 36:i32, 35:i32, 117:i32, 33:i32, 32:i32, 0:i32, 20:i32, 19:i32, 116:i32, 17:i32, 16:i32, 0:i32, 67:i32, 66:i32, 65:i32, 68:i32, 64:i32, 70:i32, 0:i32, 83:i32, 82:i32, 81:i32, 80:i32, 86:i32, 0:i32, 52:i32, 51:i32, 50:i32, 49:i32, 48:i32, 32:i32, 0:i32
%4:i32 = phi %1, 18:i32, %3, %3
%5:i32 = phi %0, 34:i32, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 0:i32, 6:i32, 8:i32, 0:i32, 0:i32
%3:i1 = ne 0:i32, %2
%4:i32 = select %3, %2, 10:i32
%5:i32 = phi %0, 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (zn)
%3 = block 3
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = addnsw 1:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 31
%1 = block 10
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 2:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 40:i32, 55:i32
%4:i32 = phi %1, 40:i32, %3
%5:i32 = phi %0, 40:i32, %4, 55:i32, 40:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = xor 1:i32, %2
%4:i32 = var
%5:i32 = and 7:i32, %4
%6:i32 = phi %1, %3, %5, %5
%7:i32 = phi %0, 1:i32, 1:i32, 0:i32, 3:i32, 2:i32, 0:i32, %6, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %2, %4, 0:i8, %4
%6:i8 = phi %1, %5, %4, %4
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 2:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, %5, 0:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 380:i32, 409:i32, 380:i32
%3 = block 4
%4:i1 = var
%5:i32 = select %4, 380:i32, %2
%6:i32 = phi %3, %2, %2, %2, %5
%7:i32 = phi %0, %2, %2, %2, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3, 0:i32
%5:i32 = phi %0, 1:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 1:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 2:i32
%6:i32 = phi %0, 2:i32, %3, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, 1:i8, %5
%7:i8 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, %2, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32
%3 = block 3
%4:i32 = phi %3, %2, 1:i32, 1:i32
%5:i32 = phi %0, %2, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = shlnw %1, 32:i64
%3:i64 = or 4294967295:i64, %2
%4:i64 = var (000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = shlnw %4, 32:i64
%6:i32 = var
%7:i64 = zext %6
%8:i64 = or %5, %7
%9:i64 = var (000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%10:i64 = shlnw %9, 32:i64
%11:i32 = var
%12:i64 = zext %11
%13:i64 = or %10, %12
%14:i64 = var (000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%15:i64 = shlnw %14, 32:i64
%16:i32 = var
%17:i64 = zext %16
%18:i64 = or %15, %17
%19:i64 = phi %0, %3, %8, %13, %18
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, %2, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 2:i32, %3
%5:i32 = phi %0, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var
%2:i1 = eq 20:i16, %1
%3:i8 = zext %2
%4 = block 2
%5 = block 4
%6:i8 = phi %5, 1:i8, 0:i8, 0:i8, 0:i8
%7:i8 = phi %4, %6, 1:i8
%8:i8 = phi %0, %3, %7, 0:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i8 = var (0000xxxx) (n)
%3:i8 = xor 15:i8, %2
%4:i8 = phi %1, %3, 15:i8
%5 = block 2
%6:i8 = var (0000xxxx) (n)
%7:i8 = xor 15:i8, %6
%8:i8 = phi %5, %7, 15:i8
%9:i8 = var
%10:i8 = and 15:i8, %9
%11:i8 = xor 15:i8, %10
%12:i8 = var
%13:i8 = and 15:i8, %12
%14:i8 = xor 15:i8, %13
%15 = block 2
%16:i8 = var (0000xxxx) (n)
%17:i8 = xor 15:i8, %16
%18:i8 = phi %15, %17, 15:i8
%19 = block 2
%20:i8 = var (0000xxxx) (n)
%21:i8 = xor 15:i8, %20
%22:i8 = phi %19, %21, 15:i8
%23:i8 = var
%24:i8 = and 15:i8, %23
%25:i8 = xor 15:i8, %24
%26:i8 = var
%27:i8 = and 15:i8, %26
%28:i8 = xor 15:i8, %27
%29 = block 2
%30:i8 = var (0000xxxx) (n)
%31:i8 = xor 15:i8, %30
%32:i8 = phi %29, %31, 15:i8
%33 = block 2
%34:i8 = var (0000xxxx) (n)
%35:i8 = xor 15:i8, %34
%36:i8 = phi %33, %35, 15:i8
%37:i8 = phi %0, %4, %8, %11, %14, %18, %22, %25, %28, %32, %36, 15:i8
infer %37

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2 = block 14
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%4 = block 4
%5:i8 = phi %4, %3, 0:i8, 0:i8, %3
%6:i8 = phi %1, %3, %5, %3, %3, %3, %3, %3
%7:i8 = phi %0, %6, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 4:i32, 3:i32
%4:i32 = phi %1, 2:i32, %3, 1:i32
%5:i32 = phi %0, 4:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 1:i32, 1:i32, %4, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 11
%4 = block 2
%5:i32 = phi %4, 1:i32, 2:i32
%6:i32 = phi %3, %5, 1:i32, 2:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32
%7:i32 = phi %0, 1:i32, 2:i32, 0:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, %4, 1:i32
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 9:i32, 8:i32
%4:i32 = phi %1, %3, 8:i32
%5:i32 = phi %0, %4, %3
%6:i32 = shlnsw %5, 24:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5 = block 2
%6:i8 = phi %5, 0:i8, 1:i8
%7:i8 = phi %0, 0:i8, %2, 1:i8, 1:i8, %4, 1:i8, %6, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9 = block 2
%10:i32 = phi %9, 0:i32, 1:i32
%11:i32 = phi %0, 0:i32, %6, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000x1) (zn)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 17:i32, 1:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 1:i32, 3:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i8 = xor 1:i8, %2
%4:i8 = phi %0, 1:i8, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 6
%2:i8 = var (0000000x) (n)
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %1, %2, %4, %4, %4, %4, %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = and %5, %7
%9:i8 = phi %0, %8, %5, %5, %5, %5, %5
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = phi %1, %2, 1:i32
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 8
%3:i32 = phi %2, 0:i32, 2:i32, 0:i32, 4:i32, 0:i32, 2:i32, 3:i32, 0:i32
%4:i1 = var
%5:i32 = select %4, 5:i32, 0:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i1 = var
%4:i32 = select %3, 3:i32, 1:i32
%5:i32 = phi %0, 0:i32, 3:i32, 2:i32, %2, 0:i32, %4, %4
%6:i32 = or 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000)
%1:i64 = ashrexact %0, 32:i64
%2:i32 = var
%3:i64 = sext %2
%4:i64 = or %1, %3
%5:i64 = subnsw 0:i64, %4
%6:i64 = and %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i16 = var (000000x000000000) (n)
%3:i16 = phi %1, 0:i16, 0:i16, %2
%4:i1 = var
%5:i16 = var (000000x000001000) (zn)
%6:i16 = select %4, %5, %3
%7:i16 = phi %0, %3, %3, %6
%8:i16 = or 256:i16, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000xxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = var (00000000000000000000000x00000000) (n)
%3:i32 = or %1, %2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = shlnw %4, 13:i32
%6:i32 = or %3, %5
%7:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%8:i32 = shlnw %7, 9:i32
%9:i32 = or 8192:i32, %8
%10:i32 = phi %0, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 8
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000000000x000) (n)
%2:i32 = lshrexact %1, 3:i32
%3:i32 = addnw 7:i32, %2
%4:i32 = phi %0, %3, 14:i32, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = lshr %2, 3:i64
%4:i64 = phi %1, %3, 0:i64
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
%6:i32 = var (000000000000000000000000xxxxxxxx) (n)
%7:i32 = shlnw %6, 8:i32
%8:i8 = var
%9:i32 = zext %8
%10:i32 = or %7, %9
%11:i32 = phi %0, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (zn)
%3 = block 3
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, %4, %4, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = ctlz %1
%3:i32 = trunc %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 2:i32, 1:i32, 1:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 2:i32, 1:i32
%5 = block 2
%6:i32 = var (00000000000000000000000000000x0x) (n)
%7:i32 = phi %5, %6, 2:i32
%8:i32 = phi %0, 2:i32, %2, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, %2, 0:i8
%4:i8 = phi %0, 0:i8, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4, 0:i8
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, %7, %5
%9:i8 = phi %1, %5, %5, %8, %5
%10 = block 2
%11:i8 = phi %10, 0:i8, %9
%12:i8 = phi %0, %9, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 4
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = eq 0:i32, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = select %2, 5:i32, %4
%6:i32 = phi %0, %5, 1:i32, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %3, %4, 2:i32
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 12
%2:i1 = var
%3:i16 = select %2, 15:i16, 0:i16
%4:i1 = var
%5:i16 = select %4, 0:i16, 6:i16
%6:i16 = select %4, 7:i16, 0:i16
%7:i1 = var
%8:i16 = select %7, 8:i16, 9:i16
%9:i16 = phi %1, %3, %5, %6, %8, 1:i16, 2:i16, 3:i16, 4:i16, 5:i16, 10:i16, 14:i16, 0:i16
%10 = block 4
%11:i64 = var
%12:i64 = var
%13:i1 = ne %11, %12
%14:i16 = or 32:i16, %9
%15:i16 = select %13, %14, %9
%16:i16 = phi %0, %9, %9, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 2:i32, 1:i32
%5:i32 = phi %0, 1:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 30
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 1211:i32, 1221:i32
%4:i8 = var (0000000x) (n)
%5:i1 = ne 0:i8, %4
%6:i32 = select %5, 1206:i32, 1221:i32
%7:i8 = var (0000000x) (n)
%8:i1 = ne 0:i8, %7
%9:i32 = select %8, 1209:i32, 1219:i32
%10:i8 = var (0000000x) (n)
%11:i1 = ne 0:i8, %10
%12:i32 = select %11, 1204:i32, 1219:i32
%13:i32 = var
%14:i1 = slt 8:i32, %13
%15:i1 = var
%16:i32 = select %15, 7868:i32, 1800:i32
%17:i32 = select %14, 7866:i32, %16
%18:i32 = select %15, 7479:i32, 1727:i32
%19:i32 = select %14, 7477:i32, %18
%20:i32 = select %15, 7934:i32, 1816:i32
%21:i32 = select %14, 7932:i32, %20
%22:i32 = select %15, 7598:i32, 1765:i32
%23:i32 = select %14, 7596:i32, %22
%24:i8 = var (0000000x) (n)
%25:i1 = ne 0:i8, %24
%26:i32 = select %25, 1212:i32, 1217:i32
%27:i32 = var
%28:i1 = slt 6:i32, %27
%29:i32 = select %28, 7567:i32, 1752:i32
%30:i32 = phi %0, 1216:i32, %3, 1221:i32, %6, 1214:i32, %9, 1219:i32, %12, %17, 1484:i32, %19, 1490:i32, %21, %23, %26, 7559:i32, 7559:i32, 7526:i32, 7548:i32, 7559:i32, %29, 7535:i32, 1498:i32, 1743:i32, 1743:i32, 1744:i32, 1675:i32, 1701:i32, 1721:i32, 1743:i32
infer %30

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 318:i32, 317:i32, 318:i32, 318:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 317:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8, 1:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000xxxxxxxxxxxxxxx) (n)
%2:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 16777216:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 4
%2:i32 = phi %1, 2:i32, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, 0:i32, 0:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i1 = var
%3:i32 = select %2, 3:i32, 1:i32
%4:i32 = phi %1, 3:i32, %3, 3:i32, 2:i32, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, %2
%5:i8 = phi %0, %2, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 304:i64
%4:i64 = subnsw 60680079189834051:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i64 = var
%3:i64 = var
%4:i64 = select %1, %2, %3
%5:i64 = var
%6:i64 = phi %0, %4, %5
%7:i1 = ult 18446744073709551583:i64, %6
%8:i64 = add 32:i64, %6
%9:i64 = select %7, 18446744073709551615:i64, %8
%10:i64 = sub %9, %6
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i32 = var (000000000000000000000000000000xx) (n)
%2:i32 = phi %0, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, %1, 2:i32, 0:i32, 0:i32
%3:i16 = trunc %2
%4:i16 = shlnw %3, 2:i16
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 4
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4, 0:i8
%6:i8 = phi %1, %5, 0:i8
%7:i8 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6 = block 3
%7:i8 = phi %6, 1:i8, %5, %5
%8:i8 = phi %1, %5, 1:i8, %7
%9:i8 = phi %0, 1:i8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 244:i32, 0:i32, 0:i32
%4:i32 = phi %1, 245:i32, %3, 0:i32
%5:i32 = phi %0, 243:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (zn)
%3:i32 = var (00000000000000000000000000000xxx) (zn)
%4:i32 = phi %1, %2, %3
%5:i32 = addnsw 1:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 933:i32, 1743:i32
%3:i32 = phi %0, 933:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4 = block 2
%5:i8 = phi %4, 0:i8, %2
%6:i8 = phi %3, %5, %2
%7:i8 = phi %0, %2, %6, %2
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 2:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, 208:i32, 0:i32, %3, 0:i32
%5:i32 = phi %0, %4, 208:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000000x0) (n)
%2:i32 = var (00000000000000000xxxxxxxxxxxxx0x) (n)
%3:i32 = or %1, %2
%4:i32 = var (00000000000000000xxxxxxxxxxxxx0x) (n)
%5:i32 = or %1, %4
%6:i32 = phi %0, %3, %5
%7:i16 = trunc %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8
%3 = block 4
%4:i8 = phi %3, 0:i8, 1:i8, 1:i8, 1:i8
%5:i8 = phi %0, %2, %4, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 1:i1, %2
%4:i8 = zext %3
%5 = block 2
%6 = block 2
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %5, %8, 0:i8
%10:i8 = phi %0, %4, %9, %8
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i64 = var
%2:i64 = srem %1, 8:i64
%3:i1 = eq 0:i64, %2
%4:i64 = subnsw 8:i64, %2
%5:i64 = addnsw 8:i64, %4
%6:i64 = select %3, 8:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 2:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 55:i32, 55:i32, 40:i32, 40:i32
%3:i32 = phi %0, %2, 55:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000xxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = ctlz %1
%3:i32 = var (000000000000000000000000000xxxxx) (n)
%4:i32 = or 32:i32, %3
%5:i32 = phi %0, %2, %4
%6:i32 = addnsw 4294967284:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = add 18446744073709551612:i64, %0
%2:i1 = ult %1, 12:i64
%3:i64 = select %2, %1, 12:i64
%4:i1 = ult 16:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 6:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, 1:i32, 1:i32, 0:i32, %3
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 1:i32, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 5
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %2, %5, 0:i8
%7:i8 = phi %1, %6, %5, 0:i8
%8:i8 = phi %0, %7, 0:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 17
%2 = block 3
%3:i1 = var
%4:i32 = var (00000000000000000000000x0xx0000x) (n)
%5:i32 = select %3, 347:i32, %4
%6:i32 = phi %1, 0:i32, 354:i32, 356:i32, 355:i32, 348:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %5, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%7:i32 = phi %0, %6, 354:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxx00000000)
%3:i32 = and 256:i32, %2
%4:i32 = xor 256:i32, %3
%5:i32 = or 512:i32, %4
%6:i32 = or 1024:i32, %4
%7:i32 = phi %1, %5, %6
%8:i32 = phi %0, %7, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 4
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8
%6:i8 = phi %1, %5, 0:i8
%7:i8 = phi %0, 1:i8, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = xor 1:i32, %2
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = xor 1:i32, %5
%7:i32 = phi %4, 1:i32, %6
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = or 50:i32, %2
%4:i32 = phi %0, %3, 70:i32, 65:i32, 65:i32, 65:i32, 65:i32, 70:i32, 70:i32, 70:i32, 70:i32, 70:i32, 70:i32, 70:i32, 70:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8
%10:i32 = phi %1, 2:i32, %5, %9
%11:i32 = phi %0, 1:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6 = block 2
%7 = block 3
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8
%10:i32 = phi %1, 1:i32, 0:i32, %3, %5, %9
%11:i32 = phi %0, 1:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 518:i32, 262:i32
%4:i32 = phi %1, 773:i32, %3
%5 = block 3
%6:i32 = var (0000000000000000000000xx00000000) (znp)
%7:i32 = or 5:i32, %6
%8:i32 = or 16:i32, %6
%9 = block 2
%10:i32 = var (0000000000000000000000xx00001000) (zn)
%11:i32 = var (0000000000000000000000xx00000110) (zn)
%12:i32 = phi %9, %10, %11
%13:i32 = phi %5, %7, %8, %12
%14:i32 = phi %0, %4, %13, 0:i32
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var (00000000000000x0) (n)
%2:i16 = var (000000000000000x) (n)
%3:i16 = or %1, %2
%4:i16 = or 4:i16, %3
%5:i16 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 5
%2 = block 7
%3:i32 = phi %2, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 5:i32, 0:i32
%4:i32 = phi %1, %3, 4:i32, 3:i32, 2:i32, 1:i32
%5:i32 = phi %0, 7:i32, 5:i32, 1:i32, %4, 8:i32, 5:i32, 6:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 3:i32
%4:i32 = phi %1, %3, 0:i32
%5 = block 3
%6 = block 3
%7:i32 = phi %6, 2:i32, 3:i32, 3:i32
%8:i32 = phi %5, %7, 0:i32, 0:i32
%9:i32 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 3:i32, 0:i32
%4:i32 = phi %1, 0:i32, 0:i32, %3
%5 = block 3
%6:i1 = var
%7:i32 = select %6, 3:i32, 0:i32
%8:i32 = phi %5, 0:i32, 0:i32, %7
%9 = block 3
%10:i1 = var
%11:i32 = select %10, 3:i32, 0:i32
%12:i32 = phi %9, 0:i32, 0:i32, %11
%13:i32 = phi %0, 0:i32, 3:i32, %4, %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 0:i8
%7:i8 = phi %3, %6, 1:i8
%8:i8 = phi %0, 0:i8, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 20
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = phi %2, %5, %5, %7
%9:i8 = phi %1, %8, %5, %5
%10 = block 3
%11 = block 2
%12:i8 = phi %11, 0:i8, %9
%13:i8 = phi %10, %12, %9, %9
%14:i8 = phi %0, %9, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 4827:i32, 4837:i32
%4:i32 = phi %1, %3, 4829:i32
%5:i32 = phi %0, %4, 4829:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = phi %0, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, 0:i32
%4:i16 = trunc %3
%5:i16 = shl %4, 3:i16
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i32 = lshr %1, 31:i32
%3:i32 = addnw 2683:i32, %2
%4:i32 = addnw 2899:i32, %2
%5:i32 = phi %0, %3, 268:i32, %4, 524:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %2, %4, 0:i32
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 1:i32, 1:i32
%4:i32 = phi %0, 2:i32, %3, 1:i32, 2:i32, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 0:i32, 2:i32, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = or 4:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, %3, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000x000) (n)
%1:i32 = shl 1:i32, %0
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4:i32, 3:i32
%3:i32 = phi %0, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 0:i32, 2:i32, 1:i32, 2:i32, 2:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 18:i32
%3:i32 = phi %0, 1:i32, 1:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 15
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 2:i32, 2:i32, 3:i32, 3:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 14
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3 = block 4
%4:i8 = phi %3, %2, 0:i8, 0:i8, %2
%5:i8 = phi %0, %2, %4, %2, %2, %2, %2, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7 = block 2
%8:i32 = phi %7, 0:i32, 1:i32
%9:i32 = phi %0, 0:i32, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8
%10 = block 2
%11 = block 2
%12:i32 = var (0000000000000000000000000000000x) (n)
%13:i32 = phi %10, 0:i32, %12
%14:i32 = phi %1, 0:i32, %5, %9, %13
%15 = block 2
%16 = block 2
%17:i32 = phi %16, 1:i32, 0:i32
%18:i32 = phi %15, 0:i32, %17
%19:i32 = phi %0, %14, %18
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i1 = var
%3:i32 = select %2, 38:i32, 34:i32
%4:i32 = select %2, 40:i32, 36:i32
%5:i32 = phi %1, 42:i32, %3, %4, %3, 42:i32, %4, 42:i32, 32:i32
%6:i32 = phi %0, %5, 42:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = xor 1:i1, %1
%3:i8 = zext %2
%4 = block 2
%5:i8 = phi %4, %3, 1:i8
%6:i8 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 26:i32
%4:i32 = phi %0, 0:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 0:i8, 0:i8, %4
%6:i8 = phi %0, 0:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, %3, 2:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 0:i8, %4, %4
%6:i8 = phi %0, 0:i8, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, 1:i8, %5
%7:i8 = phi %0, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 3:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i8 = var
%2:i32 = zext %1
%3:i32 = and 7:i32, %2
%4:i32 = var (000000000000000000000000000xxxx0) (n)
%5:i32 = or 32:i32, %4
%6:i32 = or %3, %5
%7:i32 = phi %0, 0:i32, %3, %6, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 26
%2:i1 = var
%3:i32 = zext %2
%4 = block 4
%5:i32 = phi %4, 1:i32, 0:i32, 0:i32, 1:i32
%6 = block 2
%7:i1 = var
%8:i32 = zext %7
%9:i1 = var
%10:i32 = zext %9
%11:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32, 0:i32, %3, 0:i32, 1:i32, 2:i32, 1:i32, 1:i32, %5, 0:i32, %8, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %10, 1:i32, 0:i32, 0:i32, 2:i32, 2:i32
%12:i32 = phi %0, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, %11, 0:i32, 0:i32
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = sub %1, %2
%4 = block 2
%5:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i64 = phi %4, %5, 0:i64
%7:i1 = ult %3, %6
%8:i64 = select %7, %3, %6
%9:i64 = phi %0, %8, 0:i64, 0:i64
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or %1, %2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = or %4, %5
%7:i32 = phi %0, %3, %6
%8:i8 = trunc %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, 2:i32, 0:i32, 1:i32, 0:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = phi %0, %3, 63:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 9:i32, %2, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 1456:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 12669467083591725:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 12669467083591725:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 9
%2 = block 3
%3 = block 5
%4:i32 = phi %3, 268:i32, 272:i32, 265:i32, 269:i32, 263:i32
%5:i32 = phi %2, 273:i32, %4, %4
%6:i32 = phi %1, 99:i32, 99:i32, 265:i32, 269:i32, 265:i32, 269:i32, 263:i32, %5, %4
%7:i32 = phi %0, 267:i32, 271:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, %2
%7:i8 = phi %3, %2, %6
%8:i8 = phi %0, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i16 = phi %1, 0:i16, 74:i16, 48:i16, 81:i16, 59:i16, 54:i16, 52:i16
%3:i16 = phi %0, 10:i16, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11 = block 2
%12 = block 2
%13:i32 = phi %12, 1:i32, 0:i32
%14:i32 = phi %11, 0:i32, %13
%15 = block 2
%16:i32 = phi %15, 1:i32, 0:i32
%17 = block 2
%18:i32 = phi %17, 1:i32, 0:i32
%19:i32 = phi %0, 0:i32, 1:i32, 1:i32, %6, %8, 1:i32, %10, %14, 1:i32, %16, %18
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var
%2:i32 = lshr %1, 4:i32
%3:i32 = and 3:i32, %2
%4 = block 2
%5 = block 3
%6:i32 = phi %5, 2:i32, 2:i32, 0:i32
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %0, %3, %3, %3, %7, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = var (0000000x) (n)
%3:i1 = ne 0:i8, %2
%4:i32 = select %3, 115:i32, 23:i32
%5:i8 = var (0000000x) (n)
%6:i1 = ne 0:i8, %5
%7:i32 = select %6, 114:i32, 234:i32
%8:i32 = phi %1, 22:i32, %4, %7, 19:i32
%9:i32 = select %3, 116:i32, 21:i32
%10:i32 = select %6, 113:i32, 233:i32
%11 = block 2
%12 = block 2
%13:i1 = var
%14:i1 = phi %11, 0:i1, %13
%15:i32 = select %14, 24:i32, 22:i32
%16:i32 = phi %0, %8, 19:i32, %9, %10, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, %2, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 10
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (znp)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = addnsw 1:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (zn)
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = addnsw 2:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %1, %4, %6
%8:i1 = var
%9:i8 = zext %8
%10:i8 = phi %0, %7, %9, %7
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 10
%2:i32 = phi %1, 1835:i32, 1871:i32, 1859:i32, 1895:i32, 1841:i32, 1829:i32, 1877:i32, 1865:i32, 1853:i32, 1889:i32
%3 = block 10
%4:i32 = phi %3, 1834:i32, 1870:i32, 1858:i32, 1894:i32, 1840:i32, 1828:i32, 1876:i32, 1864:i32, 1852:i32, 1888:i32
%5 = block 20
%6:i32 = phi %5, 1833:i32, 1869:i32, 1857:i32, 1893:i32, 1839:i32, 1827:i32, 1875:i32, 1863:i32, 1851:i32, 1887:i32, 1832:i32, 1868:i32, 1856:i32, 1892:i32, 1838:i32, 1826:i32, 1874:i32, 1862:i32, 1850:i32, 1886:i32
%7 = block 20
%8:i32 = phi %7, 1831:i32, 1867:i32, 1855:i32, 1891:i32, 1837:i32, 1825:i32, 1873:i32, 1861:i32, 1849:i32, 1885:i32, 1830:i32, 1866:i32, 1854:i32, 1890:i32, 1836:i32, 1824:i32, 1872:i32, 1860:i32, 1848:i32, 1884:i32
%9:i32 = phi %0, %2, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 5
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = and 8191:i32, %2
%4:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = and 8191:i32, %4
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3, 0:i32
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = var (0000000x) (n)
%6:i8 = phi %2, %4, %4, %5
%7:i8 = var (0000000x) (n)
%8:i8 = phi %1, %6, %6, %7
%9:i8 = var (0000000x) (n)
%10:i8 = phi %0, %8, %8, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 511:i32, %0
%2:i32 = var (000000000000000000xxxxx000000000) (n)
%3:i32 = var (0000000000000000xx00000000000000) (n)
%4:i32 = or %2, %3
%5:i32 = or %1, %4
%6 = block 3
%7 = block 3
%8:i32 = phi %7, 1:i32, 1:i32, 2:i32
%9:i32 = phi %6, 0:i32, 0:i32, %8
%10:i32 = shl %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 3
%2:i32 = phi %1, 8:i32, 7:i32, 0:i32
%3:i32 = phi %0, 4:i32, 0:i32, 5:i32, 6:i32, 0:i32, 1:i32, 2:i32, 3:i32, 5:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 2:i32, 2:i32, 1:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 3:i32, 0:i32
%4:i32 = phi %1, 0:i32, 0:i32, %3
%5 = block 3
%6:i1 = var
%7:i32 = select %6, 3:i32, 0:i32
%8:i32 = phi %5, 0:i32, 0:i32, %7
%9 = block 3
%10:i1 = var
%11:i32 = select %10, 3:i32, 0:i32
%12:i32 = phi %9, 0:i32, 0:i32, %11
%13:i32 = phi %0, 3:i32, %4, %8, %12, 3:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3:i32 = phi %2, 2:i32, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, %3, 2:i32, 2:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000xxxxxxxxxxx) (zn)
%2:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%3:i64 = addnw %1, %2
%4:i64 = var (0000000000000000000000000000000000000000000000000000000xxxxxxxxx) (n)
%5:i64 = addnw 8:i64, %4
%6:i64 = phi %0, %3, %5
%7:i8 = var
%8:i64 = zext %7
%9:i64 = addnsw %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 917504:i32, 786432:i32, 655360:i32
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 1:i8
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 1:i8
%7:i8 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %0, %4, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 27:i32, 28:i32, 29:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 7:i32
%4:i32 = phi %0, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 11
%2 = block 11
%3:i16 = var
%4:i32 = zext %3
%5:i32 = phi %2, 0:i32, %4, 2751:i32, 2893:i32, 2879:i32, 2900:i32, 2668:i32, 2676:i32, 2644:i32, 2660:i32, 2684:i32
%6:i32 = phi %1, %5, 0:i32, 2750:i32, 2892:i32, 2878:i32, 2899:i32, 2667:i32, 2675:i32, 2643:i32, 2659:i32, 2683:i32
%7:i32 = phi %0, %6, %6, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3
%5:i8 = phi %1, 0:i8, %4
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = var (0000000x) (n)
%9:i8 = or %7, %8
%10:i8 = phi %6, %5, %9
%11:i8 = phi %0, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 5
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3, %3
%5:i8 = phi %0, %4, 0:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 7
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = phi %1, %2, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i8 = and 1:i8, %0
%2:i8 = var (0000xxxx) (n)
%3:i8 = shlnw %2, 1:i8
%4:i8 = or %1, %3
%5:i8 = shl %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 2
%2:i32 = phi %1, 3335:i32, 3336:i32
%3 = block 3
%4:i32 = phi %3, 1832:i32, 3691:i32, 3692:i32
%5:i32 = phi %0, 0:i32, 3322:i32, 1837:i32, 4489:i32, 4488:i32, 3323:i32, 2480:i32, 3633:i32, 3690:i32, %2, 3696:i32, 3693:i32, %4, 3694:i32, 3695:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 1:i32, %6, 1:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3 = block 2
%4:i32 = phi %3, 2:i32, 0:i32
%5:i32 = phi %0, %2, %4, 2:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i32 = phi %1, 2:i32, 5:i32, 0:i32, 4:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32
%3 = block 4
%4:i32 = phi %3, 1:i32, 1:i32, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 1:i32, 2:i32
%4:i32 = phi %1, %3, 2:i32, 1:i32
%5:i32 = phi %0, 1:i32, %4, 0:i32, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 3:i32, 2:i32
%3:i32 = phi %0, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000xxxx01x1) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000x0x00x0) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 91:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = addnsw 43:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1:i1 = var
%2:i8 = zext %1
%3 = block 10
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %3, %5, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%7:i8 = phi %0, %2, %6, %6, %6, %6, %6, %6, %6, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 4
%4:i32 = or 2:i32, %2
%5:i32 = or 4:i32, %2
%6:i32 = phi %3, %4, %4, %5, %2
%7:i32 = phi %0, %2, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i1 = xor 1:i1, %1
%3:i8 = zext %2
%4 = block 2
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %4, %6, %3
%8:i8 = phi %0, %3, %7, 1:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i32 = phi %2, 0:i32, 4:i32, 3:i32, 2:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 18
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 3
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8
%10 = block 2
%11:i32 = phi %10, 1:i32, 0:i32
%12:i32 = phi %5, 0:i32, %9, %11
%13:i32 = phi %0, 0:i32, %2, 1:i32, %4, 1:i32, 1:i32, 1:i32, 1:i32, %12, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 2:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, %2, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4, 1:i32, 1:i32
%6:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %5
%7:i32 = phi %0, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i32 = phi %1, 3:i32, 2:i32, 3:i32
%3:i32 = phi %0, %2, 1:i32, 4:i32, 2:i32, %2, 1:i32, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = phi %1, %2, 4:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, 0:i8, %5, 0:i8
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8, 0:i8
%4:i1 = var
%5:i8 = zext %4
%6:i8 = and %3, %5
%7:i8 = phi %0, %6, %3, %3, %3, %3, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4 = block 2
%5:i8 = phi %4, %3, 1:i8
%6:i8 = phi %1, 0:i8, %3, %5
%7:i8 = phi %0, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8
%4:i8 = shlnsw %3, 3:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i64 = phi %1, 1602224128:i64, 1333788672:i64, 1199570944:i64, 1132462080:i64
%3:i64 = shlnw %2, 32:i64
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, %3, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = udiv 16:i32, %0
%2:i32 = shlnw %1, 3:i32
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3, %3
%5:i8 = phi %1, 0:i8, %4, %4
%6:i8 = phi %0, 0:i8, %5, %4, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 16:i32, 0:i32
%3:i32 = or 4:i32, %2
%4:i32 = or 260:i32, %2
%5:i32 = phi %0, %3, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 18
%1 = block 3
%2 = block 5
%3:i32 = var (000000000000000000000000000000x0) (n)
%4:i32 = phi %2, 1:i32, 1:i32, 1:i32, 1:i32, %3
%5:i1 = var
%6:i32 = select %5, 2:i32, 0:i32
%7:i32 = phi %1, %4, 0:i32, %6
%8:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, %7, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 1:i32, 2:i32, %2, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 1:i32, 2:i32, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 2:i32, 0:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 6:i32, 4:i32, 3:i32, 2:i32, 1:i32, 5:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %5, %6, 2:i32
%8:i1 = eq 2:i32, %7
%9:i32 = select %8, 0:i32, %7
%10:i32 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 2:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 536870912:i32, %1
%3:i32 = or 268435456:i32, %2
%4:i32 = phi %0, %3, 805306368:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 0:i32, 1:i32, 1:i32
%5:i32 = phi %0, 2:i32, 1:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 13:i32, 15:i32, 15:i32
%3:i32 = phi %0, %2, 15:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 4297:i32, 4302:i32
%4 = block 2
%5:i32 = var (000000000000000000010001110100xx) (zn)
%6:i32 = phi %4, %5, %3
%7:i32 = phi %1, %3, %6
%8:i32 = phi %0, %7, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = urem %0, %1
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 2:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2:i64 = phi %1, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%3 = block 10
%4:i64 = phi %3, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%5:i64 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 0:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, %5, 0:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 2:i32
%9 = block 2
%10 = block 2
%11:i32 = phi %10, 1:i32, 0:i32
%12:i32 = phi %9, 1:i32, %11
%13:i32 = phi %0, 1:i32, 1:i32, %6, 1:i32, %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 3:i32, 2:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 4
%3 = block 4
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4, %4, %4
%6:i8 = phi %1, 1:i8, %5, %5, %5
%7:i8 = phi %0, 1:i8, %6, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = add 18446744073709551612:i64, %0
%2:i1 = var
%3:i1 = ult %1, 12:i64
%4:i64 = select %3, %1, 12:i64
%5:i64 = select %2, %4, 16:i64
%6:i1 = ult %1, %5
%7:i64 = select %6, %1, %5
%8:i64 = subnsw %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, %5, %5, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 8193:i32, 1:i32
%3:i32 = or 67108864:i32, %2
%4 = block 3
%5:i1 = phi %4, 1:i1, 0:i1, 0:i1
%6:i32 = or 134217728:i32, %2
%7:i32 = select %5, %6, %2
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 3:i32
%3:i32 = phi %0, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8
%10:i32 = phi %5, 0:i32, %9
%11:i32 = phi %0, 0:i32, %4, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 14
%2 = block 3
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = phi %2, %3, %4, %4
%6:i32 = phi %1, 1:i32, 1:i32, 0:i32, 3:i32, 2:i32, 0:i32, %5, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3 = block 3
%4:i8 = phi %3, 1:i8, 0:i8, 0:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 116:i32, 21:i32
%4:i1 = var
%5:i32 = select %4, 113:i32, 233:i32
%6 = block 3
%7:i1 = var
%8:i32 = select %7, 24:i32, 22:i32
%9:i32 = phi %1, 19:i32, %3, %5, %8
%10:i32 = phi %0, %9, 30:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 10:i32, 4:i32
%4:i1 = var
%5:i32 = zext %4
%6:i32 = subnsw 12:i32, %5
%7:i32 = subnsw 4:i32, %5
%8:i32 = phi %0, 0:i32, 4:i32, %3, %6, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 7
%4:i32 = phi %3, 0:i32, 3:i32, 1:i32, 6:i32, 4:i32, 2:i32, 5:i32
%5:i32 = phi %2, %4, 0:i32
%6:i32 = phi %1, %5, %4
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%2:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 14:i32, %3
%5:i32 = or 12:i32, %3
%6:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%7:i32 = var (000000000000000000000000xxxxxxxx) (n)
%8:i32 = shlnw %7, 16:i32
%9:i32 = or %6, %8
%10:i32 = or 1:i32, %9
%11:i32 = var (000000000000000000000000xxxxxx00) (n)
%12:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%13:i32 = or %11, %12
%14:i32 = or %13, %8
%15:i32 = phi %0, %4, %4, %5, %5, %10, %10, %14, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i8 = subnsw 9:i8, %2
%4:i8 = phi %0, 9:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3
%5 = block 2
%6:i32 = phi %5, 0:i32, 1:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 5
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 11
%2:i32 = var (00000000000000000000000000001x00) (zn)
%3:i32 = phi %0, %2, %2, 8:i32, 8:i32, 10:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32
%4:i32 = shl 1:i32, %3
%5:i32 = addnsw 4294967295:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i128 = var (00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx) (n)
%1:i128 = var (00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx) (n)
%2:i128 = addnw %0, %1
%3:i128 = lshr %2, 4:i128
%4:i128 = addnuw %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4 = block 3
%5:i32 = phi %4, 1:i32, 0:i32, 1:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7:i32 = phi %0, 0:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 4:i32
%3:i32 = phi %0, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var (00000000000000000000000000000x0x) (n)
%5:i32 = phi %2, %4, 3:i32
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 1:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, %3
%6:i32 = phi %0, %3, %5
%7:i16 = trunc %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4 = block 2
%5:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i64 = phi %4, %5, %3
%7:i64 = phi %1, %3, %6
%8:i64 = phi %0, %7, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %3, %5, %7
%9:i1 = var
%10:i8 = zext %9
%11:i64 = var
%12:i1 = ne 0:i64, %11
%13:i8 = zext %12
%14:i1 = var
%15:i8 = zext %14
%16:i64 = var
%17:i1 = ne 0:i64, %16
%18:i8 = zext %17
%19:i8 = phi %0, %2, %8, %10, %13, %15, %18
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 4932:i32, 308:i32, 4932:i32
%3:i32 = phi %0, 0:i32, %2, %2, %2, 38:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 308:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var (0000000000001xx00000000000000000) (zn)
%5:i32 = var (0000000000001xx00000000000000001) (zn)
%6:i32 = phi %2, %4, %5
%7:i32 = or 2:i32, %6
%8:i32 = phi %1, %6, %7
%9:i32 = or 4:i32, %8
%10:i32 = phi %0, %8, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5, 1:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (00000000000000000000000000000x0x) (zn)
%4:i32 = phi %1, 4:i32, %3
%5:i1 = eq 4:i32, %4
%6:i32 = select %5, 0:i32, %4
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 15
%2 = block 3
%3:i1 = var
%4:i32 = var (00000000000000000000000x0xx0000x) (n)
%5:i32 = select %3, 347:i32, %4
%6:i32 = phi %1, 0:i32, 354:i32, 356:i32, 355:i32, 348:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %5, 0:i32, 0:i32, 0:i32, 0:i32
%7 = block 2
%8:i32 = phi %7, %6, 354:i32
%9:i32 = phi %0, %6, %8, %8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 5:i32, 4:i32
%4:i8 = var (0000000x) (n)
%5:i1 = ne 0:i8, %4
%6:i1 = var
%7:i32 = select %6, 9:i32, 8:i32
%8:i32 = select %6, 7:i32, 6:i32
%9:i32 = select %5, %7, %8
%10:i32 = phi %0, %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = and 4:i32, %1
%3:i32 = or 3:i32, %2
%4:i1 = var
%5:i32 = select %4, 0:i32, 7:i32
%6:i32 = phi %0, 7:i32, 5:i32, 4:i32, 1:i32, %3, 0:i32, %5, 5:i32, 5:i32, 0:i32, 10:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4 = block 2
%5:i8 = phi %4, 1:i8, 0:i8
%6:i8 = phi %3, %5, 0:i8
%7:i8 = phi %0, %2, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 3:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, 0:i64
%3:i64 = var (0000000000000000000000000000000000000000000000000000000000xxxxx0) (n)
%4:i64 = phi %0, %3, 0:i64
%5:i64 = shl 1:i64, %4
%6:i64 = and %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 146:i32, 72:i32
%3:i32 = phi %0, %2, 72:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var
%2:i1 = eq 97:i8, %1
%3:i1 = var
%4:i32 = select %3, 1:i32, 2:i32
%5:i32 = select %2, 0:i32, %4
%6:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%7:i32 = trunc %6
%8:i32 = and 3:i32, %7
%9:i32 = phi %0, 2:i32, %5, %8, 2:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 4:i32
%3:i1 = eq 4:i32, %2
%4:i32 = select %3, 0:i32, %2
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 32
%1 = block 4
%2:i32 = phi %1, 6:i32, 6:i32, 1:i32, 6:i32
%3:i32 = phi %0, 1:i32, 7:i32, 1:i32, 3:i32, 3:i32, 5:i32, 6:i32, 6:i32, 6:i32, 1:i32, 1:i32, 1:i32, 6:i32, 6:i32, 6:i32, 5:i32, 1:i32, 1:i32, 6:i32, 6:i32, 1:i32, 1:i32, 6:i32, 1:i32, 0:i32, 1:i32, %2, 1:i32, 6:i32, 6:i32, 6:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (000000000000000000000000000000x0) (n)
%3:i32 = or 4:i32, %2
%4:i32 = or 2048:i32, %2
%5:i32 = or 4096:i32, %2
%6:i32 = phi %0, %3, %4, %5
%7:i32 = or 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 3344:i32
%3:i32 = phi %0, %2, 0:i32, 3345:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 1534:i32, %0
%2:i32 = select %1, 64:i32, 32:i32
%3:i32 = addnsw 4294967280:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 4:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 4
%2:i1 = var
%3:i64 = select %2, 2:i64, 0:i64
%4:i64 = phi %1, 0:i64, 0:i64, 0:i64, %3
%5:i64 = phi %0, 4:i64, 2:i64, 3:i64, 2:i64, 2:i64, 1:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = var (00000x00) (n)
%3:i8 = or 1:i8, %2
%4:i8 = phi %1, %3, 5:i8
%5:i8 = phi %0, %4, 7:i8, 7:i8, 7:i8, 7:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i1 = var
%6:i8 = zext %5
%7 = block 2
%8:i8 = phi %7, %4, 1:i8
%9:i8 = phi %0, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000x000000000) (n)
%2:i32 = lshrexact %1, 9:i32
%3:i8 = trunc %2
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i1 = ne 0:i32, %4
%6:i8 = zext %5
%7:i8 = phi %0, %3, %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = var
%3:i64 = var
%4:i64 = sub %2, %3
%5:i64 = ashrexact %4, 3:i64
%6:i64 = udiv %1, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %1, %4, %3
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5 = block 2
%6:i8 = phi %5, 0:i8, %4
%7:i8 = phi %0, %4, %4, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, %5, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 2:i32, %1
%3:i32 = zext %2
%4 = block 2
%5:i1 = var
%6:i32 = zext %5
%7:i32 = phi %4, %6, 0:i32
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 3:i32, 1:i32, 3:i32, 3:i32, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 6:i32, 8:i32, 0:i32, 0:i32
%3:i1 = ne 0:i32, %2
%4:i32 = select %3, %2, 9:i32
%5 = block 2
%6 = block 2
%7:i32 = var (0000000000000000000000000000xxx0) (n)
%8:i32 = phi %6, 3:i32, %7
%9:i1 = var
%10:i32 = select %9, 1:i32, 4:i32
%11:i32 = phi %5, %8, %10
%12:i32 = phi %0, 2:i32, %4, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 2:i32, 1:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %2, %2, %3, %3
%5:i32 = addnw 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 1:i64, 0:i64
%3:i64 = or 2:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = or 8:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3, %3, %3, %3
%5:i8 = phi %1, 0:i8, %4
%6:i8 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %1, %5, %7, %5
%9:i1 = var
%10:i8 = zext %9
%11:i8 = phi %0, %8, %10, %8
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %3, %4
%6:i8 = var (0000000x) (n)
%7:i8 = phi %1, %5, %5, %6
%8:i8 = var (0000000x) (n)
%9:i8 = phi %0, %7, %7, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 3
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, 0:i8, %5, 0:i8
%7:i8 = phi %1, %3, %6
%8:i8 = phi %0, 0:i8, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 15
%2 = block 3
%3:i1 = var
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = select %3, 2:i64, %4
%6:i64 = phi %1, 0:i64, 2:i64, 2:i64, 2:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %5, 0:i64, 0:i64, 0:i64, 0:i64
%7:i64 = phi %0, %6, 2:i64
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 5:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%2:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%3:i64 = addnw %1, %2
%4:i64 = addnw 8:i64, %3
%5:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%6:i64 = addnw %4, %5
%7:i8 = var
%8:i64 = zext %7
%9:i64 = addnw %6, %8
%10:i64 = phi %0, %9, %4
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 4
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 0:i32, 1:i32, 1:i32
%6:i32 = phi %1, %5, 2:i32, 2:i32
%7:i32 = phi %0, %6, 2:i32, 2:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, 0:i8, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2 = block 3
%3:i32 = var (0000000000000000000000000000xxxx) (zn)
%4 = block 3
%5:i32 = var (0000000000000000000000000000xxxx) (zn)
%6:i32 = phi %1, 14:i32, 14:i32, 1:i32, %3, 14:i32, 1:i32, %5, 14:i32
%7:i1 = eq 14:i32, %6
%8:i32 = select %7, 0:i32, %6
%9:i32 = phi %0, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var (000000000xx00000) (n)
%2:i16 = or 1:i16, %1
%3:i16 = var (000000000xx00000) (n)
%4:i16 = or 2:i16, %3
%5:i16 = phi %0, %2, %4
%6:i16 = var
%7:i16 = var
%8:i16 = phi %0, %6, %7
%9:i16 = and 384:i16, %8
%10:i16 = or %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1 = block 6
%2:i1 = var
%3:i32 = select %2, 37:i32, 41:i32
%4:i32 = select %2, 36:i32, 40:i32
%5:i32 = select %2, 35:i32, 39:i32
%6:i32 = select %2, 34:i32, 38:i32
%7:i32 = phi %1, 33:i32, %3, %4, %5, %6, 32:i32
%8:i32 = phi %0, %7, %7, 38:i32, 34:i32, 39:i32, %7, %7, %7, 41:i32, 37:i32, 40:i32, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %3, %5
%7:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%8:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%9:i32 = or %7, %8
%10:i32 = or 1:i32, %9
%11:i32 = phi %0, %6, %6, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i1 = var
%2:i1 = var
%3:i32 = select %2, 14400:i32, 3014:i32
%4:i32 = select %1, %3, 0:i32
%5:i1 = var
%6:i32 = select %2, 14405:i32, 3016:i32
%7:i32 = select %5, %6, 0:i32
%8:i32 = phi %0, 0:i32, %4, %7, 643:i32, 634:i32, 625:i32, 652:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5 = block 4
%6:i8 = phi %5, %4, 0:i8, 0:i8, 0:i8
%7:i8 = phi %0, %4, 0:i8, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i32 = zext %2
%4:i32 = phi %1, %3, 2:i32
%5 = block 2
%6:i32 = phi %5, 2:i32, 0:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 0:i32, 1:i32
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8
%4 = block 2
%5:i8 = phi %4, %3, 1:i8
%6:i8 = phi %1, %3, %5
%7:i8 = phi %0, %6, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 3
%5:i32 = phi %4, 1:i32, 1:i32, 0:i32
%6:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3, %5
%7 = block 3
%8:i32 = phi %7, 1:i32, 1:i32, 0:i32
%9:i32 = phi %0, 0:i32, %6, 1:i32, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, 0:i8, %4
%6:i8 = phi %1, %5, 0:i8
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 5
%3:i32 = phi %2, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32
%4 = block 5
%5:i32 = phi %4, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, 0:i32, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %0, %2, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = lshr %1, 30:i32
%3:i32 = var (00000x00x00000000000000000000000) (n)
%4:i1 = eq 75497472:i32, %3
%5:i32 = select %4, 4:i32, %2
%6:i32 = phi %0, %2, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var (0000000000000x00) (n)
%2:i1 = eq 0:i16, %1
%3:i16 = var (000xxxxxxxxxxxxx) (n)
%4:i64 = zext %3
%5:i64 = select %2, %4, 0:i64
%6:i64 = phi %0, 0:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i8 = xor 1:i8, %2
%4:i8 = var
%5:i8 = and 1:i8, %4
%6:i8 = xor 1:i8, %5
%7:i8 = var
%8:i8 = and 1:i8, %7
%9:i8 = xor 1:i8, %8
%10:i8 = var
%11:i8 = and 1:i8, %10
%12:i8 = xor 1:i8, %11
%13:i8 = var
%14:i8 = and 1:i8, %13
%15:i8 = xor 1:i8, %14
%16:i8 = var
%17:i8 = and 1:i8, %16
%18:i8 = xor 1:i8, %17
%19:i8 = var
%20:i8 = and 1:i8, %19
%21:i8 = xor 1:i8, %20
%22:i8 = var
%23:i8 = and 1:i8, %22
%24:i8 = xor 1:i8, %23
%25:i8 = var
%26:i8 = and 1:i8, %25
%27:i8 = xor 1:i8, %26
%28:i8 = phi %0, %3, %6, %9, 1:i8, %12, %15, %18, %21, %24, %27, 1:i8
infer %28

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 10
%2 = block 2
%3:i32 = phi %2, 5:i32, 4:i32
%4:i32 = phi %1, 3:i32, 3:i32, 1:i32, 1:i32, 0:i32, 3:i32, 5:i32, 5:i32, %3, 1:i32
%5 = block 3
%6 = block 4
%7:i32 = phi %6, 2:i32, 5:i32, 2:i32, 0:i32
%8:i32 = phi %5, %7, 5:i32, 0:i32
%9:i32 = phi %0, %4, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = phi %1, 0:i32, 12:i32, 4:i32, 6:i32
%3:i32 = phi %0, 0:i32, 4:i32, 0:i32, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 41
%1 = block 5
%2:i32 = phi %1, 0:i32, 5:i32, 3:i32, 4:i32, 2:i32
%3:i1 = var
%4:i32 = select %3, 16:i32, 17:i32
%5:i32 = phi %0, 1:i32, %2, 27:i32, 600:i32, 37:i32, 38:i32, 35:i32, 300:i32, 602:i32, 34:i32, 32:i32, 39:i32, 31:i32, 30:i32, 29:i32, 28:i32, 27:i32, 33:i32, 22:i32, 9:i32, 601:i32, 36:i32, 20:i32, 10:i32, 13:i32, 14:i32, 26:i32, 25:i32, 24:i32, 21:i32, %4, 15:i32, 11:i32, 18:i32, 19:i32, 12:i32, 8:i32, 6:i32, 7:i32, 5:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 4297:i32, 4302:i32
%3 = block 2
%4:i32 = select %1, 4561:i32, 4562:i32
%5:i32 = phi %3, %4, %2
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = urem %0, %1
%3:i32 = shlnw %2, 3:i32
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 16
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 4
%4:i32 = phi %3, 1:i32, 1:i32, 1:i32, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var (0000000000000000000000000000000x) (n)
%8:i32 = phi %6, %7, 3:i32
%9:i32 = phi %5, 0:i32, %8
%10:i32 = phi %0, %2, %4, %9, 1:i32, 1:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 4:i32, 1:i32, 4:i32
%3 = block 2
%4:i32 = phi %3, 4:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i64 = zext %3
%5:i1 = ult %4, 10:i64
%6:i64 = select %5, %4, 10:i64
%7:i64 = subnsw %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i1 = ne 0:i64, %1
%3:i8 = zext %2
%4 = block 2
%5 = block 3
%6:i8 = phi %5, 1:i8, %3, %3
%7:i8 = phi %4, %6, %3
%8:i8 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5 = block 2
%6:i8 = phi %5, 1:i8, 0:i8
%7 = block 2
%8:i8 = phi %7, 1:i8, 0:i8
%9:i8 = phi %0, 0:i8, 1:i8, 0:i8, 1:i8, 0:i8, 1:i8, 0:i8, 1:i8, 0:i8, 1:i8, %2, 1:i8, %4, 1:i8, %6, 1:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 4:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 50:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 51:i32
%5:i32 = phi %0, %2, %4, 50:i32, 2:i32, 3:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%3:i32 = phi %1, %2, 0:i32
%4:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i32 = and 4095:i32, %4
%6:i1 = var
%7:i32 = var (00000000000000000000xxxxxxxxxxxx) (n)
%8:i32 = select %6, %7, %3
%9:i32 = phi %0, %3, %5, %8
%10:i32 = shlnsw %9, 8:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, 1:i32, %5
%7:i32 = phi %0, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, 1:i8, %3, 1:i8
%5:i8 = phi %0, 1:i8, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 3:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, %4, 2:i32
%6:i32 = phi %1, 2:i32, %5
%7 = block 2
%8:i32 = phi %7, 0:i32, 2:i32
%9:i32 = phi %0, %6, 2:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i8 = select %2, 115:i8, 117:i8
%4:i8 = phi %1, 112:i8, %3, 102:i8
%5:i8 = phi %0, %4, 105:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, %5, 0:i8
%7:i8 = phi %0, 1:i8, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, 1:i8, %5
%7:i8 = phi %0, %6, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = add 60:i64, %1
%3:i64 = add %0, %2
%4:i64 = add 7:i64, %3
%5:i64 = and 18446744073709551608:i64, %4
%6:i64 = sub %5, %3
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 389:i32, 388:i32, 388:i32
%3:i32 = phi %0, %2, 389:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%4:i32 = phi %2, 0:i32, %3
%5:i32 = phi %1, 208:i32, 0:i32, %4
%6:i32 = phi %0, %5, 208:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 4
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, 2:i32, %3, 2:i32, 2:i32
%5:i32 = phi %1, %4, 2:i32
%6:i32 = phi %0, %5, 2:i32, 2:i32, 2:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 113:i32, 106:i32, 64:i32
%3:i32 = phi %0, %2, %2, %2, %2, 24:i32, %2, %2, %2, %2, %2, 53:i32, 53:i32, 53:i32, 53:i32, 53:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 1:i8, %3
%5:i8 = var
%6:i8 = var (0000000x) (n)
%7:i8 = and %5, %6
%8:i8 = phi %1, %4, %7
%9:i8 = phi %0, 0:i8, 0:i8, %8, %8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 0:i32, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 312:i32, 0:i32
%4:i32 = phi %1, %3, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, %2, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (000001000000000000x0000000000001) (zn)
%3:i32 = var (000010000000000000x0000000000001) (zn)
%4 = block 2
%5:i32 = var (000000000000000000x0000000000001) (zn)
%6:i32 = phi %1, %2, %3, %5
%7:i32 = or 131072:i32, %6
%8:i32 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i1 = var
%5:i32 = zext %4
%6:i32 = phi %1, %3, %5, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 0:i8, %4, %4
%6:i8 = phi %0, %5, 1:i8, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = phi %1, %2, 5:i32
%4:i32 = phi %0, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000x0x1) (zn)
%3:i32 = phi %1, %2, 9:i32
%4:i32 = phi %0, 9:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i16 = select %2, 64:i16, 0:i16
%4:i16 = phi %1, %3, 128:i16
%5:i16 = phi %0, %4, 0:i16
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1 = block 6
%2:i1 = var
%3:i32 = select %2, 275:i32, 276:i32
%4:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 274:i32, %3
%5:i32 = phi %0, %4, 286:i32, 285:i32, 284:i32, 283:i32, 282:i32, 281:i32, 280:i32, 279:i32, 278:i32, 277:i32, 287:i32, 288:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i16 = select %2, 0:i16, 512:i16
%4:i16 = phi %1, 0:i16, 0:i16, %3
%5:i8 = var
%6:i1 = eq 12:i8, %5
%7:i16 = or 8:i16, %4
%8:i16 = select %6, %7, %4
%9:i16 = phi %0, %4, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000000000000000000000000001111x) (zn)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = subnsw %1, %2
%4:i1 = var
%5:i32 = zext %4
%6:i32 = subnsw %3, %5
%7:i32 = phi %0, 0:i32, 16:i32, 32:i32, 32:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 13:i32, 14:i32, 15:i32
%4:i32 = and 7:i32, %3
%5:i32 = phi %1, %4, %3
%6:i32 = and %0, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i24 = zext %1
%3:i24 = shlnw %2, 11:i24
%4:i24 = phi %0, 0:i24, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 1:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 44:i32, 30:i32
%4 = block 4
%5:i1 = var
%6:i32 = select %5, 116:i32, 21:i32
%7:i1 = var
%8:i32 = select %7, 113:i32, 233:i32
%9 = block 2
%10:i1 = var
%11:i32 = select %10, 24:i32, 22:i32
%12:i32 = phi %4, 19:i32, %6, %8, %11
%13:i32 = phi %0, %3, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 4
%3:i32 = phi %2, 2:i32, 2:i32, 0:i32, 0:i32
%4:i32 = phi %1, 2:i32, 2:i32, %3, 2:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, %2, 1:i1
%4 = block 2
%5:i16 = var (00000000000000xx) (zn)
%6:i16 = var (0000000000000x00) (n)
%7:i16 = or %5, %6
%8:i16 = or 8:i16, %7
%9:i16 = select %3, %7, %8
%10:i16 = or 16:i16, %9
%11:i16 = phi %0, %9, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 28:i32, 36:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 2:i32
%6:i32 = phi %1, 2:i32, %5, 2:i32
%7:i32 = phi %0, %6, 2:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i32 = var (00000000000000000000000011xx00xx) (zn)
%3:i32 = var (000000000000000000000000xx0000xx) (zn)
%4:i32 = var (000000000000000000000000xx000000) (znp)
%5:i32 = phi %1, %2, %3, %4, 0:i32, 0:i32
%6:i32 = var (0000000000000000000000xx0000xx00) (zn)
%7:i32 = or %5, %6
%8:i1 = var
%9:i32 = select %8, 544:i32, 272:i32
%10:i32 = or %7, %9
%11:i32 = select %8, 256:i32, 512:i32
%12:i32 = or %5, %11
%13:i32 = phi %0, %10, %7, %12, %5, %5
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 5
%3 = block 2
%4:i32 = var (000000000000000000000000000000x1) (zn)
%5:i32 = phi %2, 1:i32, 1:i32, 1:i32, %4, 0:i32
%6 = block 5
%7 = block 4
%8:i32 = var (0000000000000000000000000000000x) (n)
%9 = block 3
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = phi %6, 1:i32, 1:i32, 0:i32, %8, %10
%12:i32 = phi %1, 0:i32, %5, %11
%13:i32 = phi %0, 0:i32, 1:i32, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = var
%3:i32 = and 15:i32, %2
%4:i32 = phi %1, %3, 5:i32, 4:i32, 3:i32, 2:i32, 1:i32, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 6
%2:i32 = phi %1, 39:i32, 39:i32, 41:i32, 41:i32, 0:i32, 0:i32
%3:i32 = phi %0, 35:i32, 35:i32, 37:i32, 37:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = trunc %0
%2:i32 = and 1:i32, %1
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (0000000000000000000000000000xxx0) (n)
%5:i32 = or %3, %4
%6:i32 = shl %5, 1:i32
%7:i32 = or %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 4:i32, 2:i32, 1:i32, 1:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 5:i32, 1:i32
%3:i1 = eq 5:i32, %2
%4:i32 = select %3, 0:i32, %2
%5:i32 = phi %0, 1:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i8 = zext %1
%3:i1 = var
%4:i1 = var
%5:i1 = or %3, %4
%6:i8 = zext %5
%7 = block 2
%8:i1 = var
%9:i8 = zext %8
%10:i8 = phi %7, %9, 0:i8
%11 = block 2
%12 = block 2
%13:i8 = var (0000000x) (n)
%14:i8 = var (0000000x) (n)
%15:i8 = phi %12, %13, %14
%16:i8 = phi %11, %15, 0:i8
%17:i8 = phi %0, 0:i8, %2, %6, %10, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 4
%2 = block 6
%3:i32 = phi %2, 1:i32, 1:i32, 2:i32, 2:i32, 1:i32, 1:i32
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %1, %3, %3, %4, %4
%6:i1 = var
%7:i32 = zext %6
%8:i32 = addnw %5, %7
%9:i32 = phi %0, %5, %5, %5, %5, %5, %5, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 5
%3:i32 = phi %2, 340:i32, 340:i32, 340:i32, 340:i32, 339:i32
%4:i32 = phi %1, %3, 97:i32, 96:i32
%5:i32 = phi %0, %4, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11 = block 2
%12:i32 = phi %11, 1:i32, 0:i32
%13 = block 3
%14:i32 = phi %13, 1:i32, 2:i32, 1:i32
%15:i32 = phi %0, 0:i32, %4, 1:i32, 1:i32, %6, %8, %10, %12, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var
%3:i8 = and 1:i8, %2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = or %5, %3
%7:i8 = phi %1, %3, %6
%8:i8 = var
%9:i8 = and 1:i8, %8
%10:i1 = var
%11:i8 = zext %10
%12:i8 = or %9, %11
%13:i8 = phi %0, %7, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6 = block 2
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %1, %3, %5, %8, %5, %8
%10:i8 = phi %0, %9, 1:i8
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32, 1:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2:i8 = addnw 1:i8, %1
%3:i8 = phi %0, 2:i8, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000100010000xx) (zn)
%3:i32 = var (000000000000000000000010010000xx) (zn)
%4:i32 = phi %1, %2, %3
%5:i32 = or 128:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 4
%4:i32 = var (0000000000000000000000000000xxxx) (n)
%5:i32 = phi %2, %4, 15:i32
%6:i32 = phi %1, 15:i32, %5
%7:i32 = and %0, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = select %1, 380:i32, 409:i32
%3:i1 = var
%4:i32 = select %3, 380:i32, %2
%5:i32 = phi %0, %2, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = ctlz %0
%2:i32 = subnsw 31:i32, %1
%3:i32 = addnsw 8191:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 2:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8
%6:i8 = phi %1, %5, 1:i8
%7:i8 = phi %0, %6, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (00000000000000000000000000000xxx) (zn)
%5:i32 = phi %2, 6:i32, %4
%6:i32 = phi %1, %5, 6:i32
%7:i32 = phi %0, 6:i32, 6:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, %2, 0:i8
%4:i8 = phi %0, %3, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, %3, 2:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = and 4294967295:i64, %1
%3:i64 = and 15:i64, %1
%4:i64 = subnsw %2, %3
%5:i64 = phi %0, %4, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = cttz %1
%3:i32 = phi %0, 32:i32, %2
%4:i32 = shl 14:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2 = block 3
%3 = block 2
%4:i32 = var (00000000000000000000000x0xx00xxx) (n)
%5 = block 2
%6:i32 = var (00000000000000000000000x0xx00xxx) (n)
%7:i32 = var (000000000000000000000001011000xx) (zn)
%8:i32 = phi %2, %4, %6, %7
%9:i32 = phi %1, 0:i32, %8, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%10:i32 = phi %0, %9, 0:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1:i1 = var
%2:i32 = select %1, 0:i32, 6:i32
%3:i32 = select %1, 7:i32, 0:i32
%4 = block 2
%5:i1 = var
%6:i32 = select %5, 8:i32, 9:i32
%7:i32 = phi %4, %6, 0:i32
%8:i32 = phi %0, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 10:i32, %2, %3, 14:i32, 15:i32, 0:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = phi %0, 25:i8, 33:i8
%2:i8 = addnsw 243:i8, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 66:i32, 65:i32
%3:i32 = or 1024:i32, %2
%4:i32 = or 512:i32, %2
%5:i32 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (000000000000xxx0) (n)
%1:i16 = var (000000000000000x) (n)
%2:i16 = or %0, %1
%3:i16 = shl %2, 1:i16
%4:i1 = var
%5:i16 = zext %4
%6:i16 = or %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6 = block 3
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8, 1:i32
%10:i32 = phi %5, 0:i32, %9
%11:i32 = phi %0, %4, 1:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 2:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = var
%3:i8 = var
%4:i8 = phi %1, %2, %3
%5:i32 = zext %4
%6:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%7:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%8:i64 = addnw %6, %7
%9:i32 = trunc %8
%10:i32 = phi %0, %5, 0:i32, 0:i32, %9, 0:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 3289:i32, 3288:i32
%4:i32 = phi %1, %3, 3291:i32
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 2033:i32, 2544:i32
%8:i32 = phi %5, %7, 0:i32
%9:i32 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, %4, 1:i32
%6:i32 = phi %1, %5, 1:i32, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i32 = phi %1, 314:i32, 314:i32, 318:i32
%3:i32 = phi %0, 0:i32, 0:i32, 0:i32, %2, 0:i32, 318:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 5:i32
%4:i32 = phi %0, 1:i32, 0:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = add 32768:i32, %0
%2:i1 = ult 65535:i32, %1
%3 = block 2
%4 = block 2
%5:i8 = phi %4, 0:i8, 1:i8
%6:i8 = phi %3, 0:i8, %5
%7:i8 = select %2, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8 = block 3
%9:i32 = phi %8, 1:i32, 1:i32, 0:i32
%10 = block 3
%11:i32 = phi %10, 1:i32, 1:i32, 0:i32
%12 = block 2
%13:i32 = phi %12, 0:i32, 1:i32
%14:i32 = phi %1, 0:i32, %3, %7, %9, %11, %13
%15:i32 = phi %0, 0:i32, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5 = block 3
%6:i8 = phi %5, 0:i8, 0:i8, 1:i8
%7 = block 3
%8:i8 = phi %7, 0:i8, 0:i8, 1:i8
%9:i8 = phi %0, 0:i8, 0:i8, %2, %4, 0:i8, 0:i8, %6, %8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = and 4:i32, %1
%3:i32 = or 3:i32, %2
%4:i1 = var
%5:i32 = select %4, 5:i32, 4:i32
%6:i32 = phi %0, %3, 7:i32, %5, 1:i32, 0:i32, 5:i32, 5:i32, 10:i32, 5:i32, 0:i32, 7:i32, 10:i32, 10:i32, 10:i32, 10:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 2:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = var (000000000000000000000000000x0000) (n)
%2:i32 = xor 16:i32, %1
%3:i32 = var (000000000000000000000000000x0000) (n)
%4:i32 = xor 16:i32, %3
%5:i32 = var (000000000000000000000000000x0000) (n)
%6:i32 = xor 16:i32, %5
%7:i32 = var (000000000000000000000000000x0000) (n)
%8:i32 = xor 16:i32, %7
%9:i32 = phi %0, 16:i32, %2, 16:i32, 16:i32, %4, 16:i32, 16:i32, 16:i32, %6, %8, 16:i32
%10:i32 = var (00000000000000000xxxxxxxx0000000) (n)
%11:i32 = var (000000000000000000xxxxxxxx000000) (n)
%12:i32 = or %10, %11
%13:i32 = var (000000000000000000000000xxxxxxxx) (n)
%14:i32 = shlnw %13, 5:i32
%15:i32 = or %12, %14
%16:i32 = or %9, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 5:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, 1:i32, 3:i32, 2:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 2:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, 1:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i24 = zext %1
%3:i24 = shlnw %2, 20:i24
%4:i24 = phi %0, %3, 1048576:i24
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 1:i32, 1:i32, %2, %4, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000100x) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 2:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = or 128:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 5:i32
%4:i32 = phi %0, 1:i32, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 4
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5, 1:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, %4, 1:i32
%6:i32 = phi %1, 1:i32, 1:i32, %5, 1:i32
%7:i32 = phi %0, 1:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i32 = phi %1, 0:i32, 2:i32, 2:i32, 2:i32, 2:i32, 0:i32, 2:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (0000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (n)
%2:i64 = var (000000000000000000000000000000000000000000000000000000000xxx1000) (zn)
%3:i64 = addnw %1, %2
%4:i64 = addnw 16:i64, %3
%5:i64 = phi %0, %4, %3
%6:i64 = addnsw 16:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5 = block 3
%6:i32 = var (000000000000000000000000000000xx) (n)
%7:i32 = phi %2, %4, %6
%8:i1 = var
%9:i32 = select %8, 1:i32, 2:i32
%10:i32 = phi %1, %7, %9
%11:i32 = phi %0, 1:i32, 0:i32, %10, 1:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8
%5 = block 2
%6 = block 3
%7:i8 = phi %6, 1:i8, 1:i8, 0:i8
%8:i8 = phi %5, %7, 0:i8
%9:i8 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 6:i32
%3:i32 = phi %0, 6:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i32 = phi %1, 0:i32, 2:i32, 4:i32, 0:i32, 3:i32, 1:i32, 5:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000xxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 4095:i32, %0
%2:i64 = zext %1
%3 = block 3
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = var (00000000000000000000000000000xxx) (n)
%6:i32 = phi %3, %4, 0:i32, %5
%7:i64 = zext %6
%8:i64 = shl %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 2986:i32, 2988:i32
%3:i32 = phi %0, 0:i32, 2978:i32, 2971:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, %2, 2:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 5:i32
%4:i32 = phi %0, 0:i32, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 20
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11 = block 2
%12:i32 = phi %11, 1:i32, 0:i32
%13 = block 2
%14:i32 = phi %13, 1:i32, 0:i32
%15 = block 2
%16:i32 = phi %15, 1:i32, 0:i32
%17 = block 2
%18:i32 = phi %17, 1:i32, 0:i32
%19 = block 2
%20:i32 = phi %19, 1:i32, 0:i32
%21 = block 2
%22:i32 = phi %21, 1:i32, 0:i32
%23 = block 2
%24:i32 = phi %23, 1:i32, 0:i32
%25 = block 2
%26:i32 = phi %25, 1:i32, 0:i32
%27:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %2, %4, %6, %8, %10, %12, %14, %16, %18, %20, %22, %24, %26
infer %27

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, 0:i8, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i8 = var (0000000x) (n)
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %1, %2, %4, %4, %4, %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = and %5, %7
%9:i8 = phi %0, %8, %5, %5, %5, %5
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, %2, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 4:i32, 0:i32, 1:i32
%3:i32 = phi %0, %2, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3, 1:i32, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 0:i32, 2:i32, 0:i32, 4:i32, 0:i32, 2:i32, 3:i32, 0:i32
%3:i1 = var
%4:i32 = select %3, 5:i32, 0:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 2:i32, 3:i32
%3:i32 = phi %0, %2, 4:i32, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = var
%2:i1 = ult %1, 2:i32
%3:i32 = select %2, 266:i32, 264:i32
%4:i32 = var
%5:i1 = eq 2:i32, %4
%6:i32 = select %2, 259:i32, 258:i32
%7:i32 = select %2, 246:i32, 245:i32
%8:i32 = select %5, %6, %7
%9:i32 = select %2, 254:i32, 253:i32
%10:i32 = select %2, 231:i32, 229:i32
%11:i32 = phi %0, 265:i32, %3, %8, %9, 0:i32, 230:i32, %10, 0:i32, 228:i32, 0:i32, 263:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i1 = var
%4:i8 = zext %3
%5:i8 = or %2, %4
%6 = block 2
%7:i8 = var
%8:i8 = and 1:i8, %7
%9:i1 = var
%10:i8 = zext %9
%11:i8 = or %8, %10
%12:i8 = phi %0, %5, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %2, %4, 0:i32
%6:i32 = phi %1, %5, %4
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8
%6:i8 = phi %1, 0:i8, %5
%7:i8 = phi %0, 0:i8, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4 = block 2
%5:i8 = phi %4, 0:i8, 1:i8
%6:i8 = phi %3, 1:i8, %5
%7:i8 = phi %0, 1:i8, %2, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 131:i32, 131:i32, 132:i32, 132:i32
%3:i32 = phi %0, 131:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 0:i32, 12:i32, 12:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%2:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5:i32 = var (000000000000000000000000xxxxxx00) (n)
%6:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%7:i32 = or %5, %6
%8:i32 = var (000000000000000000000000xxxxxxxx) (n)
%9:i32 = shlnw %8, 16:i32
%10:i32 = or %7, %9
%11:i32 = phi %0, %4, %4, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 0:i32, %1
%3:i32 = zext %2
%4 = block 2
%5:i1 = var
%6:i32 = zext %5
%7:i32 = phi %4, %6, 0:i32
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = or 4:i32, %2
%4:i32 = or 2048:i32, %2
%5:i32 = or 4096:i32, %2
%6:i32 = phi %0, %3, %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i64 = zext %3
%5:i1 = ult %4, 2:i64
%6:i64 = select %5, %4, 2:i64
%7:i64 = subnsw %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4 = block 2
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %4, 1:i8, %6
%8:i8 = phi %3, %7, 1:i8, %7
%9:i8 = phi %0, %2, %2, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 2:i32, 1:i32, 1:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = phi %0, %2, 0:i64
%4:i1 = ne 0:i64, %3
%5:i64 = zext %4
%6:i64 = subnsw %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 3
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %4, 0:i32, %6, %8
%10:i32 = phi %1, 0:i32, %3, %9
%11:i32 = phi %0, 1:i32, 0:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 2:i32, %1
%3:i32 = lshrexact %2, 1:i32
%4:i32 = xor 3:i32, %3
%5:i32 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i1 = var
%4:i1 = var
%5:i1 = and %3, %4
%6:i8 = zext %5
%7:i8 = phi %0, %2, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = phi %1, 0:i64, %2
%4:i64 = phi %0, %3, 0:i64
%5:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i64 = xor 18446744073709551615:i64, %5
%7:i64 = and %4, %6
%8:i64 = subnsw %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 7
%4:i32 = phi %3, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 3
%2:i1 = phi %1, 1:i1, 0:i1, 0:i1
%3:i32 = phi %1, 0:i32, 352:i32, 353:i32
%4:i32 = select %2, 347:i32, %3
%5:i32 = phi %0, 0:i32, 354:i32, 356:i32, 355:i32, 348:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %4, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = phi %2, %3, 1:i32
%5:i32 = phi %1, 0:i32, %4, 0:i32
%6:i32 = phi %0, %5, %5, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i32 = phi %1, 10:i32, 2:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32, 1:i32, 2:i32, 0:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %3, 0:i8, %5, 0:i8
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 7
%2:i32 = phi %1, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 5:i32, 0:i32
%3:i32 = phi %0, %2, 4:i32, 3:i32, 2:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (000000000000000000000000000000000000000000000000000000000010000x) (zn)
%3 = block 2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 64:i64, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4 = block 4
%5:i32 = phi %4, 0:i32, 1:i32, 0:i32, 0:i32
%6:i32 = phi %2, %3, %5
%7:i32 = phi %1, 0:i32, %6
%8:i32 = phi %0, %7, %5, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (zn)
%3:i32 = var (00000000000000000000000000000xxx) (zn)
%4:i32 = phi %1, %2, %3
%5:i32 = addnsw 1:i32, %4
%6:i32 = phi %0, %5, %4
%7:i32 = addnsw 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2 = block 15
%3:i32 = var (00000000000000000000000x0xxxx0xx) (n)
%4:i32 = phi %2, 0:i32, 354:i32, 356:i32, 355:i32, 348:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %3, 0:i32, 0:i32, 0:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, %4, 354:i32
%7:i32 = phi %1, %4, %6, %6, %6, %6, %6
%8:i32 = phi %0, %7, 354:i32, 354:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 6
%2:i32 = phi %1, 3:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %3, 0:i32, %7
%9 = block 2
%10:i32 = phi %9, 1:i32, 3:i32
%11 = block 2
%12:i32 = phi %11, 1:i32, 0:i32
%13 = block 2
%14:i32 = phi %13, 1:i32, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18:i32 = var (000000000000000000000000000000x1) (zn)
%19:i32 = phi %16, %18, 3:i32
%20:i32 = phi %15, %19, 3:i32
%21:i32 = phi %0, 0:i32, %2, %8, %10, %12, %14, %20
infer %21

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = var (0000000000000x00000000000x0000xx) (n)
%3:i32 = var (0000000000000x00000000001x0000xx) (zn)
%4:i32 = phi %1, %2, %3, %2, %3, %2
%5:i32 = or 256:i32, %4
%6:i32 = phi %0, %5, %4
%7:i1 = ult 2097151:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 4
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %2, 3:i32, %4
%6 = block 3
%7:i32 = phi %6, 2:i32, 3:i32, 3:i32
%8:i32 = phi %1, %5, %7
%9:i32 = phi %0, %8, 2:i32, 3:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 2147483647:i32, %0
%2 = block 2
%3:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = subnsw %1, %3
%5:i32 = phi %2, %4, 0:i32
%6:i32 = sub %1, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 4:i32, 1:i32, 1:i32, 1:i32, 4:i32
%3:i1 = eq 4:i32, %2
%4:i32 = select %3, 0:i32, %2
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2
%4:i8 = zext %3
%5 = block 2
%6 = block 3
%7:i8 = phi %6, 1:i8, 0:i8, 1:i8
%8:i8 = phi %5, 0:i8, %7
%9:i8 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, %2, %2, 1:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 20:i32
%3:i64 = sext %2
%4:i64 = lshr 2106385072258815:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, %5
%7:i32 = phi %0, 1:i32, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = var
%3:i32 = select %2, 8036:i32, 1841:i32
%4:i32 = select %1, 7532:i32, %3
%5:i32 = select %2, 8035:i32, 1840:i32
%6:i32 = select %1, 7999:i32, %5
%7:i32 = phi %0, 8001:i32, %4, 7998:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4 = block 2
%5:i8 = phi %4, 0:i8, 1:i8
%6:i8 = phi %3, %5, 1:i8
%7:i8 = phi %0, 1:i8, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 13
%1 = block 2
%2 = block 3
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, 1:i32, 0:i32, 1:i32, %6, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i32 = var (00000000000000000000000000000x0x) (zn)
%4:i32 = phi %1, 4:i32, 1:i32, %3
%5:i1 = eq 4:i32, %4
%6:i32 = select %5, 0:i32, %4
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 1:i32, %0
%2:i32 = select %1, 8:i32, 16:i32
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 4:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, 4:i32, %3, 4:i32
%5:i32 = phi %0, 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or %1, %2
%4:i8 = var (0000000x) (n)
%5:i32 = zext %4
%6:i32 = or %3, %5
%7:i32 = phi %0, %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%3:i32 = var (0000000xxxxxxxxxxxxxxxx000000000) (n)
%4:i32 = or %2, %3
%5:i32 = var (00000000000000000000000x00000000) (n)
%6:i32 = xor 256:i32, %5
%7:i32 = or %4, %6
%8:i16 = var
%9:i32 = zext %8
%10:i32 = shlnw %9, 9:i32
%11:i32 = phi %0, %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = var (00000000000000000000000000000x0x) (zn)
%3:i32 = phi %1, %2, 2:i32, 0:i32, 1:i32
%4 = block 4
%5:i32 = var (00000000000000000000000000000x0x) (zn)
%6:i32 = phi %4, %5, 2:i32, 0:i32, 1:i32
%7:i32 = phi %0, 2:i32, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 5
%3 = block 4
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, 2:i32, 2:i32, %4, 0:i32, 0:i32
%6:i32 = phi %1, 2:i32, %5
%7:i32 = phi %0, 1:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 5
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8, 0:i8, 0:i8, 0:i8
%5:i8 = phi %1, %4, %4, 0:i8
%6:i8 = phi %0, %5, 0:i8, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 0:i8, 0:i8, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 10
%3:i32 = phi %2, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 1:i32, 2:i32, 3:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i32 = and 91:i32, %1
%3:i32 = addnw 2967:i32, %2
%4:i32 = phi %0, 2970:i32, 0:i32, %3, 3035:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i64 = zext %3
%5:i64 = phi %1, %4, 0:i64
%6:i64 = phi %0, 3:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = or 3428:i32, %2
%4:i32 = phi %0, 3428:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 231:i32, 229:i32
%4:i32 = select %2, 254:i32, 253:i32
%5:i1 = var
%6:i32 = var (0000000000000000000000010000001x) (zn)
%7:i32 = var (000000000000000000000000111101xx) (zn)
%8:i32 = select %5, %6, %7
%9:i32 = select %2, 266:i32, 264:i32
%10:i32 = phi %1, %3, %4, %8, %9
%11:i32 = phi %0, %10, 263:i32, 228:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 4295:i32, 4300:i32
%5 = block 2
%6:i32 = var (00000000000000000001000x110xxxxx) (zn)
%7:i32 = phi %2, %4, %6
%8:i32 = phi %1, %7, %4
%9:i32 = phi %0, %8, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 0:i32
%4 = block 4
%5:i32 = phi %4, 3:i32, 0:i32, 2:i32, 0:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2:i1 = var
%3:i32 = select %2, 2:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 2:i32, 2:i32, 4:i32
%3:i32 = phi %0, %2, 2:i32, 4:i32, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = phi %1, %4, 1:i8, %4
%6:i8 = phi %0, %5, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 28
%2:i32 = phi %1, 1:i32, 4:i32, 16:i32, 8:i32, 2:i32, 1:i32, 16:i32, 8:i32, 4:i32, 2:i32, 1:i32, 4:i32, 8:i32, 4:i32, 2:i32, 2:i32, 1:i32, 1:i32, 2:i32, 1:i32, 16:i32, 8:i32, 4:i32, 2:i32, 1:i32, 4:i32, 8:i32, 8:i32
%3:i32 = phi %0, %2, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 1:i32, %3, %5
%7:i32 = phi %0, 2:i32, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 2184:i32, 2185:i32, 2185:i32, 2185:i32
%3 = block 3
%4:i32 = phi %3, 2184:i32, 2184:i32, 2185:i32
%5:i32 = phi %0, %2, 2185:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 2:i8, 6:i8, 2:i8
%3:i8 = phi %0, %2, 2:i8, 6:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = and 7:i32, %2
%4:i32 = var (000000000000000000000000001xxxx0) (zn)
%5:i32 = or %3, %4
%6:i32 = phi %1, 0:i32, %3, %5, 0:i32, 0:i32
%7:i32 = or 64:i32, %6
%8:i32 = or 128:i32, %6
%9:i32 = phi %0, %6, %7, %8, %6, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 5:i8, 0:i8
%3:i8 = phi %0, 0:i8, 6:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 24
%1 = block 3
%2:i32 = phi %1, 3692:i32, 1832:i32, 3691:i32
%3:i32 = phi %0, 0:i32, 3322:i32, 1837:i32, 4489:i32, 3323:i32, 2480:i32, 3633:i32, 3696:i32, 3693:i32, 3694:i32, 3695:i32, 0:i32, %2, %2, 3690:i32, 3690:i32, 4488:i32, 4488:i32, 4488:i32, 4488:i32, 4488:i32, 3336:i32, 3335:i32, 4488:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 4297:i32, 4302:i32
%5 = block 2
%6:i32 = var (00000000000000000001000x110xxxxx) (zn)
%7:i32 = phi %2, %4, %6
%8:i32 = phi %1, %7, %4
%9:i32 = phi %0, %8, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i1 = ult %1, 4:i32
%3:i32 = sub 4:i32, %1
%4:i32 = select %2, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i32 = select %1, 39:i32, 35:i32
%3:i32 = select %1, 38:i32, 34:i32
%4 = block 2
%5:i32 = phi %4, %3, 0:i32
%6:i32 = phi %0, %2, %3, 32:i32, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 6
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00xx00xx00xx00xx00xx00xx00xx00xx) (n)
%1:i32 = var (00xx00xx00xx00xx00xx00xx00xx00xx) (n)
%2:i32 = addnw %0, %1
%3:i32 = lshr %2, 4:i32
%4:i32 = addnuw %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i32 = phi %1, 6:i32, 6:i32, 6:i32, 6:i32, 0:i32
%3:i32 = phi %0, 11:i32, 2:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (000000000000000000000000000001x0) (zn)
%3:i32 = var (000000000000000000001000000000x0) (zn)
%4:i32 = var (000000000000000000010000000000x0) (zn)
%5:i32 = phi %1, %2, %3, %4
%6:i32 = or 1:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = or 16:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 0:i32, 4:i32, 2:i32, 3:i32
%4:i32 = phi %1, %3, 4:i32
%5:i32 = phi %0, 2:i32, 1:i32, 4:i32, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 24
%2:i1 = var
%3:i32 = select %2, 0:i32, 9:i32
%4:i1 = var
%5:i32 = select %4, 0:i32, 23:i32
%6:i1 = var
%7:i32 = select %6, 0:i32, 22:i32
%8:i1 = var
%9:i32 = select %8, 0:i32, 16:i32
%10:i1 = var
%11:i32 = select %10, 0:i32, 21:i32
%12:i1 = var
%13:i32 = select %12, 0:i32, 17:i32
%14:i1 = var
%15:i32 = select %14, 0:i32, 8:i32
%16:i1 = var
%17:i32 = select %16, 0:i32, 7:i32
%18:i1 = var
%19:i32 = select %18, 0:i32, 14:i32
%20:i1 = var
%21:i32 = select %20, 0:i32, 15:i32
%22:i1 = var
%23:i32 = select %22, 0:i32, 3:i32
%24:i1 = var
%25:i32 = select %24, 0:i32, 10:i32
%26:i1 = var
%27:i32 = select %26, 0:i32, 20:i32
%28:i1 = var
%29:i32 = select %28, 0:i32, 11:i32
%30:i1 = var
%31:i32 = select %30, 0:i32, 2:i32
%32:i1 = var
%33:i32 = select %32, 0:i32, 18:i32
%34:i1 = var
%35:i32 = select %34, 0:i32, 13:i32
%36:i1 = var
%37:i32 = select %36, 0:i32, 6:i32
%38:i1 = var
%39:i32 = select %38, 0:i32, 19:i32
%40:i1 = var
%41:i32 = select %40, 0:i32, 12:i32
%42:i1 = var
%43:i32 = select %42, 0:i32, 5:i32
%44:i1 = var
%45:i32 = select %44, 0:i32, 4:i32
%46:i1 = var
%47:i32 = zext %46
%48:i32 = phi %1, 0:i32, %3, %5, %7, %9, %11, %13, %15, %17, %19, %21, %23, %25, %27, %29, %31, %33, %35, %37, %39, %41, %43, %45, %47
%49:i32 = phi %0, 0:i32, %48
infer %49

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5 = block 2
%6:i32 = phi %5, 0:i32, 1:i32
%7:i32 = phi %1, 1:i32, 1:i32, %4, 1:i32, %6
%8:i32 = phi %0, 1:i32, 1:i32, %7, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i32 = zext %1
%3:i32 = subnsw 28:i32, %2
%4:i32 = phi %0, 0:i32, 32:i32, 16:i32, 32:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i1 = var
%4:i8 = zext %3
%5:i8 = or %2, %4
%6 = block 2
%7:i1 = var
%8:i1 = phi %6, 0:i1, %7
%9:i8 = zext %8
%10:i8 = phi %0, %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 2:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = xor 1:i32, %2
%4:i32 = var
%5:i32 = and 7:i32, %4
%6:i32 = phi %1, %3, %5, %5
%7:i32 = phi %0, 1:i32, 1:i32, 0:i32, 3:i32, 2:i32, 0:i32, %6, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 131072:i64, 0:i64
%3:i64 = or 262144:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = or 524288:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2 = block 4
%3:i32 = var (00000000000000000000000xxx000000) (zn)
%4:i64 = zext %3
%5:i64 = addnw %1, %4
%6:i64 = addnsw 18446744073709551615:i64, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%2:i64 = shlnw %1, 4:i64
%3:i64 = phi %0, 16:i64, %2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = subnsw 0:i64, %4
%6:i64 = and 24:i64, %5
%7:i64 = addnsw %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4 = block 3
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 1:i32, 0:i32, %6
%8:i32 = phi %1, 1:i32, 1:i32, %3, %7
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11 = block 2
%12:i32 = phi %11, 1:i32, 0:i32
%13:i32 = phi %0, %8, 0:i32, %10, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000001x0) (zn)
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 1:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 2:i32, 0:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32
%5 = block 2
%6:i32 = phi %5, 3:i32, 2:i32
%7 = block 2
%8:i32 = phi %7, 0:i32, 3:i32
%9:i32 = phi %0, %4, %6, 3:i32, %8, 4:i32, 3:i32, 3:i32, 3:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, %5, %4
%7:i8 = phi %0, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 82:i32, 0:i32
%3:i32 = addnw 117:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var (000000000000000000000000000xxxxx) (n)
%3:i32 = var (0000000000000000000000000000xxxx) (n)
%4:i32 = var (0000000000000000000000000000xxxx) (n)
%5:i32 = var (0000000000000000000000000000xxxx) (n)
%6:i32 = phi %1, %2, %3, %4, %5
%7:i32 = and 7:i32, %6
%8:i32 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8, 0:i8
%6:i8 = phi %1, 0:i8, %5
%7:i8 = phi %0, %6, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %2, %4, 0:i8, %4, 0:i8, %4
%6:i8 = phi %1, %5, %4
%7:i8 = phi %0, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i1 = var
%2:i32 = zext %1
%3 = block 5
%4 = block 4
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = var (0000000000000000000000000000000x) (n)
%7 = block 2
%8:i32 = var (000000000000000000000000000000x0) (n)
%9:i32 = phi %4, %5, %6, %8, %8
%10:i1 = var
%11:i32 = zext %10
%12:i1 = var
%13:i32 = zext %12
%14:i32 = phi %3, %9, %11, %13, 1:i32, 1:i32
%15:i1 = var
%16:i32 = zext %15
%17:i32 = phi %0, 1:i32, 1:i32, 1:i32, %2, %14, %16, 1:i32
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8
%4:i8 = phi %0, %3, 1:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3 = block 3
%4:i64 = addnw 4:i64, %2
%5:i64 = phi %3, %4, 0:i64, 0:i64
%6:i64 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000000xx0) (n)
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%3:i64 = or %1, %2
%4:i64 = xor 1:i64, %3
%5:i64 = phi %0, 8:i64, 0:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 255:i32, %0
%2:i32 = var (00000000000000000xxx000000000000) (n)
%3:i32 = var (00000x000000xxxx0000000000000000) (n)
%4:i32 = or %2, %3
%5:i32 = or %1, %4
%6:i32 = shl %5, 16:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8, 0:i8
%6:i8 = phi %1, %5, 0:i8, 0:i8
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i72 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000)
%2:i72 = and 262144:i72, %1
%3:i72 = phi %0, 262144:i72, %2
%4:i80 = var (0000000000000000000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i80 = shlnw %4, 19:i80
%6:i72 = trunc %5
%7:i72 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 4:i32
%5:i32 = phi %1, 1:i32, 0:i32, %4
%6:i32 = phi %0, 1:i32, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 3:i32, 2:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000000xxx) (n)
%2:i32 = trunc %1
%3:i32 = xor 1:i32, %2
%4:i32 = phi %0, 8:i32, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i16 = var
%3:i32 = zext %2
%4 = block 2
%5:i32 = phi %4, 1700:i32, %3
%6:i32 = phi %1, %3, %3, %5
%7:i32 = phi %0, %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 312:i32, 0:i32
%3:i32 = phi %0, %2, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 3
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 1:i32, 0:i32, %6
%8:i32 = phi %1, 0:i32, %3, %7
%9:i32 = phi %0, 1:i32, 1:i32, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 6:i32, 1:i32, 1:i32
%3:i32 = phi %0, 6:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4 = block 2
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %0, 0:i32, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 3:i32, 3:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4
%6:i8 = phi %1, %5, 0:i8
%7:i8 = phi %0, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 5:i32
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6:i32 = phi %0, 1:i32, 0:i32, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, %2, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = ne 25:i32, %1
%3:i8 = zext %2
%4 = block 3
%5:i8 = phi %4, 1:i8, %3, %3
%6 = block 3
%7 = block 3
%8:i8 = phi %7, 0:i8, %3, %3
%9:i8 = phi %6, %3, %8, %3
%10:i8 = phi %0, %3, %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %3, 1:i32, 0:i32, %7
%9:i32 = phi %0, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = and 4294967295:i64, %0
%2:i1 = var
%3:i64 = select %2, 18446744073709551615:i64, 18446744073709551614:i64
%4:i64 = addnsw %1, %3
%5:i64 = addnsw 2:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 2569:i32, 2980:i32
%4 = block 3
%5:i32 = phi %4, %3, %3, 108:i32
%6:i32 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %0, %4, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (00000000000000000000000000000xxx) (n)
%2:i1 = eq 5:i32, %1
%3:i32 = select %2, 0:i32, %1
%4:i32 = phi %0, 2:i32, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = var (0000000000000x000000000000000000) (n)
%3:i32 = var (0000000000000000000000000x000000) (n)
%4:i32 = or %2, %3
%5:i1 = var
%6:i32 = var (000000000000000000000000000000xx) (n)
%7:i32 = select %5, 0:i32, %6
%8:i32 = or %4, %7
%9:i32 = or 128:i32, %8
%10:i32 = phi %0, %8, %9, %8, %9, %8
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 31:i32
%3:i32 = xor 1:i32, %2
%4:i32 = phi %0, %3, 3:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %1, %5, %7
%9:i32 = phi %0, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4:i8 = phi %3, 0:i8, 0:i8, 1:i8
%5:i8 = phi %0, %2, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8, %3, %3, %3
%5:i8 = phi %0, 0:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 3
%2 = block 5
%3:i32 = phi %2, 268:i32, 272:i32, 265:i32, 269:i32, 263:i32
%4:i32 = phi %1, 273:i32, %3, %3
%5:i32 = phi %0, 99:i32, 99:i32, 265:i32, 269:i32, 265:i32, 269:i32, 263:i32, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 5
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 17
%2 = block 3
%3:i1 = var
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = select %3, 2:i64, %4
%6:i64 = phi %1, 0:i64, 2:i64, 2:i64, 2:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %5, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%7 = block 2
%8:i64 = phi %7, %6, 2:i64
%9:i64 = phi %0, %6, %8, %8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 10:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 0:i32, %7
%9:i32 = phi %0, 0:i32, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5 = block 5
%6 = block 4
%7:i32 = phi %6, 1:i32, 0:i32, 1:i32, 1:i32
%8:i32 = phi %5, 1:i32, 1:i32, 0:i32, 1:i32, %7
%9:i32 = phi %0, 0:i32, %4, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = xor 1:i32, %2
%4:i32 = var
%5:i32 = and 7:i32, %4
%6:i32 = phi %1, %3, %5, %5
%7:i32 = phi %0, %6, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ult 15:i32, %0
%2:i32 = select %1, 0:i32, %0
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, 1:i8, %5, %5
%7:i8 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 14:i32
%3:i32 = phi %0, %2, 14:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 5
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32
%4 = block 5
%5:i32 = phi %4, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, 0:i32, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, %2, %2, 0:i8, 0:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 5
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, 0:i8, 1:i8, 0:i8, %4
%6:i8 = phi %1, 0:i8, %5, %5
%7 = block 2
%8:i8 = phi %7, 0:i8, %6
%9:i8 = phi %0, %6, 0:i8, 0:i8, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = and 4095:i32, %2
%4:i32 = xor 4095:i32, %3
%5:i32 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = phi %1, %2, 4:i32
%4:i32 = phi %0, 4:i32, %3
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 11
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10 = block 2
%11:i32 = phi %10, 1:i32, 0:i32
%12 = block 2
%13:i32 = phi %12, 1:i32, 0:i32
%14:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, %3, %5, %7, 1:i32, %9, %11, %13
%15:i32 = phi %0, %14, 0:i32
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i8 = var (0000000x) (n)
%2:i1 = eq 0:i8, %1
%3:i1 = var
%4:i32 = select %3, 3:i32, 2:i32
%5:i32 = select %2, %4, 1:i32
%6:i8 = var (0000000x) (n)
%7:i1 = eq 0:i8, %6
%8:i1 = var
%9:i32 = select %8, 3:i32, 2:i32
%10:i32 = select %7, %9, 1:i32
%11:i8 = var (0000000x) (n)
%12:i1 = eq 0:i8, %11
%13:i1 = var
%14:i32 = select %13, 3:i32, 2:i32
%15:i32 = select %12, %14, 1:i32
%16:i8 = var (0000000x) (n)
%17:i1 = eq 0:i8, %16
%18:i1 = var
%19:i32 = select %18, 3:i32, 2:i32
%20:i32 = select %17, %19, 1:i32
%21:i32 = phi %0, 0:i32, 1:i32, 2:i32, %5, 0:i32, %10, 0:i32, %15, 0:i32, %20, 0:i32
infer %21

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, %3, 2:i32
%5:i32 = phi %0, 2:i32, 2:i32, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 5:i32
%4:i32 = phi %1, 1:i32, %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4
%6:i8 = phi %1, 0:i8, %5
%7:i8 = phi %0, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 4:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i16 = var (0000000x0x00000x) (zn)
%3:i16 = var (0000000x0x00010x) (zn)
%4:i16 = var (0000000x0x00001x) (zn)
%5:i16 = var (0000000x0x01000x) (zn)
%6:i16 = phi %1, %2, %3, %4, %5
%7:i16 = or 4096:i16, %6
%8:i16 = phi %0, %7, %6
%9:i16 = or 8192:i16, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 10
%3:i32 = var (000000000000000000000000000000xx) (zn)
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 2:i32, %4
%6:i32 = shlnsw %5, 25:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5 = block 3
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %2, 0:i32, %4, %6
%8:i32 = phi %1, 0:i32, 1:i32, %7
%9:i32 = phi %0, 1:i32, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2 = block 3
%3:i32 = var (0000000000000000000001010001110x) (zn)
%4:i32 = var (0000000000000000000000111011000x) (zn)
%5:i32 = var (00000000000000000000000001010xxx) (zn)
%6:i32 = phi %2, %3, %4, %5
%7:i32 = phi %1, %6, 98:i32, %6, 97:i32, 952:i32, 951:i32, 98:i32, 97:i32
%8:i32 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 6
%3 = block 4
%4:i32 = phi %3, 2:i32, 5:i32, 0:i32, 4:i32
%5:i32 = phi %2, %4, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%6:i32 = phi %1, 0:i32, 8:i32, %5
%7:i32 = phi %0, 3:i32, %6, %4, 6:i32, 7:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 6:i32, 1:i32
%4:i32 = phi %1, 6:i32, %3
%5:i32 = phi %0, %4, 6:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 6
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 7:i32, 6:i32, 7:i32
%3:i32 = phi %0, %2, 4:i32, %2, 5:i32, 8:i32, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i32 = phi %1, 3:i32, 2:i32, 2:i32
%3:i32 = phi %0, 6:i32, %2, 5:i32, 1:i32, 0:i32, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i8 = var (001xx100) (zn)
%4:i8 = phi %2, 20:i8, %3
%5:i8 = phi %1, 20:i8, %4, %4
%6:i8 = and 199:i8, %5
%7:i8 = or 32:i8, %6
%8:i8 = phi %0, %5, %7, %5, 20:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, 0:i8, %3, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 380:i32, 409:i32, 380:i32
%3:i37 = var (000000000000000000000000000000000000x) (n)
%4:i1 = ne 0:i37, %3
%5:i32 = select %4, 380:i32, %2
%6:i32 = phi %0, %2, %2, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i8 = var
%4:i32 = zext %3
%5:i32 = shlnw %4, 2:i32
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3 = block 7
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4, %2
%6:i32 = phi %0, 0:i32, %5
%7:i32 = shlnsw %6, 24:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 46
%1 = block 2
%2:i32 = phi %1, 0:i32, 7:i32
%3:i1 = var
%4 = block 2
%5:i32 = phi %4, 0:i32, 4:i32
%6:i32 = select %3, 0:i32, %5
%7 = block 2
%8:i32 = phi %7, 0:i32, 5:i32
%9:i1 = eq 5:i32, %8
%10:i32 = select %9, 6:i32, %8
%11:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %6, %6, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %10, %8, 11:i32, 0:i32, 0:i32, 8:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 10:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 9:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, %5
%7:i8 = phi %0, 1:i8, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5, 1:i32
%7:i32 = phi %0, 0:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i16 = phi %1, 11:i16, 5:i16, 6:i16, 0:i16
%3:i16 = phi %0, 7:i16, %2, 11:i16, 5:i16, 6:i16
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0010001x) (zn)
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4 = block 2
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %4, %6, 0:i8
%8:i8 = phi %3, %7, 0:i8
%9:i8 = phi %0, %2, 0:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var
%3:i32 = var
%4:i32 = select %1, %2, %3
%5:i32 = var
%6:i32 = phi %0, %4, %5
%7:i1 = ult 4294967263:i32, %6
%8:i32 = add 32:i32, %6
%9:i32 = select %7, 4294967295:i32, %8
%10:i32 = sub %9, %6
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i1 = xor 1:i1, %1
%3:i8 = zext %2
%4 = block 2
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = var (0000000x) (n)
%8:i8 = phi %5, %6, %7
%9:i8 = phi %4, %8, 1:i8
%10:i8 = phi %0, %3, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2 = block 2
%3:i1 = var
%4:i1 = or %1, %3
%5:i8 = zext %4
%6 = block 3
%7:i8 = phi %6, %5, %5, 1:i8
%8 = block 3
%9 = block 2
%10:i8 = phi %9, %7, 1:i8
%11:i8 = phi %8, %10, 1:i8, %10
%12:i8 = phi %0, %5, %7, %11, %7
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
%4:i32 = addnsw 8:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 2
%2:i32 = phi %1, 1:i32, 19:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %2, 1:i32, 1:i32, %4, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i32 = and 89:i32, %1
%3:i32 = addnw 2972:i32, %2
%4:i32 = and 91:i32, %1
%5:i32 = addnw 2968:i32, %4
%6:i32 = phi %0, %3, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 3
%2:i32 = phi %1, 14:i32, 1:i32, 14:i32
%3 = block 3
%4:i32 = phi %3, 14:i32, 1:i32, 14:i32
%5:i32 = phi %0, 14:i32, 14:i32, 1:i32, %2, 14:i32, 1:i32, %4, 14:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 3:i32, 0:i32
%3 = block 3
%4:i1 = var
%5:i32 = select %4, 0:i32, 3:i32
%6:i32 = phi %3, 3:i32, %5, 0:i32
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 2:i32, 0:i32, 1:i32
%4:i32 = phi %1, 2:i32, 0:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8, 1:i8
%5 = block 2
%6 = block 2
%7:i8 = phi %6, 0:i8, 1:i8
%8:i8 = phi %5, 1:i8, %7
%9:i8 = phi %0, 1:i8, %4, 1:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %1, 0:i32, %5, %7
%9:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2076:i32, 2077:i32
%3:i32 = phi %0, 2075:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = and 4294967295:i64, %1
%3:i64 = and 3:i64, %1
%4:i64 = subnsw %2, %3
%5:i64 = phi %0, %4, 0:i64, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5 = block 3
%6:i8 = phi %5, 0:i8, 0:i8, 1:i8
%7 = block 3
%8:i8 = phi %7, 0:i8, 0:i8, 1:i8
%9 = block 5
%10 = block 2
%11:i8 = phi %10, 0:i8, 1:i8
%12 = block 2
%13:i8 = phi %12, 0:i8, 1:i8
%14 = block 2
%15:i8 = phi %14, 0:i8, 1:i8
%16 = block 2
%17:i8 = phi %16, 0:i8, 1:i8
%18:i8 = phi %9, %11, %13, %15, %17, 0:i8
%19:i8 = phi %0, 0:i8, 0:i8, %2, %4, %6, %8, 0:i8, %18, %18
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 9
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 11
%2:i1 = var
%3:i32 = var (0000000000000000000000000000001x) (zn)
%4:i32 = select %2, %3, 1:i32
%5:i1 = var
%6:i32 = var (0000000000000000000000000000001x) (zn)
%7:i32 = select %5, %6, 1:i32
%8:i1 = var
%9:i32 = var (0000000000000000000000000000001x) (zn)
%10:i32 = select %8, %9, 1:i32
%11:i1 = var
%12:i32 = var (0000000000000000000000000000001x) (zn)
%13:i32 = select %11, %12, 1:i32
%14:i32 = phi %1, 0:i32, 1:i32, 2:i32, %4, 0:i32, %7, 0:i32, %10, 0:i32, %13, 0:i32
%15:i8 = var (0000000x) (n)
%16:i1 = eq 0:i8, %15
%17:i1 = var
%18:i32 = select %17, 3:i32, 2:i32
%19:i32 = select %16, %18, 1:i32
%20:i32 = phi %0, %14, %19, 0:i32
infer %20

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (0000000000000000000000000000000000000000x00000000000000000000000) (n)
%3:i64 = var (0000000000000000000000000000000000000000000000000000xxxx0000xxxx) (n)
%4:i64 = or %2, %3
%5:i32 = trunc %4
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3
%5 = block 2
%6 = block 2
%7:i8 = phi %6, 0:i8, 1:i8
%8:i8 = phi %5, %7, 1:i8
%9:i8 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 0:i32, 2:i32, 2:i32, 1:i32, 2:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 10:i8, 0:i8, 2:i8, 14:i8
%3:i8 = or 16:i8, %2
%4:i8 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %3, %5, %7
%9:i64 = var
%10:i64 = var
%11:i1 = ne %9, %10
%12:i8 = zext %11
%13:i8 = phi %0, %2, %8, %12, 1:i8, 1:i8, 0:i8, 1:i8, 0:i8, 0:i8
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 10:i8, 0:i8, 2:i8, 14:i8
%3:i8 = or 16:i8, %2
%4:i8 = phi %0, %3, %2
%5:i8 = or 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 16:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 0:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%2:i32 = shlnw %1, 9:i32
%3:i32 = or 256:i32, %2
%4:i32 = phi %0, %2, %3
%5:i32 = var
%6:i32 = var
%7:i32 = phi %0, %5, %6
%8:i32 = and 255:i32, %7
%9:i32 = or %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, %2, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 5
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5 = block 4
%6:i8 = phi %5, %4, 1:i8, 1:i8, 1:i8
%7:i8 = phi %0, %4, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, %5, 0:i8
%7:i8 = phi %2, 1:i8, %6, %6
%8:i8 = phi %1, %7, %6
%9 = block 3
%10:i8 = phi %9, 1:i8, %8, %8
%11:i8 = phi %0, %8, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 13
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6 = block 4
%7:i32 = phi %6, 0:i32, 1:i32, 0:i32, 1:i32
%8 = block 2
%9 = block 2
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = phi %8, 0:i32, %10
%12:i32 = phi %1, 0:i32, 0:i32, %3, 0:i32, 0:i32, %5, 0:i32, 0:i32, %7, 0:i32, 0:i32, %11, 0:i32
%13:i32 = phi %0, 0:i32, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i32 = select %1, 0:i32, 5:i32
%3:i1 = var
%4:i32 = select %3, 0:i32, 4:i32
%5:i1 = var
%6:i32 = select %5, 0:i32, 3:i32
%7 = block 2
%8:i1 = var
%9:i32 = select %8, 0:i32, 2:i32
%10:i32 = phi %7, 0:i32, %9
%11 = block 2
%12:i1 = var
%13:i1 = phi %11, 0:i1, %12
%14:i32 = zext %13
%15:i32 = phi %0, 0:i32, %2, %4, %6, %10, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3
%5:i8 = phi %1, 0:i8, %4
%6:i8 = and 1:i8, %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = or %6, %8
%10:i8 = phi %0, %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 4:i32
%3:i32 = phi %0, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4 = block 3
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, %5, 1:i8
%7:i8 = phi %2, 0:i8, %6
%8:i8 = phi %1, 0:i8, %7, %6
%9:i8 = phi %0, %8, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = add 3:i64, %0
%2:i64 = and 18446744073709551612:i64, %1
%3:i64 = sub %2, %0
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 0:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000x00000000000x0000xx) (n)
%3:i32 = var (0000000000000x0000000000xx0000xx) (n)
%4:i32 = var (0000000000000x0000000000xx0000xx) (n)
%5:i32 = phi %1, %2, %3, %4
%6:i32 = or 256:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 16
%2 = block 4
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8, 1:i8, 1:i8
%6:i8 = phi %1, %5, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%7:i8 = phi %0, %6, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (zn)
%3:i32 = addnw 3:i32, %2
%4:i32 = addnw 2:i32, %2
%5:i32 = phi %0, %3, %4
%6:i32 = addnsw 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = ashr %2, 31:i32
%4:i32 = xor %3, %2
%5 = block 5
%6:i32 = phi %5, %4, 0:i32, %4, %4, %4
%7:i32 = phi %0, %4, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, 1:i32, %5
%7:i32 = phi %0, 0:i32, 1:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7 = block 2
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10:i32 = phi %7, 0:i32, %9
%11:i32 = phi %0, 1:i32, 0:i32, %2, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2033:i32, 2544:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = sub %1, %2
%4:i32 = and 255:i32, %3
%5:i32 = shlnw %4, 1:i32
%6:i32 = phi %0, %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 8
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9 = block 2
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = phi %4, 0:i32, %6, %8, 1:i32, 1:i32, 1:i32, 1:i32, %10
%12:i32 = phi %3, 0:i32, %11
%13:i32 = phi %0, 0:i32, %2, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1 = block 4
%2:i32 = var (00000000000000000000000xxx000000) (zn)
%3:i64 = zext %2
%4:i64 = addnw %0, %3
%5:i64 = addnsw 18446744073709551615:i64, %4
%6:i64 = urem %5, %3
%7:i64 = subnsw %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 3035:i32
%4 = block 4
%5:i32 = var (0000000000000000000010111xxxxxxx) (zn)
%6:i32 = phi %4, 2970:i32, 0:i32, %5, 3035:i32
%7 = block 2
%8:i32 = phi %7, 0:i32, 3035:i32
%9:i32 = phi %1, %3, %6, %8
%10:i32 = phi %0, 3035:i32, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 3:i32
%3:i32 = phi %0, 3:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 10
%2:i32 = phi %1, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 2:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 1:i32, %8
%10:i32 = phi %1, 0:i32, %5, %9
%11 = block 2
%12 = block 2
%13:i32 = phi %12, 1:i32, 2:i32
%14:i32 = phi %11, 1:i32, %13
%15:i32 = phi %0, 1:i32, %10, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4 = block 3
%5:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%6:i64 = phi %4, %5, 0:i64, 0:i64
%7:i64 = phi %1, %3, %6
%8:i64 = phi %0, %7, 0:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 4
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4
%6:i1 = var
%7:i8 = select %6, 1:i8, %5
%8:i8 = phi %1, %5, %7
%9:i8 = phi %0, 1:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (zn)
%3:i32 = phi %0, 0:i32, %2
%4:i32 = shl 1:i32, %3
%5:i32 = addnsw 4294967295:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, 0:i32, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 13
%2 = block 6
%3:i32 = var (0000000000000000000000000010xx01) (zn)
%4:i32 = var (0000000000000000000000000010xx00) (zn)
%5:i32 = var (00000000000000000000000000100x11) (zn)
%6:i32 = var (00000000000000000000000000100x10) (zn)
%7:i32 = phi %2, 33:i32, %3, %4, %5, %6, 32:i32
%8:i32 = phi %1, %7, %7, 38:i32, 34:i32, 39:i32, %7, %7, %7, 41:i32, 37:i32, 40:i32, %7, %7
%9:i32 = phi %0, %8, %7, %7, %7, %7, %7, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 56
%1 = block 5
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4 = block 26
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %1, 0:i8, %3, %3, %6, 0:i8
%8:i8 = phi %0, %7, %3, %3, 0:i8, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6 = block 2
%7:i8 = phi %6, 1:i8, 0:i8
%8:i8 = phi %1, 0:i8, 0:i8, %5, %7
%9:i8 = phi %0, %8, %5, %5, %7, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2156:i32, 0:i32
%4:i32 = phi %1, %3, 2186:i32
%5 = block 3
%6:i1 = var
%7:i32 = select %6, 3051:i32, 0:i32
%8:i32 = phi %5, 3055:i32, %7, 3053:i32
%9 = block 3
%10:i32 = select %6, 2875:i32, 0:i32
%11:i32 = phi %9, 2896:i32, %10, 2889:i32
%12 = block 3
%13:i32 = select %6, 496:i32, 0:i32
%14:i32 = phi %12, 520:i32, %13, 514:i32
%15:i32 = phi %0, %4, %8, %11, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3, 1:i32
%5 = block 2
%6:i32 = phi %5, 0:i32, 1:i32
%7:i32 = phi %0, 0:i32, %4, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 5
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 1:i8, %3, %3, %3
%5:i8 = phi %1, 0:i8, %4, %4
%6:i8 = phi %0, 0:i8, %5, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i1 = var
%2:i8 = zext %1
%3 = block 10
%4:i1 = var
%5:i8 = zext %4
%6 = block 10
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, %7, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%9:i8 = phi %3, %5, %8, %8, %8, %8, %8, %8, %8, %8, %8
%10:i8 = phi %0, %2, %9, %9, %9, 0:i8, %9, 0:i8, 0:i8, %9, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4 = block 2
%5:i8 = phi %4, 1:i8, 0:i8
%6:i8 = phi %3, 0:i8, %5, 0:i8
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, %3, 1:i32
%5 = block 2
%6:i32 = phi %5, %4, 0:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 2:i32, 3:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 0:i32, 0:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 2
%2:i32 = phi %1, 3:i32, 2:i32
%3 = block 6
%4:i32 = phi %3, 3:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32
%5:i32 = phi %0, 0:i32, 2:i32, 0:i32, %2, 0:i32, 1:i32, 0:i32, %4, 0:i32, 3:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 16:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4, 0:i32
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 2
%4 = block 3
%5 = block 2
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = phi %5, %7, 1:i8
%9:i8 = phi %4, 0:i8, %8, 1:i8
%10:i8 = phi %3, %9, %8
%11:i8 = phi %0, 0:i8, %2, %10, 1:i8
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %1, %5, %7, %7
%9:i1 = var
%10:i8 = zext %9
%11:i8 = phi %0, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 3
%2:i32 = phi %1, 3:i32, 46:i32, 3:i32
%3:i32 = phi %0, 46:i32, 46:i32, 58:i32, 46:i32, 46:i32, 46:i32, 3:i32, 3:i32, %2, 46:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = and %1, %2
%4:i64 = phi %0, 0:i64, %3
%5:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1) (z)
%6:i64 = zext %5
%7:i64 = shl 1:i64, %6
%8:i64 = and %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4:i1 = var
%5:i8 = zext %4
%6 = block 3
%7 = block 2
%8:i8 = var (0000000x) (n)
%9:i8 = phi %6, %8, %8, 0:i8
%10:i8 = phi %3, %5, %9, 0:i8
%11:i8 = phi %0, %2, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 3:i32, 0:i32
%3:i32 = phi %0, 3:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000xxxx10) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000001xx10) (zn)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 2:i32, %5
%7:i32 = phi %0, %6, %5
%8:i16 = trunc %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, %5, 0:i8, 0:i8
%7:i8 = phi %0, %6, 1:i8, 0:i8, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 0:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 0:i32, 1:i32, 2:i32, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 10
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 114:i32, 113:i32
%5 = block 23
%6 = block 2
%7:i32 = var (000000000000000000000000x0x000xx) (n)
%8:i32 = phi %5, %7, 161:i32, 160:i32, 96:i32, 95:i32, 94:i32, 160:i32, 161:i32, 97:i32, 162:i32, 160:i32, 162:i32, 162:i32, 162:i32, 163:i32, 161:i32, 163:i32, 163:i32, 163:i32, 160:i32, 162:i32, 161:i32, 163:i32
%9:i32 = phi %1, %4, %8, %4, %4, %4, %4, %4, %4, %4, %4
%10:i32 = phi %0, %9, %4, %4
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i32 = var (000000000000000000000000000000xx) (n)
%2:i32 = phi %0, 0:i32, 1:i32, 2:i32, %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 1:i32, 1:i32
%3:i16 = trunc %2
%4:i16 = shlnw %3, 2:i16
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (00000000000000000000000000000x01) (zn)
%5:i32 = phi %2, %4, 5:i32
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 1:i32, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 1:i1, %2
%4:i8 = zext %3
%5 = block 2
%6:i1 = var
%7:i8 = zext %6
%8 = block 3
%9:i8 = var (0000000x) (n)
%10:i8 = var (0000000x) (n)
%11:i8 = var (0000000x) (n)
%12:i8 = phi %8, %9, %10, %11
%13:i8 = phi %5, %7, %12
%14:i8 = phi %0, %4, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %5, %6, 4:i32
%8:i32 = phi %4, 0:i32, %7
%9:i32 = phi %0, 0:i32, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var
%2:i32 = zext %1
%3:i32 = shlnw %2, 9:i32
%4:i32 = or 256:i32, %3
%5:i32 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ult 65535:i32, %1
%3 = block 2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, 0:i8, %5
%7:i8 = select %2, 1:i8, %6
%8:i32 = var
%9:i1 = ult 65535:i32, %8
%10:i8 = zext %9
%11:i8 = phi %0, %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 30
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5 = block 3
%6:i8 = phi %5, 1:i8, 1:i8, 0:i8
%7 = block 3
%8:i8 = phi %7, 1:i8, 1:i8, 0:i8
%9 = block 3
%10:i8 = phi %9, 1:i8, 1:i8, 0:i8
%11 = block 3
%12:i8 = phi %11, 1:i8, 1:i8, 0:i8
%13 = block 3
%14:i8 = phi %13, 1:i8, 1:i8, 0:i8
%15:i8 = phi %0, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8, %2, 1:i8, 1:i8, %4, 1:i8, 1:i8, %6, 1:i8, 1:i8, %8, 1:i8, 1:i8, %10, 1:i8, 1:i8, %12, 1:i8, 1:i8, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8 = block 2
%9 = block 3
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = phi %8, 0:i32, %10
%12:i32 = phi %1, %5, %7, %11
%13:i32 = phi %0, 1:i32, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = var (00000000000000000000000000000xxx) (zn)
%5:i32 = var (00000000000000000000000000000xxx) (n)
%6:i32 = phi %2, %3, %4, %5
%7:i32 = addnsw 1:i32, %6
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = addnsw %6, %8
%10:i32 = phi %1, %6, %7, %9
%11:i32 = add 1:i32, %10
%12:i1 = var
%13:i32 = zext %12
%14:i32 = add %10, %13
%15:i32 = phi %0, %10, %11, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%2:i1 = eq 0:i32, %1
%3:i1 = var
%4 = block 2
%5:i32 = var (000000000000000000000000000000x1) (zn)
%6:i32 = select %3, 1:i32, %5
%7:i32 = select %2, %6, 1:i32
%8:i32 = phi %0, %7, 0:i32, 0:i32, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var
%2:i32 = zext %1
%3:i32 = shlnw %2, 1:i32
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, %3, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 2
%3:i8 = phi %2, %1, 1:i8
%4:i8 = phi %0, %1, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 1:i8, 1:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 5:i32
%4:i32 = phi %0, 5:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = zext %1
%3 = block 2
%4:i1 = var
%5:i32 = zext %4
%6:i1 = var
%7:i32 = zext %6
%8:i32 = phi %3, %5, %7
%9:i32 = phi %0, 1:i32, %2, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = var
%3:i32 = var (0000000xxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = udiv %2, %3
%5:i32 = lshr %4, 1:i32
%6:i32 = urem %1, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 6:i32
%5:i32 = phi %1, 1:i32, 1:i32, %4, 0:i32
%6:i32 = phi %0, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 268697828:i64, 0:i64
%3:i64 = or 256:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = or 512:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 2:i32, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var
%2:i16 = and 32703:i16, %1
%3:i16 = or 65:i16, %2
%4:i16 = or 64:i16, %2
%5:i16 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2
%4:i8 = zext %3
%5 = block 3
%6:i8 = phi %5, 0:i8, 1:i8, 0:i8
%7:i8 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 1:i32, 2:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, %2
%5:i8 = phi %0, %2, %2, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5 = block 2
%6:i32 = phi %5, 0:i32, 1:i32
%7 = block 2
%8:i32 = phi %7, 0:i32, 1:i32
%9:i32 = phi %0, 1:i32, 0:i32, %2, %4, 1:i32, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 3:i32, 1:i32, 2:i32, 2:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3 = block 2
%4 = block 3
%5:i32 = phi %4, 1:i32, 0:i32, 0:i32
%6:i32 = phi %3, %5, 0:i32
%7:i32 = phi %0, %2, %6, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 4095:i32, %1
%3:i32 = or 4096:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4, 1:i32
%6:i32 = phi %1, %5, 1:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 4
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3 = block 12
%4:i32 = var (0000000000000000000000000000xxxx) (zn)
%5:i32 = select %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 3
%2 = block 3
%3 = block 6
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, %4, 1:i32
%6:i32 = phi %1, %5, %5, 1:i32
%7:i32 = phi %0, 0:i32, 0:i32, 1:i32, %6, 1:i32, 1:i32, 1:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 184:i64
%4:i64 = subnsw 100254043878856258:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1) (z)
%4:i1 = eq 313:i32, %3
%5:i8 = zext %4
%6:i1 = eq 315:i32, %3
%7:i8 = zext %6
%8:i8 = phi %0, 0:i8, %2, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 5:i32, 2:i32, 3:i32
%3:i32 = phi %0, 1:i32, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000000000001x00000000x) (zn)
%3 = block 4
%4:i32 = var (0000000000000000000000x00000000x) (n)
%5:i32 = phi %1, %2, %4, %4
%6:i32 = or 128:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 2:i32, 0:i32, 2:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i1 = ult 255:i32, %1
%3:i32 = lshr %1, 8:i32
%4:i32 = or 2560:i32, %3
%5:i32 = or 2048:i32, %1
%6:i32 = select %2, %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, 127:i64, %3
%5:i64 = phi %0, %4, 127:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 3:i32, 3:i32, 1:i32, 3:i32
%3:i32 = phi %0, %2, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (000000000000000000000000000x0100) (zn)
%3:i32 = var (000000000000000000000001000x0100) (zn)
%4 = block 2
%5:i32 = var (000000000000000000000000000x0000) (n)
%6:i32 = phi %1, %2, %3, %5
%7:i32 = or 32:i32, %6
%8:i32 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %3, %4, 3:i32
%6:i32 = phi %0, 1:i32, 0:i32, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 3:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000x0x) (n)
%3:i32 = phi %1, %2, 4:i32
%4:i32 = phi %0, 4:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 26
%4:i1 = var
%5:i1 = phi %3, %4, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1
%6:i8 = zext %5
%7:i8 = phi %0, 0:i8, %2, %2, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %2, %3
%5:i32 = or 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8
%6:i8 = phi %1, 0:i8, %5, 1:i8
%7:i8 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %1, 1:i32, %4, 0:i32, %6
%8:i32 = phi %0, 0:i32, 1:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (00000000000000000000000000xxxxxx) (n)
%2:i8 = trunc %1
%3:i8 = and 1:i8, %2
%4 = block 3
%5:i32 = var
%6:i1 = eq 0:i32, %5
%7:i8 = select %6, 0:i8, %3
%8:i8 = phi %0, %3, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 2:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = var (0000000000000x000000000000000000) (n)
%3:i32 = var (0000000000000000000000000x000000) (n)
%4:i32 = or %2, %3
%5:i1 = var
%6:i32 = var (000000000000000000000000000000xx) (n)
%7:i32 = select %5, 0:i32, %6
%8:i32 = or %4, %7
%9:i32 = var (00000000000000000000000xxxxxxxxx) (n)
%10:i32 = and 128:i32, %9
%11:i32 = or %10, %8
%12:i8 = var (x0000000)
%13:i32 = zext %12
%14:i32 = or %8, %13
%15:i32 = phi %0, %8, %11, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = phi %1, 1:i1, 0:i1
%3:i32 = select %2, 2:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 2:i32, 0:i32
%6 = block 2
%7:i32 = phi %6, 2:i32, 0:i32
%8:i32 = phi %0, %3, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2 = block 4
%3:i8 = phi %2, %1, 0:i8, %1, %1
%4:i8 = phi %0, %1, %3, %1
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 7:i32, 4:i32, 6:i32, 5:i32
%3:i32 = phi %0, 3:i32, %2, 1:i32
%4:i32 = or 80:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 4
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3, %3, %3
%5:i8 = phi %0, 0:i8, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 1:i32, %2, 2:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 5
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, %5, %4, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (zn)
%4:i32 = addnw 3:i32, %3
%5:i32 = addnw 2:i32, %3
%6:i32 = phi %1, %4, %5
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 5:i32, 3:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 9
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000001x) (zn)
%4:i32 = phi %1, 3:i32, %3
%5:i32 = addnsw 4294967295:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8, 0:i8
%4:i1 = var
%5:i8 = zext %4
%6:i8 = and %3, %5
%7:i8 = phi %0, %6, %3, %3, %3, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 4
%3:i8 = var (0000000x) (n)
%4:i8 = shlnw %3, 3:i8
%5:i8 = or %1, %4
%6:i8 = phi %0, %1, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, %2, %4, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i16 = var (000000000000000x) (n)
%2:i16 = shlnw %1, 12:i16
%3:i16 = phi %0, 0:i16, 0:i16, 0:i16, 0:i16, 4096:i16, 4096:i16, 0:i16, %2, 0:i16
%4:i16 = var
%5:i16 = and 4096:i16, %4
%6:i16 = or %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 12
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i32 = phi %1, 0:i32, 7:i32, 1:i32, 3:i32, 5:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %2, %4, 0:i8, 0:i8
%6:i8 = phi %1, 0:i8, %5, %4
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 10:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = var (0000000x) (n)
%3:i8 = xor 1:i8, %2
%4:i8 = var (0000000x) (n)
%5:i8 = xor 1:i8, %4
%6:i8 = phi %1, 0:i8, 0:i8, 0:i8, %3, %5
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7 = block 2
%8 = block 3
%9:i32 = phi %8, 1:i32, 1:i32, 0:i32
%10:i32 = phi %7, 0:i32, %9
%11:i32 = phi %0, %4, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 2:i32, 0:i32, 2:i32
%4:i32 = phi %1, 2:i32, %3
%5 = block 3
%6:i32 = phi %5, 2:i32, 0:i32, 2:i32
%7:i32 = phi %0, %4, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = and 31:i32, %2
%4:i32 = phi %1, 11:i32, %3
%5:i32 = phi %0, %4, 11:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 2:i32
%3:i32 = and 255:i32, %2
%4:i1 = var
%5:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i32 = and 255:i32, %5
%7:i32 = or 256:i32, %6
%8:i32 = select %4, %7, %6
%9:i32 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = phi %2, %3, 0:i32, 1:i32
%5:i32 = phi %1, 0:i32, %4, 1:i32
%6:i32 = phi %0, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var
%2:i8 = trunc %1
%3:i8 = and 7:i8, %2
%4:i8 = or 32:i8, %3
%5:i8 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i16 = var (000000000000000x) (n)
%3:i16 = var (0000000x0x000000) (znp)
%4:i16 = or %2, %3
%5:i16 = or 4:i16, %4
%6:i16 = or 2:i16, %4
%7:i16 = or 16:i16, %4
%8:i16 = phi %0, %4, %5, %6, %7
%9:i16 = or 4096:i16, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5 = block 2
%6:i8 = phi %5, 1:i8, 0:i8
%7:i8 = phi %0, %2, %4, 0:i8, %6, 0:i8, 0:i8, 0:i8, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = phi %1, 8:i32, 4:i32, 2:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 2:i32, 4:i32, 8:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2 = block 17
%3:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (n)
%4:i64 = phi %2, 0:i64, 2:i64, 2:i64, 2:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %3, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%5 = block 2
%6:i64 = phi %5, %4, 2:i64
%7:i64 = phi %1, %4, %6, %6, %6, %6, %6
%8:i64 = phi %0, %7, 2:i64, 2:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %1, 0:i32, %3, %5, %7
%9:i32 = phi %0, 1:i32, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 16:i32, 0:i32
%3:i32 = or 32:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = xor 31:i32, %0
%2:i8 = var (0000000x) (n)
%3:i32 = zext %2
%4:i32 = subnsw %1, %3
%5 = block 3
%6:i1 = var
%7:i1 = phi %5, %6, 1:i1, 0:i1
%8:i32 = zext %7
%9:i32 = subnsw %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 0:i32, %7
%9:i32 = phi %0, 1:i32, %2, %4, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 10
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 2:i32, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, 0:i32, 0:i32, %2, 0:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2 = block 2
%3:i8 = var
%4:i1 = ne %1, %3
%5:i8 = zext %4
%6 = block 3
%7:i8 = phi %6, 0:i8, 0:i8, 1:i8
%8:i8 = phi %0, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i1 = eq %2, %3
%5:i8 = zext %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %1, 0:i8, 1:i8, 1:i8, %7
%9:i8 = phi %0, %5, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 3396:i32, 3398:i32
%3:i32 = phi %0, 3578:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7 = block 2
%8:i32 = phi %7, 1:i32, 2:i32
%9:i32 = phi %0, 1:i32, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 2:i32, 2:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = lshr %0, 3:i32
%2:i64 = var
%3:i32 = trunc %2
%4:i32 = udiv %1, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6 = block 3
%7:i32 = phi %6, 1:i32, 1:i32, 0:i32
%8:i32 = phi %5, 0:i32, %7
%9:i32 = phi %0, 1:i32, 0:i32, %2, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 268:i32, 272:i32, 265:i32, 269:i32, 263:i32
%3:i32 = phi %0, 273:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 1:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 4:i32, 0:i32, 1:i32
%3 = block 3
%4:i32 = phi %3, 4:i32, 0:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = mulnw 68:i64, %1
%3:i64 = addnw 56:i64, %2
%4:i64 = mulnw 80:i64, %1
%5:i64 = addnw 72:i64, %4
%6:i64 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, %3, 0:i32, 0:i32, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5 = block 5
%6 = block 2
%7:i32 = phi %6, 0:i32, 1:i32
%8:i32 = phi %5, 0:i32, 1:i32, 1:i32, %7, 1:i32
%9:i32 = phi %0, 0:i32, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 2
%3 = block 10
%4:i32 = var (0000000000000000000000000000xxxx) (n)
%5:i32 = phi %2, %4, 0:i32
%6:i32 = phi %1, 0:i32, 1:i32, %5, %5, %5, %5
%7:i32 = phi %0, 10:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = trunc %0
%2:i32 = udiv 16:i32, %1
infer %2

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 7
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3, 1:i32, 1:i32
%5:i32 = phi %0, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i32 = phi %1, 4:i32, 3:i32, 3:i32, 3:i32
%3:i32 = phi %0, 0:i32, 4:i32, %2, 1:i32, 2:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, %5, 1:i8, %5
%7:i8 = phi %0, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = or %0, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
%6:i8 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = and 65535:i32, %2
%4:i32 = lshr %2, 16:i32
%5:i32 = phi %1, %3, %4
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 5:i32
%5:i32 = phi %1, 1:i32, 0:i32, %4
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 1:i32, %3, %5, 0:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %0, 1:i8, 1:i8, %2, %4, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 6:i32
%3:i32 = phi %0, %2, 6:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, %3, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 6
%2 = block 4
%3:i8 = phi %2, 0:i8, 0:i8, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i1 = var
%3:i32 = zext %2
%4:i1 = var
%5:i32 = zext %4
%6 = block 2
%7:i32 = phi %6, 2:i32, 0:i32
%8:i32 = phi %1, %3, %5, %7, %7
%9:i1 = var
%10:i32 = zext %9
%11:i1 = var
%12:i32 = zext %11
%13:i32 = phi %0, %8, %10, %12, 1:i32, 1:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000xxxxxx) (n)
%2:i64 = addnw 65:i64, %1
%3:i32 = trunc %2
%4:i64 = var (0000000000000000000000000000000000000000000000000000000000xxxxxx) (n)
%5:i32 = trunc %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, 0:i32, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %1, 0:i32, %3, %7
%9:i32 = phi %0, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 12:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %1, %2, %4, %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = and %5, %7
%9:i8 = phi %0, %8, %5, %5
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = mulnw 48:i64, %1
%3:i64 = phi %0, %2, 0:i64
%4:i64 = var (00000000000000000000000000000000000000000000000000000000000x0000) (n)
%5:i64 = phi %0, 16:i64, %4
%6:i64 = var
%7:i64 = and 24:i64, %6
%8:i64 = addnsw %5, %7
%9:i64 = addnsw %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 1:i32, 2:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5:i32 = phi %0, 0:i32, 1:i32, %2, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i16 = var (000000000000000x) (n)
%3:i8 = trunc %2
%4:i8 = xor 1:i8, %3
%5 = block 3
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %1, %4, %7, %7
%9 = block 3
%10:i1 = var
%11:i8 = zext %10
%12:i8 = phi %1, %3, %11, %11
%13:i8 = phi %0, %8, %12, %11
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i1 = eq 2:i32, %2
%4:i32 = select %3, 0:i32, %2
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3, %7
%9:i32 = phi %0, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = zext %1
%3 = block 7
%4:i32 = phi %3, 1:i32, %2, %2, %2, %2, %2, %2
%5:i32 = phi %0, %2, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, 0:i8, %4
%6:i8 = phi %1, 0:i8, %5, 0:i8
%7:i8 = phi %0, %6, %6, 0:i8, 0:i8, 0:i8, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, 1:i8, %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, %4, 0:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = xor 1:i32, %2
%4:i32 = var
%5:i32 = and 7:i32, %4
%6:i32 = phi %1, %3, %5, %5
%7:i32 = phi %0, %6, 0:i32, 0:i32, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 4693:i32, 4641:i32
%4:i32 = phi %1, %3, 0:i32, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (0000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000) (n)
%3:i64 = phi %1, %2, 0:i64
%4:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%5:i64 = addnsw %3, %4
%6:i64 = phi %0, %5, %3
%7:i64 = shlnsw %6, 4:i64
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 3:i32, 0:i32
%3:i32 = var
%4:i1 = eq 4:i32, %3
%5:i32 = select %1, 4:i32, 2:i32
%6:i32 = select %4, 1:i32, %5
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 64:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 3
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %4, 0:i8, %6, 0:i8
%8:i8 = phi %1, %3, %7
%9:i8 = phi %0, %8, 0:i8, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 2:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 5
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %1, 1:i32, %3, %7
%9:i32 = phi %0, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 2
%2:i64 = var
%3:i1 = ne 0:i64, %2
%4:i32 = select %3, 2:i32, 1:i32
%5:i1 = var
%6:i32 = select %5, 0:i32, 2:i32
%7:i1 = var
%8:i1 = xor 1:i1, %7
%9:i32 = zext %8
%10 = block 2
%11:i32 = phi %10, 2:i32, 0:i32
%12 = block 2
%13:i32 = phi %12, 2:i32, 0:i32
%14:i32 = phi %0, 1:i32, %4, %6, 0:i32, %9, 1:i32, 0:i32, 2:i32, 0:i32, 0:i32, 1:i32, 2:i32, %11, 0:i32, %13, 0:i32
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 3:i32, 5:i32
%3:i32 = phi %0, 2:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 1:i8, %3
%5:i8 = phi %1, %4, %4, 1:i8, %4, 1:i8
%6:i8 = phi %0, 1:i8, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8, 0:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000xxxxxxxxx) (zn)
%1:i32 = and 7:i32, %0
%2:i32 = shl 256:i32, %1
%3:i32 = addnsw 4294967040:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8, 1:i8
%5:i8 = phi %0, %4, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = phi %2, %5, %5, %7
%9:i8 = phi %1, %8, %5, %5
%10:i8 = phi %0, 0:i8, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (znp)
%4:i32 = phi %2, 1:i32, %3
%5:i32 = var (00000000000000000000000000000xxx) (n)
%6:i32 = addnw %4, %5
%7:i32 = phi %1, %6, %4
%8:i32 = addnw 1:i32, %4
%9:i32 = phi %0, %7, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 8:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %1, 0:i32, %4, %6
%8:i32 = phi %0, 0:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i1 = var
%3:i32 = select %2, 7841:i32, 1786:i32
%4:i32 = select %1, 7838:i32, %3
%5:i32 = select %2, 7670:i32, 1767:i32
%6:i32 = select %1, 7634:i32, %5
%7:i32 = select %2, 7810:i32, 1771:i32
%8:i32 = select %1, 7741:i32, %7
%9:i32 = phi %0, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 8:i32, 72:i32, 69:i32, 5:i32, 2:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 4:i32, 0:i32, 1:i32
%4:i32 = phi %1, %3, 3:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, %2, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 2:i32, 1:i32, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 4:i32, 1:i32, 3:i32, 2:i32
%3:i32 = phi %0, 5:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %2, %4, %6
%8:i32 = phi %1, %7, 1:i32
%9:i32 = phi %0, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = phi %0, 7:i32, 8:i32, 0:i32
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 5
%2 = block 4
%3 = block 2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, 1:i8, %5
%7 = block 2
%8:i8 = phi %7, 1:i8, 0:i8
%9:i8 = phi %2, 0:i8, 0:i8, %6, %8
%10:i8 = phi %1, %9, %6, %6, %8, 0:i8
%11 = block 2
%12 = block 2
%13:i8 = phi %12, 1:i8, 0:i8
%14:i8 = phi %11, 1:i8, %13
%15 = block 2
%16 = block 2
%17 = block 2
%18:i8 = var (0000000x) (n)
%19:i8 = phi %16, %18, 0:i8
%20:i8 = phi %15, %19, 0:i8
%21 = block 2
%22 = block 2
%23:i8 = phi %22, 1:i8, 0:i8
%24:i8 = phi %21, 1:i8, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28 = block 2
%29:i8 = var (0000000x) (n)
%30:i8 = phi %27, 1:i8, %29
%31:i8 = phi %26, 1:i8, %30
%32:i8 = phi %25, %31, %30
%33 = block 2
%34 = block 2
%35 = block 2
%36:i8 = var (0000000x) (n)
%37:i8 = phi %34, 0:i8, %36
%38 = block 2
%39:i8 = phi %38, 1:i8, 0:i8
%40:i8 = phi %33, %37, %39
%41:i8 = phi %0, 0:i8, %10, 1:i8, 0:i8, %14, %20, %24, %32, %40
infer %41

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 14:i32, 4:i32, 0:i32
%3:i32 = phi %0, 14:i32, %2, 14:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 2582:i32, 2585:i32
%4:i8 = var (0000x000) (n)
%5:i32 = zext %4
%6:i32 = addnw 138:i32, %5
%7:i8 = var (0000000x) (n)
%8:i1 = ne 0:i8, %7
%9:i32 = select %8, 810:i32, 807:i32
%10:i32 = select %8, 812:i32, 809:i32
%11:i32 = phi %0, %3, 2586:i32, %6, 147:i32, %9, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 2:i32, 1:i32, 2:i32
%3 = block 2
%4:i32 = phi %3, 2:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var
%2:i32 = zext %1
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, 0:i32, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 2:i32, 3:i32
%3 = block 7
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = lshr %4, 1:i32
%6:i32 = phi %0, %2, %5
%7:i32 = addnsw 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1:i32, 2:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32, 0:i32
%5:i32 = phi %0, 1:i32, 2:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 6
%3:i32 = phi %2, 3:i32, 1:i32, 3:i32, 0:i32, 2:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 1:i32, %8
%10:i32 = phi %5, %9, 0:i32
%11:i32 = phi %0, 0:i32, %4, 1:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i256 = var (00000000000000000000000000000x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) (n)
%2:i1 = ne 0:i256, %1
%3:i32 = select %2, 3:i32, 1:i32
%4 = block 4
%5 = block 5
%6:i32 = var (00000000000000000000000000000xx1) (zn)
%7 = block 2
%8:i32 = phi %7, 2:i32, 4:i32
%9:i32 = phi %5, 8:i32, %6, %6, %8, %8
%10:i32 = phi %4, %9, %8, %8, 0:i32
%11:i32 = phi %0, %3, %10, 4:i32, 0:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 19:i32
%5:i32 = phi %1, 1:i32, 1:i32, %4
%6:i32 = phi %0, %5, 0:i32, 1:i32, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 5:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 5
%3:i32 = phi %2, 1:i32, 3:i32, 3:i32, 1:i32, 3:i32
%4:i32 = phi %1, %3, 3:i32
%5:i32 = phi %0, 3:i32, %4, 3:i32, 3:i32, 3:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 36:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 512409557603043100:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 512409557603043100:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, %3
%5:i8 = and 1:i8, %4
%6:i8 = xor 1:i8, %5
%7:i8 = phi %0, %6, %4, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 2185:i32, 2185:i32, 2185:i32, 2184:i32
%3 = block 3
%4:i32 = phi %3, 2185:i32, 2184:i32, 2184:i32
%5:i32 = phi %0, %2, 2185:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 2:i32, %3, 1:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4394:i32, 4400:i32
%3:i32 = phi %0, %2, 4400:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 9
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 12:i32
%3:i32 = phi %0, 1:i32, 2:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 0:i32, 134:i32, 133:i32, 129:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i8 = phi %3, 1:i8, 1:i8, 0:i8
%5:i8 = phi %2, %4, 1:i8
%6:i8 = phi %1, 1:i8, %5
%7:i8 = phi %0, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2:i64 = phi %1, 1:i64, 0:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64
%3:i64 = phi %0, %2, 0:i64
%4:i64 = shlnw %3, 4:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000x00000000) (n)
%2:i32 = xor 256:i32, %1
%3:i32 = or 512:i32, %2
%4:i32 = or 1024:i32, %2
%5:i32 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1:i1 = var
%2:i32 = select %1, 38:i32, 34:i32
%3:i32 = select %1, 40:i32, 36:i32
%4:i8 = var
%5:i1 = eq 18:i8, %4
%6:i32 = select %5, %2, 42:i32
%7:i8 = var
%8:i1 = eq 18:i8, %7
%9:i32 = select %8, %3, 42:i32
%10:i32 = phi %0, %2, %3, 32:i32, %6, %9, 42:i32, 42:i32, 42:i32, 42:i32, 42:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = phi %1, 2:i32, 1:i32, 2:i32, 1:i32
%3:i32 = phi %0, 2:i32, 0:i32, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 1:i32, %8
%10:i32 = phi %1, 0:i32, %5, 1:i32, 1:i32, %9
%11 = block 2
%12 = block 2
%13:i32 = phi %12, 0:i32, 2:i32
%14:i32 = phi %11, 0:i32, %13
%15:i32 = phi %0, 0:i32, %10, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 1:i32, 2:i32
%4:i32 = phi %1, 0:i32, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8
%5:i8 = phi %0, 1:i8, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000000x01) (zn)
%2:i1 = eq 5:i32, %1
%3:i32 = select %2, 0:i32, %1
%4:i32 = phi %0, %3, 2:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, 1:i8, 1:i8, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5 = block 2
%6 = block 3
%7:i8 = var (0000000x) (n)
%8:i8 = phi %5, %7, %4
%9:i8 = phi %2, %4, %8
%10:i8 = phi %1, %9, %4, %8
%11:i8 = phi %0, %10, %4
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 2:i32, 3:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 2:i32
%4:i32 = phi %1, %3, 0:i32, 2:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32, 1:i32, 1:i32, 0:i32, 1:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = phi %1, %2, %2, %3
%5:i8 = var (0000000x) (n)
%6:i8 = phi %0, %4, %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = ashrexact %2, 6:i64
%4:i64 = subnsw 288230376151711743:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 7:i32
%3:i32 = phi %0, 6:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %2, %4, 1:i8, %4
%6:i8 = phi %1, %5, %4
%7:i8 = phi %0, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i48 = var (0000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (n)
%2:i48 = lshr 65793:i48, %1
%3:i8 = trunc %2
%4:i8 = phi %0, 1:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 1:i32, %4
%6:i32 = phi %0, 1:i32, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 4
%4:i32 = var (0000000000000000000100001100010x) (zn)
%5:i32 = phi %2, %4, 4292:i32
%6:i32 = phi %1, %5, 4292:i32
%7:i32 = phi %0, 4292:i32, %6, 4292:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %2, %4, %6
%8:i32 = phi %1, 1:i32, %7
%9:i32 = phi %0, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, 3:i32, 2:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 1049:i32, 0:i32
%4:i32 = phi %1, %3, 1079:i32
%5 = block 3
%6:i1 = var
%7:i32 = select %6, 3011:i32, 0:i32
%8:i32 = phi %5, 3021:i32, %7, 3014:i32
%9 = block 3
%10:i32 = select %6, 2641:i32, 0:i32
%11:i32 = phi %9, 2681:i32, %10, 2657:i32
%12 = block 3
%13:i32 = select %6, 228:i32, 0:i32
%14:i32 = phi %12, 263:i32, %13, 245:i32
%15:i32 = phi %0, %4, %8, %11, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 3:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i64 = zext %0
%2:i64 = lshr 23:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 4
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6:i32 = phi %3, 1:i32, 0:i32, %5, 1:i32
%7:i32 = phi %0, 1:i32, 0:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3:i8 = var
%4 = block 2
%5:i8 = var
%6:i1 = eq %3, %5
%7:i8 = select %6, %2, 1:i8
%8:i8 = phi %0, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = var
%6:i1 = eq 8:i8, %5
%7:i8 = zext %6
%8 = block 2
%9:i1 = var
%10:i8 = zext %9
%11:i8 = phi %8, %10, 0:i8
%12:i8 = phi %0, %4, 0:i8, %7, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000xx11xx00xx) (zn)
%4:i32 = var (0000000000000000000000xxxxxx0000) (zn)
%5:i32 = phi %2, %3, %4
%6:i32 = var (0000000000000000000000xx0000xx00) (zn)
%7:i32 = or %5, %6
%8:i32 = phi %1, %7, %5
%9 = block 5
%10 = block 5
%11:i32 = var (00000000000000000000000011xx00xx) (zn)
%12:i32 = var (000000000000000000000000xx0000xx) (zn)
%13:i32 = var (000000000000000000000000xx000000) (znp)
%14:i32 = phi %10, %11, %12, %13, 0:i32, 0:i32
%15:i32 = var (0000000000000000000000xx0000xx00) (zn)
%16:i32 = or %14, %15
%17:i32 = var (0000000000000000000000xx00xx0000) (zn)
%18:i32 = or %16, %17
%19:i32 = var (0000000000000000000000xx00000000) (znp)
%20:i32 = or %14, %19
%21:i32 = phi %9, %18, %16, %20, %14, %14
%22:i32 = phi %0, %8, %21
infer %22

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 4
%2:i32 = phi %1, 354:i32, 356:i32, 355:i32, 348:i32
%3 = block 3
%4:i32 = phi %3, 0:i32, 353:i32, 352:i32
%5:i32 = phi %0, 0:i32, 0:i32, %2, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 347:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 14
%2:i32 = phi %1, 231:i32, 231:i32, 231:i32, 231:i32, 231:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32
%3:i32 = phi %0, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, 232:i32, 232:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = addnsw 4294967283:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 145414741426432:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2 = block 3
%3:i32 = phi %2, 3:i32, 46:i32, 3:i32
%4:i32 = phi %1, 46:i32, 46:i32, 58:i32, 46:i32, 46:i32, 46:i32, 3:i32, 3:i32, %3, 46:i32
%5:i32 = phi %0, %4, 58:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 0:i32, 4:i32
%3 = block 2
%4:i32 = phi %3, 4:i32, 0:i32
%5:i32 = phi %0, 3:i32, %2, 2:i32, 4:i32, %4, 4:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var (0000000000000000000000000000xx0x) (zn)
%2:i32 = phi %0, %1, 8:i32, 12:i32, 8:i32, 8:i32, 12:i32
%3:i32 = shl 1:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 3:i32
%4:i32 = phi %1, %3, 3:i32
%5:i32 = phi %0, %4, 3:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 4
%2 = block 6
%3:i32 = phi %2, 1:i32, 1:i32, 2:i32, 2:i32, 1:i32, 1:i32
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %1, %3, %3, %4, %4
%6:i32 = addnw 1:i32, %5
%7:i32 = phi %0, %5, %5, %5, %5, %5, %6, %6, %5, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 35:i32, 65:i32, 50:i32, 50:i32
%4:i32 = phi %1, 34:i32, 80:i32, %3
%5:i32 = phi %0, %4, 80:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 6:i32
%4:i32 = phi %0, 0:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i1 = var
%3 = block 6
%4 = block 2
%5:i8 = var (0000000x) (n)
%6 = block 2
%7:i8 = var (0000000x) (n)
%8 = block 2
%9:i8 = var (0000000x) (n)
%10 = block 2
%11:i8 = var (0000000x) (n)
%12:i8 = phi %3, %5, %7, %9, %11, 0:i8, 0:i8
%13:i8 = select %2, %12, 0:i8
%14:i8 = phi %1, %13, %12
%15 = block 5
%16:i64 = var
%17:i1 = ne 0:i64, %16
%18:i8 = select %17, 0:i8, %14
%19:i8 = phi %0, %14, 0:i8, 1:i8, %14, %14, %18
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, %5, 15:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 14:i32
%3:i1 = eq 14:i32, %2
%4:i32 = select %3, 0:i32, %2
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %0, 1:i32, %2, %3, 3:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = phi %1, %4, 1:i8
%6 = block 3
%7:i8 = phi %6, 1:i8, %5, %5
%8:i8 = phi %0, %5, 1:i8, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i16 = var (000000000000000x) (n)
%1:i8 = trunc %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 2:i32, 1:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i64 = var
%2:i64 = phi %0, %1, 0:i64, 0:i64, 0:i64, 0:i64
%3:i1 = ne 0:i64, %2
%4 = block 2
%5:i1 = var
%6 = block 6
%7 = block 2
%8:i8 = var (0000000x) (n)
%9 = block 2
%10:i8 = var (0000000x) (n)
%11 = block 2
%12:i8 = var (0000000x) (n)
%13 = block 2
%14:i8 = var (0000000x) (n)
%15:i8 = phi %6, %8, %10, %12, %14, 0:i8, 0:i8
%16:i8 = select %5, %15, 0:i8
%17:i8 = phi %4, %16, %15
%18:i8 = select %3, 0:i8, %17
infer %18

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = var
%3:i8 = and 56:i8, %2
%4:i8 = or 3:i8, %3
%5:i8 = phi %0, %4, 16:i8, 16:i8, 16:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 3:i32
%3:i32 = phi %0, %2, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 4
%3:i32 = phi %2, 2:i32, 2:i32, 0:i32, 2:i32
%4:i32 = phi %1, 2:i32, 2:i32, %3, 0:i32, 0:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = and 1:i32, %2
%4:i32 = xor 1:i32, %3
%5:i32 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 255:i32, %1
%3:i32 = shlnw %2, 1:i32
%4:i32 = phi %0, %2, %3
%5:i16 = var (xxxxxxxx00000000)
%6:i16 = and 7936:i16, %5
%7:i32 = zext %6
%8:i32 = or %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i32 = phi %1, 6:i32, 3:i32, 4:i32, 5:i32, 0:i32, 2:i32, 1:i32
%3 = block 3
%4:i32 = phi %3, 6:i32, 3:i32, 0:i32
%5:i32 = phi %0, %2, %4, 6:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 9
%2:i64 = var
%3:i64 = var
%4:i64 = phi %1, %2, %3, %3, %3, %3, %3, %3, %3, %3
%5:i64 = var
%6:i64 = sub %4, %5
%7:i64 = phi %0, %6, %4, %4, %4, %4, %4
%8:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (znp)
%9:i64 = sub %7, %8
%10:i1 = ult %7, %9
%11:i64 = select %10, %7, %9
%12:i64 = sub %7, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, %5, 0:i8
%7:i8 = phi %2, 1:i8, %6, %6
%8:i8 = phi %1, %7, %6
%9:i8 = phi %0, 1:i8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 1:i32, 3:i32, 3:i32, 0:i32
%3:i32 = phi %0, 2:i32, 3:i32, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = xor 1:i32, %2
%4:i32 = phi %0, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 1:i8, %2
%4:i8 = phi %0, %3, 0:i8, 1:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (0000000000000000000000000000xxx000000000000000000000000000000000) (n)
%2:i1 = eq 60129542144:i64, %1
%3:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i32 = and 255:i32, %3
%5:i32 = select %2, %4, 0:i32
%6:i64 = var (0000000000000000000000000000xxx000000000000000000000000000000000) (n)
%7:i1 = eq 60129542144:i64, %6
%8:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%9:i32 = and 255:i32, %8
%10:i32 = select %7, %9, 0:i32
%11:i32 = phi %0, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 40:i32, 55:i32
%3:i32 = phi %0, 40:i32, %2, 55:i32, 40:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 3:i32, 0:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 327:i32, 328:i32
%3:i32 = phi %0, %2, 393:i32, 394:i32, 394:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i1 = var
%4:i8 = select %3, 1:i8, %2
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = phi %1, 2:i32, %2, 2:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i16 = var (000000x000001000) (zn)
%3 = block 2
%4:i1 = var
%5:i16 = select %4, 0:i16, 512:i16
%6:i16 = phi %3, %5, 0:i16
%7:i16 = select %1, %2, %6
%8:i16 = or 256:i16, %7
%9:i16 = phi %0, %8, %7, %6, %7, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 17
%2 = block 12
%3 = block 2
%4:i64 = var
%5:i64 = phi %2, %4, 4:i64, 4:i64, 4:i64, 6:i64, 6:i64, 6:i64, 6:i64, 4:i64, 4:i64, 4:i64, 4:i64
%6:i64 = var
%7:i64 = phi %1, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %6, %6
%8:i64 = phi %0, %7, 3:i64, 3:i64, 3:i64, 5:i64, 4:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 6:i64, 7:i64, 3:i64, %5, %5
%9:i64 = add 18446744073709551614:i64, %8
%10:i1 = ult %8, %9
%11:i64 = select %10, %8, %9
%12:i64 = sub %8, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 4
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %0, 0:i8, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 9
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10 = block 2
%11:i32 = phi %10, 1:i32, 0:i32
%12 = block 2
%13:i32 = phi %12, 1:i32, 0:i32
%14 = block 3
%15:i32 = phi %14, 1:i32, 2:i32, 1:i32
%16:i32 = phi %1, 0:i32, %5, 1:i32, 1:i32, %7, %9, %11, %13, %15
%17:i32 = phi %0, 0:i32, %16
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 3:i32, 0:i32
%3:i32 = phi %0, %2, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 1:i8, %4, %4
%6:i8 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 9
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 2:i32, 2:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000x0000000000000000000000000) (n)
%2:i32 = xor 33554432:i32, %1
%3:i32 = addnw 33554432:i32, %2
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4, 1:i32
%6:i32 = phi %1, 0:i32, %5, 1:i32
%7:i32 = phi %0, 0:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = or 8:i32, %3
%5:i32 = phi %1, %4, %3
%6:i32 = or 1:i32, %5
%7:i32 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %1, 0:i32, %4, %3
%6:i32 = phi %0, 0:i32, 0:i32, %5, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = subnsw 10:i32, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = subnsw %2, %4
%6:i1 = var
%7:i32 = select %6, 4:i32, 5:i32
%8:i32 = phi %0, 0:i32, 22:i32, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 33:i32, 17:i32
%3 = block 2
%4:i8 = var
%5:i32 = zext %4
%6:i32 = addnw %2, %5
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 37
%1 = block 2
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, 1:i8, %3
%5 = block 3
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %5, 0:i8, %7, 0:i8
%9:i8 = phi %0, 0:i8, 0:i8, 0:i8, %4, %8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 17:i8, 1:i8
%3:i8 = or 8:i8, %2
%4:i8 = phi %0, 33:i8, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i64 = phi %0, 5:i64, 3:i64, 5:i64, 10:i64, 7:i64, 18446744073709551615:i64
%2:i64 = add 2:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 3
%3:i8 = var (0000000x) (n)
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %2, %3, %5, 0:i8
%7 = block 4
%8 = block 3
%9:i8 = var (0000000x) (n)
%10:i8 = phi %7, %9, 1:i8, 1:i8, %9
%11:i8 = phi %1, %6, %10
%12:i8 = phi %0, %11, 0:i8, %11, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, %3, 1:i8
%5:i8 = phi %1, %4, 1:i8
%6:i8 = phi %0, %5, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i32 = phi %1, 2:i32, 0:i32, 0:i32
%3:i1 = var
%4:i32 = select %3, 0:i32, 2:i32
%5:i32 = phi %0, 0:i32, 2:i32, 2:i32, %2, 0:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 5
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000000000000x000000) (n)
%2:i32 = lshrexact %1, 6:i32
%3:i32 = or 4:i32, %2
%4:i32 = or 2:i32, %2
%5:i32 = phi %0, 10:i32, 11:i32, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 4
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, 0:i8, %5
%7:i8 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var
%2:i16 = and 96:i16, %1
%3:i16 = or 1:i16, %2
%4:i16 = var
%5:i16 = and 96:i16, %4
%6:i16 = or 2:i16, %5
%7:i16 = phi %0, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 21:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (0000000000000000000000000000000000000000000001x00000000000000000) (zn)
%3 = block 2
%4:i64 = var (0000000000000000000000000000000000000000000000x00000000000000000) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 524288:i64, %5
%7:i64 = phi %0, %6, %5
%8:i64 = or 1048576:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = add %0, %1
%3:i64 = add 18446744073709551615:i64, %2
%4:i64 = urem %3, %1
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, %2, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 1:i32, 1:i32, 0:i32, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 4295:i32, 4300:i32
%4 = block 2
%5:i32 = var (000000000000000000010001110xxxxx) (zn)
%6:i32 = phi %4, %5, %3
%7:i32 = phi %1, %3, %6
%8:i32 = phi %0, %7, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 3:i32
%5:i32 = phi %1, 1:i32, %4, 1:i32
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 2:i32, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 23:i32, 23:i32, 23:i32
%4:i32 = phi %0, 23:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 8:i32
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var (00000000000000000000000000000x01) (zn)
%8:i32 = phi %5, 0:i32, %7
%9:i32 = phi %4, 0:i32, %8
%10:i32 = phi %0, 0:i32, %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 4:i32, 0:i32
%4:i32 = phi %1, %3, 5:i32
%5:i32 = phi %0, %4, 5:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4 = block 5
%5 = block 2
%6:i32 = phi %5, 0:i32, 1:i32
%7 = block 7
%8:i32 = phi %7, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%9:i32 = phi %4, 0:i32, %6, 1:i32, 1:i32, %8
%10:i32 = phi %0, 0:i32, %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 26
%1:i64 = var
%2:i64 = var
%3:i1 = eq %1, %2
%4:i32 = zext %3
%5 = block 4
%6:i32 = phi %5, 1:i32, 0:i32, 0:i32, 1:i32
%7 = block 2
%8:i1 = var
%9:i1 = phi %7, 1:i1, %8
%10:i32 = zext %9
%11:i64 = var
%12:i64 = var
%13:i1 = eq %11, %12
%14:i32 = zext %13
%15:i32 = phi %0, 0:i32, 0:i32, 1:i32, 1:i32, 0:i32, %4, 0:i32, 1:i32, 2:i32, 1:i32, 1:i32, %6, 0:i32, %10, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %14, 1:i32, 0:i32, 0:i32, 2:i32, 2:i32
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = select %0, 8:i64, 4:i64
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = addnw %1, %2
%4:i64 = addnsw 18446744073709551615:i64, %3
%5:i64 = subnsw 0:i64, %1
%6:i64 = and %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 7
%3:i32 = phi %2, 0:i32, 3:i32, 1:i32, 6:i32, 4:i32, 2:i32, 5:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = phi %1, 1:i32, 5:i32, 5:i32, 5:i32
%3:i32 = phi %0, 1:i32, 2:i32, 2:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2
%4:i8 = zext %3
%5 = block 3
%6:i8 = phi %5, 1:i8, %4, %4
%7:i8 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 0:i32, 1:i32, 3:i32, 5:i32
%4:i32 = phi %1, 2:i32, %3, %3
%5:i32 = phi %0, 4:i32, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = phi %1, %2, %3, 0:i8
%5:i8 = var (0000000x) (n)
%6:i8 = phi %0, %4, %5, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 0:i8
%4:i1 = var
%5:i8 = zext %4
%6:i8 = and %3, %5
%7:i8 = phi %0, %6, %3, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i256 = zext %1
%3:i256 = shlnw %2, 227:i256
%4:i256 = phi %0, 0:i256, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = var
%3:i1 = eq %1, %2
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = select %3, %4, 1:i32
%6:i32 = phi %0, 2:i32, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, 1:i8, 1:i8, 1:i8, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 4932:i32, 308:i32, 4932:i32
%3:i32 = phi %0, %2, %2, %2, %2, 38:i32, %2, %2, %2, 308:i32, 308:i32, 308:i32, 308:i32, 308:i32, 308:i32, 308:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 0:i32, 3:i32, 1:i32, 4:i32
%4:i32 = phi %1, %3, 1:i32, 4:i32
%5:i32 = phi %0, 0:i32, 2:i32, 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 7:i32, 4:i32, 6:i32, 5:i32
%3:i32 = phi %0, 3:i32, %2, 1:i32
%4:i32 = or 48:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2971:i32, 2966:i32
%4:i32 = phi %1, 2966:i32, %3
%5:i32 = phi %0, %4, 3060:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11 = block 2
%12:i32 = phi %11, 1:i32, 0:i32
%13:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, %2, %4, %6, 1:i32, %8, %10, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %3, %4
%6:i8 = phi %0, %1, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 1:i32, 0:i32, %3, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 255:i32, %1
%3:i32 = or 256:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (000xxxx1) (zn)
%4 = block 5
%5:i8 = var (0000xxx0) (n)
%6:i8 = var (000x0000) (n)
%7:i8 = or %5, %6
%8:i8 = phi %2, %3, %7
%9:i8 = phi %1, %8, %7
%10:i8 = phi %0, %9, %8
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, 1:i8, %5, 0:i8
%7:i8 = phi %0, 0:i8, %6, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 3:i32, 1:i32, 4:i32
%3:i32 = phi %0, %2, 1:i32, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 0:i32, %1
%3 = block 2
%4:i32 = var (000000000000000000000000000x000x) (n)
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %3, %4, %6
%8:i32 = select %2, 32:i32, %7
%9:i32 = phi %0, %8, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, %3, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2
%4:i32 = shl 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 0:i32, %1
%3:i8 = zext %2
%4 = block 2
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %4, %6, 0:i8
%8:i8 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i64 = var
%2:i64 = phi %0, %1, 0:i64, 0:i64, 0:i64, 0:i64
%3:i1 = ne 0:i64, %2
%4 = block 2
%5:i1 = var
%6 = block 6
%7:i8 = phi %6, 1:i8, 0:i8, 1:i8, 0:i8, 0:i8, 1:i8
%8:i8 = select %5, %7, 0:i8
%9:i8 = phi %4, %8, %7
%10:i8 = select %3, 0:i8, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8
%6 = block 3
%7:i8 = phi %6, 1:i8, %5, %5
%8:i8 = phi %1, %5, 1:i8, %7
%9:i8 = phi %0, 1:i8, 1:i8, 1:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1:i32 = phi %0, 15:i32, 7:i32, 15:i32, 7:i32, 15:i32, 7:i32, 15:i32, 7:i32, 15:i32, 10:i32
%2:i32 = shl 2:i32, %1
%3:i32 = addnsw 4294967294:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000010x) (zn)
%3 = block 2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 64:i64, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = var (000000000000000000000000000x0100) (zn)
%4:i32 = var (000000000000000000000001000x0100) (zn)
%5 = block 2
%6:i32 = var (000000000000000000000000000x0000) (n)
%7:i32 = phi %2, %3, %4, %6
%8:i32 = or 32:i32, %7
%9:i32 = phi %1, %8, %7
%10:i32 = or 2:i32, %9
%11:i32 = phi %0, %9, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 49:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 1:i32, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i32 = var (0000000000000000000000000xxxxxxx) (n)
%3:i32 = phi %1, 0:i32, %2
%4:i32 = phi %0, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, 0:i32
%5:i16 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 6
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 2:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = var (000000000000000000000000000000x1) (zn)
%3:i32 = phi %1, %2, 1:i32, 1:i32, 1:i32, 2:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (z)
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, 0:i64, 0:i64, 2:i64, %2
%4:i1 = eq 1:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 39
%4:i32 = var (0000000000000000000000000xxxxxxx) (n)
%5:i32 = phi %2, 18:i32, %4, %4
%6:i32 = phi %1, 34:i32, %5, %5
%7:i32 = phi %0, 113:i32, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 32:i32, 0:i32
%3:i32 = or 128:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = var (0000000000000000000000000000xxxx) (zn)
%4 = block 2
%5:i32 = var (0000000000000000000000000000xxxx) (zn)
%6:i32 = phi %1, 14:i32, 1:i32, %3, 1:i32, %5
%7:i1 = eq 14:i32, %6
%8:i32 = select %7, 0:i32, %6
%9:i32 = phi %0, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = var (0000000000000000000000000000xx01) (zn)
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %3, %5
%7:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%8:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%9:i32 = or %7, %8
%10:i32 = or 1:i32, %9
%11:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%12:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%13:i32 = or %11, %12
%14:i32 = or 1:i32, %13
%15:i32 = var (000000000000000000000000xxxxxx00) (n)
%16:i32 = or %15, %2
%17:i32 = var (000000000000000000000000xxxxxxxx) (n)
%18:i32 = shlnw %17, 16:i32
%19:i32 = or %16, %18
%20:i32 = phi %0, %6, %6, %10, %10, %14, %14, %19, %19
infer %20

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i16 = var
%3:i32 = zext %2
%4:i16 = var
%5:i32 = zext %4
%6:i32 = phi %1, %3, %5, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 2:i32, 3:i32
%5:i32 = phi %2, %4, 0:i32
%6:i32 = phi %1, 0:i32, %5, %4
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%1:i64 = addnsw 18446744073709551615:i64, %0
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000xx00) (znp)
%3:i64 = subnsw 0:i64, %2
%4:i64 = and %1, %3
%5:i64 = addnsw 4:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 16:i32
%4:i32 = phi %0, 0:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 12:i32, 9:i32, 16:i32
%3:i32 = phi %0, %2, 16:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 1:i8, %3
%5:i8 = var
%6:i8 = var (0000000x) (n)
%7:i8 = and %5, %6
%8:i8 = phi %1, %4, %7
%9:i8 = phi %0, 0:i8, 0:i8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 2:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 2:i32, 1:i32
%6:i32 = phi %1, %3, %5, 0:i32, 2:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 17:i32, 1:i32
%4:i32 = or 4:i32, %3
%5:i32 = or 260:i32, %3
%6:i32 = phi %1, %4, %5, %3
%7:i32 = or 2:i32, %6
%8:i32 = phi %0, %6, %7, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%1:i32 = addnsw 4294963683:i32, %0
%2:i64 = sext %1
%3:i64 = lshr 4145103:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 2:i32, 5:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 5:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 0:i32, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 2:i32, %3, %5
%7 = block 2
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10:i32 = phi %7, 0:i32, %9
%11:i32 = phi %0, %6, 2:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2 = block 3
%3:i8 = var (0000000x) (n)
%4 = block 3
%5 = block 3
%6:i8 = var (0000000x) (n)
%7:i8 = var (0000000x) (n)
%8:i8 = phi %4, %6, %7, 0:i8
%9:i8 = phi %2, %3, %8, 0:i8
%10:i8 = phi %0, %1, %9, 0:i8
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7 = block 2
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10:i32 = phi %7, 0:i32, %9
%11:i32 = phi %0, 0:i32, %4, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 0:i32, 1:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4, 1:i32
%6:i32 = phi %1, 0:i32, %5, 1:i32
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 2:i32, 1:i32
%5:i32 = phi %0, %2, %4, 0:i32, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6 = block 2
%7:i32 = phi %6, 0:i32, 1:i32
%8 = block 2
%9:i32 = phi %8, 0:i32, 1:i32
%10:i32 = phi %1, 0:i32, %3, %5, %7, %9
%11:i32 = phi %0, 0:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = xor 1:i1, %1
%3:i8 = zext %2
%4 = block 2
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %4, %6, %3
%8:i8 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %4, %4
%6:i8 = phi %1, 1:i8, %5
%7:i8 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 124
%1 = block 4
%2:i32 = phi %1, 146:i32, 101:i32, 101:i32, 101:i32
%3:i32 = phi %0, 72:i32, 270:i32, 269:i32, 268:i32, 267:i32, 266:i32, 260:i32, 259:i32, 258:i32, 256:i32, 255:i32, 253:i32, 265:i32, 264:i32, 263:i32, 262:i32, 261:i32, 257:i32, 252:i32, 249:i32, 248:i32, 246:i32, 254:i32, 245:i32, 244:i32, 243:i32, 240:i32, 239:i32, 251:i32, 238:i32, 242:i32, 241:i32, 237:i32, 236:i32, 235:i32, 250:i32, 234:i32, 233:i32, 232:i32, 200:i32, 144:i32, 103:i32, 102:i32, 101:i32, 143:i32, 142:i32, 105:i32, 141:i32, 148:i32, 145:i32, 140:i32, 139:i32, 138:i32, 137:i32, 135:i32, 134:i32, 133:i32, 132:i32, 131:i32, 130:i32, 129:i32, 128:i32, 127:i32, 126:i32, 125:i32, 124:i32, 123:i32, 122:i32, 121:i32, 120:i32, 119:i32, 118:i32, 117:i32, 116:i32, 115:i32, 114:i32, 147:i32, 113:i32, 136:i32, 112:i32, 111:i32, 110:i32, 109:i32, 108:i32, 107:i32, 106:i32, 200:i32, 231:i32, 200:i32, 201:i32, 230:i32, 202:i32, 100:i32, 247:i32, 228:i32, 227:i32, 226:i32, 225:i32, 224:i32, 223:i32, 222:i32, 221:i32, 220:i32, 219:i32, 218:i32, 217:i32, 216:i32, 229:i32, 215:i32, 214:i32, 213:i32, 212:i32, 211:i32, 210:i32, 209:i32, 208:i32, 207:i32, 206:i32, 205:i32, 204:i32, 203:i32, 271:i32, 100:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000xxxxxxxxxxxxxxx) (n)
%2:i32 = and 4096:i32, %1
%3:i32 = var (00000000000000000000x00000000000) (n)
%4:i32 = var (000000000000000000000xxxxxxxxxxx) (n)
%5:i32 = or %3, %4
%6:i32 = or %2, %5
%7:i32 = phi %0, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 1:i8, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %0, 1:i32, %3, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %3, 0:i32, %5, %7
%9:i32 = phi %0, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = shlnw %1, 4:i64
%3:i64 = mulnw 12:i64, %1
%4:i64 = phi %0, %2, %3
%5:i32 = var
%6:i64 = zext %5
%7:i64 = addnsw %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 4
%3 = block 3
%4:i32 = var (00000000000000000000000000000x01) (zn)
%5:i32 = var (00000000000000000000000000000xx1) (zn)
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %2, %4, %5, %6, %5
%8 = block 6
%9:i32 = var (000000000000000000000000000001x1) (zn)
%10:i32 = var (00000000000000000000000000000x11) (zn)
%11:i32 = var (00000000000000000000000000000x11) (zn)
%12:i32 = phi %8, 0:i32, %9, %10, %11, 0:i32, 1:i32
%13:i32 = phi %1, 7:i32, %7, %12
%14:i32 = phi %0, %13, 7:i32
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (0000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = and 4095:i64, %1
%3:i64 = shlnw %2, 12:i64
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %2, %4, 0:i8
%6 = block 2
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %6, %8, 0:i8
%10:i8 = phi %1, %5, %9
%11:i8 = phi %0, %10, %4, %8
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i32 = addnsw 4294967295:i32, %1
%3:i32 = shl 1:i32, %2
%4:i32 = phi %0, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i32 = phi %0, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, 7:i32, 8:i32
%2:i32 = subnsw 8:i32, %1
%3:i32 = shlnsw %2, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 1:i64, 0:i64
%3:i64 = or 32:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = or 64:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000x1) (zn)
%4:i32 = phi %2, 3:i32, %3
%5:i1 = var
%6:i32 = select %5, 1:i32, %4
%7:i32 = phi %1, %4, %6
%8:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %7, 1:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i32 = var (zp)
%2:i64 = zext %1
%3:i64 = or %0, %2
%4:i64 = sub 0:i64, %3
%5:i64 = and %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, %4, 0:i32, 0:i32
%6:i32 = phi %1, %5, 0:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %3, %5
%7:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%8:i32 = or %3, %7
%9:i32 = or 1:i32, %8
%10:i32 = phi %0, %6, %6, %9, %9, %6, %6
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2 = block 4
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6 = block 4
%7 = block 2
%8:i8 = var (0000000x) (n)
%9:i8 = var (0000000x) (n)
%10:i8 = phi %7, %8, %9
%11:i8 = phi %6, %10, 1:i8, 1:i8, %10
%12:i8 = phi %0, %5, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2 = block 3
%3:i32 = var (0000000000000000000001010001110x) (zn)
%4:i32 = var (0000000000000000000000111011000x) (zn)
%5:i32 = var (00000000000000000000000001010xxx) (zn)
%6:i32 = phi %2, %3, %4, %5
%7:i32 = phi %1, %6, 98:i32, %6, 97:i32, 952:i32, 951:i32, 98:i32, 97:i32
%8 = block 2
%9:i32 = phi %8, %7, %6
%10:i32 = phi %0, %7, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = phi %1, 2:i16, 1:i16
%3:i16 = var (xxxxxxxxxxxxxx00)
%4:i16 = and 4:i16, %3
%5:i16 = or %2, %4
%6:i16 = or 8:i16, %5
%7:i16 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8, %4, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 3636:i32, %1
%3:i32 = or 2052:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i16 = var (00000000000000xx) (zn)
%4:i16 = var (0000000000000x00) (n)
%5:i16 = or %3, %4
%6:i16 = or 8:i16, %5
%7:i16 = phi %1, %5, %6
%8:i16 = or 16:i16, %7
%9:i16 = phi %0, %7, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 16384:i32, 1024:i32, 16384:i32
%3:i32 = phi %0, %2, %2, %2, %2, 128:i32, %2, 1024:i32, 1024:i32, 1024:i32, 1024:i32, 1024:i32, 1024:i32, 1024:i32, 1024:i32, 1024:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i1 = var
%4:i32 = zext %3
%5:i32 = phi %1, %4, 1:i32
%6:i32 = phi %0, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var (0000000000000000000000000000xxxx) (n)
%3:i32 = mul %1, %2
%4:i64 = zext %3
%5:i64 = var
%6:i1 = ult %4, %5
%7:i64 = select %6, %4, %5
%8:i64 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 3:i32, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 2:i32, %2, 1:i32
%4:i32 = phi %0, 2:i32, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 4064:i64, 4063:i64
%3:i64 = phi %0, %2, 4063:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 6:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = phi %1, 1:i32, 5:i32, 5:i32, 5:i32
%3:i32 = phi %0, 1:i32, %2, 2:i32, 2:i32, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 5
%2:i32 = phi %1, 3:i32, 3:i32, 3:i32, 3:i32, 1:i32
%3 = block 3
%4:i32 = phi %3, 3:i32, 3:i32, 1:i32
%5 = block 2
%6:i32 = phi %5, 3:i32, 1:i32
%7:i32 = phi %0, 1:i32, 2:i32, %2, %4, 1:i32, 1:i32, 1:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (00000000000000000001001011xxxxx1) (zn)
%5:i32 = phi %2, %4, 4829:i32
%6:i32 = phi %1, %5, 4829:i32
%7:i32 = phi %0, 4829:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 3:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, %3, 1:i8
%5:i8 = phi %0, %4, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 2:i32, 4:i32
%4:i32 = or 1:i32, %3
%5:i32 = phi %1, 8:i32, %4, %4, %3, %3
%6:i32 = phi %0, %5, %3, %3, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 7:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 6
%2:i64 = var
%3:i64 = var
%4:i64 = phi %1, %2, 4:i64, %2, %2, %2, %3
%5:i64 = var
%6:i64 = sub %4, %5
%7:i64 = phi %0, %4, %4, %4, %4, %4, %6
%8:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (znp)
%9:i64 = sub %7, %8
%10:i1 = ult %7, %9
%11:i64 = select %10, %7, %9
%12:i64 = sub %7, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 15
%3:i32 = phi %2, 0:i32, 2:i32, 3:i32, 4:i32, 0:i32, 2:i32, 3:i32, 4:i32, 0:i32, 2:i32, 3:i32, 4:i32, 0:i32, 1:i32, 4:i32
%4:i32 = phi %1, %3, 4:i32
%5:i32 = phi %0, 0:i32, %4, 4:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000000xx0) (n)
%2:i1 = eq 2:i64, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = select %2, %4, 3:i32
%6:i32 = phi %0, %5, 2:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 4
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 1:i32, 0:i32, %6, 1:i32
%8:i32 = phi %1, 1:i32, 0:i32, %3, %7
%9:i32 = phi %0, 1:i32, 0:i32, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %2, 0:i32, %4, %6
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10:i32 = phi %1, %7, %9
%11 = block 2
%12:i32 = phi %11, 1:i32, 0:i32
%13:i32 = phi %0, 1:i32, %10, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3 = block 5
%4:i32 = phi %3, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = var (0000000000000x00000000000x0000xx) (n)
%3:i32 = var (0000000000000x00000000001x0000xx) (zn)
%4:i32 = phi %1, %2, %3, %2, %3, %2
%5:i32 = or 256:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 4:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000001x0xx) (zn)
%3 = block 6
%4:i32 = var (0000000000000000000000000000x0xx) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 32:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 40:i64
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = shlnw %4, 48:i64
%6:i32 = var
%7:i64 = zext %6
%8:i64 = or %5, %7
%9:i64 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 2683:i32, 268:i32
%4 = block 3
%5:i32 = phi %4, 2684:i32, 2683:i32, 268:i32
%6 = block 3
%7:i1 = var
%8:i32 = select %7, 2660:i32, 2676:i32
%9:i32 = select %7, 2659:i32, 2675:i32
%10:i32 = select %7, 242:i32, 255:i32
%11:i32 = phi %6, %8, %9, %10
%12 = block 4
%13:i32 = select %7, 2644:i32, 2668:i32
%14:i32 = select %7, 2643:i32, 2667:i32
%15:i32 = phi %12, %13, %14, 232:i32, 250:i32
%16:i32 = phi %0, 1415:i32, %3, 1417:i32, %5, %11, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32
%3 = block 5
%4:i32 = phi %3, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 5:i32
%4:i32 = phi %1, 6:i32, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 3:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 4:i32, 1:i32
%3:i32 = phi %0, 4:i32, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 6
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32
%4 = block 4
%5:i32 = phi %4, 0:i32, 1:i32, 1:i32, 1:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 5:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 4
%3:i32 = phi %2, 1:i32, 3:i32, 3:i32, 0:i32
%4:i32 = phi %1, 2:i32, 3:i32, 3:i32, %3
%5:i32 = phi %0, 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 255:i32, %0
%2:i32 = var (00000000000000000000000x00000000) (n)
%3:i32 = var (0000000000000000xxxxxxx000000000) (n)
%4:i32 = or %2, %3
%5:i32 = or %1, %4
%6 = block 2
%7 = block 3
%8:i32 = phi %7, 1:i32, 1:i32, 2:i32
%9:i32 = phi %6, 0:i32, %8
%10:i32 = shl %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 10
%2:i64 = phi %1, 1:i64, 0:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64
%3:i64 = phi %0, %2, 1:i64, 1:i64
%4:i64 = shlnw %3, 4:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 15:i32
%3:i32 = phi %0, 1:i32, 2:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 434:i32, 432:i32
%4:i32 = select %2, 433:i32, 431:i32
%5:i32 = phi %1, %3, %4
%6:i32 = phi %0, %5, 440:i32, 438:i32, 439:i32, 437:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i8 = var (0xxxxxxx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 3
%5:i8 = phi %4, %3, 0:i8, %3
%6:i8 = phi %1, %3, %5
%7:i8 = phi %0, 0:i8, %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = phi %3, 2:i32, 1:i32, 0:i32
%5:i32 = phi %2, %4, 0:i32
%6:i32 = phi %1, %5, %4
%7:i32 = phi %0, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7 = block 2
%8 = block 2
%9:i32 = phi %8, 0:i32, 1:i32
%10:i32 = phi %7, 0:i32, %9
%11:i32 = phi %0, 0:i32, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 0:i32, %7
%9 = block 2
%10 = block 2
%11:i32 = phi %10, 1:i32, 0:i32
%12:i32 = phi %9, 0:i32, %11
%13:i32 = phi %0, 0:i32, %4, %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 47:i32, 0:i32
%3:i32 = phi %0, 47:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 9
%2 = block 5
%3:i32 = phi %2, 3:i32, 3:i32, 3:i32, 3:i32, 1:i32
%4 = block 3
%5:i32 = phi %4, 3:i32, 3:i32, 1:i32
%6 = block 2
%7:i32 = phi %6, 3:i32, 1:i32
%8:i32 = phi %1, 1:i32, 2:i32, %3, %5, 1:i32, 1:i32, 1:i32, %7, 1:i32
%9:i32 = phi %0, %8, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 27:i32, 28:i32, 29:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, 0:i8, 0:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, %2
%4 = block 5
%5:i64 = var
%6:i64 = var
%7:i1 = ne %5, %6
%8:i8 = select %7, 0:i8, %3
%9:i8 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (00000000000000000000000000000xx0) (znp)
%4:i32 = phi %2, %3, 0:i32
%5:i32 = phi %1, %4, 0:i32
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32
%3:i64 = zext %2
%4:i64 = lshr 232:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 0:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 131:i32, 132:i32, 131:i32, 132:i32
%3:i32 = phi %0, 131:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 11
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, %3, %3, %3, %3, %3, %3, %3, %3, 1:i32, %3
%5:i32 = phi %0, %4, %3, %3, %3, %3, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 1:i64, 0:i64
%3:i64 = or 32:i64, %2
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 5:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 30
%1 = block 5
%2:i32 = phi %1, 139:i32, 138:i32, 137:i32, 136:i32, 0:i32
%3:i32 = phi %0, %2, 131:i32, 172:i32, 194:i32, 190:i32, 186:i32, 182:i32, 178:i32, 164:i32, 167:i32, 132:i32, 173:i32, 195:i32, 191:i32, 187:i32, 183:i32, 179:i32, 165:i32, 168:i32, 143:i32, 144:i32, 216:i32, 214:i32, 211:i32, 208:i32, 205:i32, 219:i32, 202:i32, 199:i32, 141:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 4:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 4:i32, %2, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3 = block 6
%4:i32 = var
%5:i32 = var
%6:i1 = eq %4, %5
%7:i8 = zext %6
%8:i8 = phi %3, %7, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%9:i8 = select %2, 0:i8, %8
%10:i8 = phi %1, %9, %8
%11:i8 = phi %0, %10, %10, %10, %7
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 1:i32, 0:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 11:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 0:i32, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 8
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 0:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000000100x) (zn)
%1:i64 = shl 1:i64, %0
%2:i32 = var
%3:i64 = zext %2
%4:i64 = addnw %1, %3
%5:i64 = addnsw 18446744073709551615:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = slt 18446744073709551615:i64, %0
%2:i64 = sub 0:i64, %0
%3:i64 = select %1, %0, %2
%4:i64 = srem %3, 8:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 7:i32
%5:i32 = phi %1, 1:i32, %4
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 5
%2:i64 = phi %1, 0:i64, 2:i64, 0:i64, 0:i64, 0:i64
%3:i64 = phi %0, 4:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 2:i64, 3:i64, 2:i64, 2:i64, 1:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i1 = ult %1, 32:i64
%3:i8 = zext %2
%4:i8 = var
%5:i1 = var
%6:i8 = zext %5
%7:i8 = and %4, %6
%8:i8 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = var
%2:i1 = eq %0, %1
%3:i32 = zext %2
%4 = block 2
%5:i32 = var (0000000000000000000000000000xxxx) (n)
%6:i32 = cttz %5
%7:i32 = phi %4, %6, 32:i32
%8:i32 = shl %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = phi %3, 36:i32, 42:i32
%5:i32 = phi %2, 40:i32, %4
%6:i32 = phi %1, %5, %4
%7:i32 = phi %0, 41:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 9
%2:i1 = var
%3:i32 = select %2, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, %3, 0:i32
%5:i64 = var
%6:i1 = ult %5, 16:i64
%7:i32 = select %6, 2:i32, 0:i32
%8:i32 = phi %0, %4, 0:i32, 2:i32, %7, 2:i32, 2:i32, 2:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, 7:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 1:i32, %4
%6:i32 = phi %0, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 5
%2:i32 = phi %1, 2:i32, 0:i32, 1:i32, 2:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32, 2:i32, 2:i32, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = var
%3:i1 = ult %1, %2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = select %3, 0:i64, %5
%7:i64 = phi %0, 0:i64, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %1, 0:i32, %5, %7
%9:i32 = phi %0, 0:i32, %8, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 1:i32, 5:i32, 1:i32, 5:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = var (00000000000000000000000000000xx0) (zn)
%4:i32 = phi %1, %3, %3, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
%6:i32 = or 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3 = block 3
%4:i8 = phi %3, 0:i8, 0:i8, 1:i8
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, %5, 1:i8, %5
%7:i8 = phi %0, %6, %6, %4, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 8
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8, 1:i8
%5:i8 = phi %0, %4, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, %5
%7:i32 = phi %0, 1:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx) (n)
%1:i64 = var (00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx00xx) (n)
%2:i64 = addnw %0, %1
%3:i64 = lshr %2, 4:i64
%4:i64 = addnuw %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i1 = xor 1:i1, %1
%3:i8 = zext %2
%4 = block 3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = var (0000000x) (n)
%8:i1 = var
%9:i8 = zext %8
%10:i8 = phi %4, %6, %7, %9
%11:i8 = phi %0, %3, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 13:i32, 14:i32, 15:i32
%4:i32 = and 7:i32, %3
%5:i32 = phi %1, %4, %3
%6 = block 2
%7:i32 = var
%8:i32 = and %7, %5
%9:i32 = phi %6, %8, %5
%10:i32 = phi %0, %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32, 2:i32, 1:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %2, %2, %3, %3
%5:i1 = var
%6:i32 = zext %5
%7:i32 = addnw %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 2:i32, 2:i32, 0:i32, 2:i32
%4:i32 = phi %1, %3, 2:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 255:i32, %0
%2:i32 = var (00000000000000000000000x00000000) (n)
%3:i32 = var (0000000000000000xxxxxxx000000000) (n)
%4:i32 = or %2, %3
%5:i32 = or %1, %4
%6 = block 2
%7 = block 2
%8:i32 = phi %7, 1:i32, 2:i32
%9:i32 = phi %6, 0:i32, %8
%10:i32 = shl %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 3
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32, %5
%7 = block 3
%8:i32 = phi %7, 1:i32, 1:i32, 0:i32
%9:i32 = phi %0, 0:i32, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = or 4:i32, %2
%5:i32 = phi %0, %3, %4, %2, %2, 32:i32, 32:i32, 8:i32, 16:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 308:i32, 307:i32, 308:i32, 308:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 307:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%2:i32 = or 33554432:i32, %1
%3:i32 = var (00000000xxxxxxxxxxx0000000000000) (n)
%4:i32 = or 50331648:i32, %3
%5:i32 = phi %0, %2, %4
%6:i32 = var
%7:i32 = shl %6, 10:i32
%8:i32 = and 7168:i32, %7
%9:i32 = or %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 6
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 0:i32, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000x0000000000001) (zn)
%2:i32 = or 67108864:i32, %1
%3 = block 4
%4:i1 = var
%5:i32 = var (000010000000000000x0000000000001) (zn)
%6:i32 = select %4, %5, %1
%7:i32 = phi %0, %2, %6
%8:i32 = or 131072:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (00000000000000000000000010x00000) (zn)
%3 = block 2
%4:i32 = var (00000000000000000000000000x00000) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 18:i32, %5
%7:i32 = or 3:i32, %5
%8:i32 = or 2:i32, %5
%9:i32 = phi %0, %6, %7, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i64 = var
%2:i64 = var
%3:i64 = phi %0, %1, %2, 0:i64, 0:i64, 0:i64, 0:i64
%4:i1 = ne 0:i64, %3
%5 = block 2
%6:i1 = var
%7 = block 6
%8 = block 2
%9:i8 = var (0000000x) (n)
%10 = block 2
%11:i8 = var (0000000x) (n)
%12 = block 2
%13:i8 = var (0000000x) (n)
%14 = block 2
%15:i8 = var (0000000x) (n)
%16:i8 = phi %7, %9, %11, %13, %15, 0:i8, 0:i8
%17:i8 = select %6, %16, 0:i8
%18:i8 = phi %5, %17, %16
%19:i8 = select %4, 0:i8, %18
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = and 255:i64, %1
%3:i64 = var (0000000000000000000000000000000000000000000000000xxx000000000000) (n)
%4:i64 = var (0000000000000000000000000000000000000x00x0x000000000000000000000) (n)
%5:i64 = or %3, %4
%6:i64 = or %2, %5
%7:i32 = trunc %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %4
%6:i8 = phi %1, 1:i8, %5, %5, %5, %5
%7:i8 = phi %0, %6, 1:i8, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 7:i32, 4:i32, 6:i32, 5:i32
%3:i32 = phi %0, 3:i32, %2, 1:i32
%4:i32 = or 64:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 5:i32, 4:i32
%3:i32 = phi %0, 6:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 6
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 3:i32, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 5:i32, 5:i32, 1:i32
%3:i1 = eq 5:i32, %2
%4:i32 = select %3, 0:i32, %2
%5:i32 = phi %0, 1:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, %5, 0:i8
%7:i8 = phi %0, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i16 = phi %1, 4:i16, 0:i16
%3:i16 = phi %0, 0:i16, 4:i16, 0:i16, %2, 0:i16, 0:i16
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %5
%7:i8 = phi %0, 1:i8, %6, %6, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2 = block 2
%3 = block 3
%4 = block 2
%5 = block 2
%6 = block 4
%7 = block 4
%8:i32 = phi %7, 1:i32, 3:i32, 3:i32, 0:i32
%9:i32 = phi %6, 2:i32, 3:i32, 3:i32, %8
%10:i32 = phi %5, 3:i32, %9
%11:i32 = phi %4, 2:i32, %10
%12:i32 = phi %3, %11, 2:i32, 2:i32
%13:i32 = phi %2, %12, %11
%14:i32 = phi %1, %13, %12
%15:i32 = phi %0, 3:i32, 1:i32, 0:i32, %14, %11, %10, %9, %8
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6:i32 = phi %0, 1:i32, 1:i32, %3, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, 1:i8, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ne 0:i32, %1
%3:i8 = zext %2
%4 = block 3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %4, %6, 0:i8, %6
%8:i8 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2 = block 2
%3 = block 4
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %2, %4, 1:i32
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 0:i32, 1:i32, 2:i32, %6, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 1:i32, %6
%8 = block 2
%9 = block 2
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = phi %8, 0:i32, %10
%12:i32 = phi %3, 0:i32, %7, %11
%13:i32 = phi %0, 0:i32, %2, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 2:i32, 1:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 2:i32
%4:i32 = phi %1, 2:i32, %3
%5 = block 3
%6:i32 = phi %5, 2:i32, 1:i32, 0:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, %3, 0:i8
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %2, %3, %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %1, %6, %8, 1:i8
%10:i8 = phi %0, 1:i8, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 0:i32
%4 = block 4
%5:i32 = phi %4, 1:i32, 1:i32, 1:i32, 0:i32
%6:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, 1:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = or 4:i32, %2
%5:i32 = phi %0, %3, %4, %2, %2, 32:i32, 32:i32, 8:i32, 16:i32, 0:i32
%6:i32 = shl %5, 6:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5 = block 2
%6:i8 = phi %5, %4, 0:i8
%7:i8 = phi %1, %4, %4, %6
%8:i8 = phi %0, %7, %4, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4, 0:i8
%6:i8 = phi %1, %5, 0:i8
%7:i8 = phi %0, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = phi %0, 255:i32, 255:i32, 255:i32, 15:i32, 255:i32, 15:i32, 15:i32, 3:i32, 255:i32, 15:i32, 3:i32
%2:i64 = var
%3:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxx11) (zn)
%4:i64 = and %2, %3
%5:i32 = trunc %4
%6:i32 = xor %1, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 6
%2 = block 3
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = phi %2, %3, %4, %4
%6:i32 = phi %1, %5, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%7:i32 = phi %0, %6, 1:i32, 1:i32, 0:i32, 3:i32, 2:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000010x) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 2:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %3, 0:i32, %7
%9:i32 = phi %0, 0:i32, %2, %8, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = var
%2:i1 = eq 0:i32, %1
%3:i32 = zext %2
%4:i32 = var
%5:i1 = eq 0:i32, %4
%6 = block 2
%7:i32 = phi %6, %3, 0:i32
%8:i32 = select %5, 16:i32, %7
%9:i32 = var
%10:i1 = eq 0:i32, %9
%11 = block 2
%12:i32 = phi %11, %8, %7
%13:i32 = select %10, 32:i32, %12
%14:i32 = var
%15:i1 = eq 0:i32, %14
%16 = block 2
%17:i32 = phi %16, %13, %12
%18:i32 = select %15, 48:i32, %17
%19:i32 = phi %0, 0:i32, 0:i32, 0:i32, %3, 0:i32, %8, 0:i32, %13, 0:i32, %18, 0:i32
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = lshrexact %0, 3:i64
%2:i32 = var
%3:i64 = zext %2
%4:i64 = subnsw %1, %3
%5:i64 = addnsw 4294967295:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, 2:i32, 0:i32, 2:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 33:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000x00000000000x0000xx) (n)
%3:i32 = var (0000000000000x0000000000xx0000xx) (n)
%4:i32 = var (0000000000000x0000000000xx0000xx) (n)
%5:i32 = phi %1, %2, %3, %4
%6:i32 = or 256:i32, %5
%7:i32 = phi %0, %6, %5
%8:i1 = ult 2097151:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 327:i32, 328:i32
%4:i32 = phi %1, %3, 393:i32, 394:i32, 394:i32
%5 = block 2
%6:i1 = var
%7:i32 = select %6, 393:i32, 375:i32
%8:i32 = phi %5, %7, 0:i32
%9 = block 5
%10:i32 = phi %9, 377:i32, 376:i32, 0:i32, 0:i32, 0:i32
%11:i32 = phi %0, %4, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw %0, %1
%3:i64 = addnsw 18446744073709551615:i64, %2
%4:i64 = urem %3, %0
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i16 = var (0000000x0x00000x) (zn)
%3:i16 = var (0000000x0x00010x) (zn)
%4:i16 = var (0000000x0x00001x) (zn)
%5:i16 = var (0000000x0x01000x) (zn)
%6:i16 = phi %1, %2, %3, %4, %5
%7:i16 = or 4096:i16, %6
%8:i16 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = zext %1
%3 = block 7
%4:i32 = phi %3, 1:i32, %2, %2, %2, %2, %2, %2
%5:i32 = phi %0, %2, %4, %2
%6:i32 = shlnsw %5, 24:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = phi %1, 2:i16, 22:i16
%3:i16 = phi %0, %2, 2:i16
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 7656:i32, 7763:i32
%4:i32 = phi %1, 7840:i32, %3
%5 = block 2
%6:i32 = select %2, 7511:i32, 7981:i32
%7:i32 = phi %5, 7840:i32, %6
%8 = block 2
%9:i32 = select %2, 7556:i32, 8026:i32
%10:i32 = phi %8, 7840:i32, %9
%11 = block 3
%12:i1 = var
%13:i32 = select %12, 7645:i32, 7666:i32
%14:i32 = select %12, 7752:i32, 7806:i32
%15:i32 = phi %11, 7837:i32, %13, %14
%16 = block 3
%17:i32 = select %12, 7500:i32, 7484:i32
%18:i32 = select %12, 7970:i32, 7954:i32
%19:i32 = phi %16, 7837:i32, %17, %18
%20 = block 3
%21:i32 = select %12, 7839:i32, 7837:i32
%22:i32 = select %12, 7544:i32, 7525:i32
%23:i32 = select %12, 8014:i32, 7995:i32
%24:i32 = phi %20, %21, %22, %23
%25 = block 3
%26:i32 = var (0000000000000000000xx1101x1xx0xx) (zn)
%27:i32 = select %12, 7838:i32, %26
%28:i32 = var (0000000000000000000xx1xx111x011x) (zn)
%29:i32 = select %12, 7634:i32, %28
%30:i32 = var (0000000000000000000xx1101xx0x01x) (zn)
%31:i32 = select %12, 7741:i32, %30
%32:i32 = phi %25, %27, %29, %31
%33 = block 3
%34:i32 = var (0000000000000000000xx1xxx1xx00x1) (zn)
%35:i32 = select %12, 7489:i32, %34
%36:i32 = var (0000000000000000000xx111001xx1x1) (zn)
%37:i32 = select %12, 7959:i32, %36
%38:i32 = phi %33, %27, %35, %37
%39 = block 3
%40:i32 = var (0000000000000000000xx1xx1x0xx11x) (zn)
%41:i32 = select %12, 7531:i32, %40
%42:i32 = var (0000000000000000000xx1110x1x0x0x) (zn)
%43:i32 = select %12, 8001:i32, %42
%44:i32 = phi %39, %27, %41, %43
%45:i1 = var
%46:i1 = var
%47:i32 = select %46, 7880:i32, 1804:i32
%48:i32 = select %45, 7873:i32, %47
%49:i32 = select %46, 7950:i32, 1818:i32
%50:i32 = select %45, 7940:i32, %49
%51:i32 = phi %0, %4, %7, %10, %15, %19, %24, %32, %38, %44, %48, 1298:i32, %50, 1295:i32, 1720:i32, 1700:i32, 1674:i32, 1741:i32
infer %51

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32, 1:i32
%4 = block 5
%5:i32 = phi %4, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32
%6:i32 = phi %1, %3, %5
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2 = block 6
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%5:i8 = select %1, 0:i8, %4
%6:i8 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = addnw 2:i32, %1
%3:i1 = var
%4:i32 = select %3, 3:i32, 2:i32
%5:i32 = addnuw %2, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, %2, %2, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 9
%3:i32 = phi %2, 0:i32, 0:i32, 4:i32, 25:i32, 2:i32, 0:i32, 3:i32, 24:i32, 1:i32
%4:i32 = phi %1, 25:i32, 24:i32, %3
%5:i32 = phi %0, 0:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 14:i32, 15:i32
%3:i32 = phi %0, %2, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4, 1:i32
%6 = block 2
%7:i32 = phi %6, 1:i32, 6:i32
%8:i32 = phi %1, %5, %7
%9:i32 = phi %0, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000001x) (zn)
%4:i32 = phi %2, %3, 0:i32
%5 = block 3
%6 = block 3
%7:i32 = var (0000000000000000000000000000001x) (zn)
%8:i32 = phi %5, %7, 0:i32, 0:i32
%9:i32 = phi %1, %4, %8
%10:i32 = phi %0, %9, 0:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, 0:i1, 0:i1, %2
%4:i8 = zext %3
%5 = block 2
%6:i8 = phi %5, 0:i8, %4
%7:i8 = phi %0, %4, %4, %4, %4, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i1 = eq 28:i32, %3
%5 = block 2
%6 = block 7
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, %7, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%9 = block 4
%10 = block 2
%11:i8 = var (0000000x) (n)
%12:i8 = phi %9, %11, 1:i8, 1:i8, %11
%13:i8 = phi %5, %8, %12
%14:i8 = select %4, %13, 0:i8
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 5:i32
%4:i32 = phi %0, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = ashr %1, %2
%4:i64 = var
%5:i64 = phi %0, %3, %4
%6:i64 = ashr %5, 63:i64
%7:i64 = xor %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 31
%1 = block 7
%2:i1 = var
%3:i32 = select %2, 3:i32, 1:i32
%4:i1 = var
%5:i32 = select %4, 3:i32, 1:i32
%6:i32 = phi %1, 2:i32, %3, 2:i32, %5, %5, 3:i32, 2:i32
%7:i32 = phi %0, 0:i32, %6, %6, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, %2, 0:i8
%5:i8 = phi %0, %2, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = var (0000000x) (n)
%3:i1 = ne 0:i8, %2
%4:i32 = select %3, 115:i32, 23:i32
%5:i8 = var (0000000x) (n)
%6:i1 = ne 0:i8, %5
%7:i32 = select %6, 114:i32, 234:i32
%8:i32 = phi %1, 22:i32, %4, %7, 19:i32
%9:i32 = select %3, 116:i32, 21:i32
%10:i32 = select %6, 113:i32, 233:i32
%11 = block 3
%12:i1 = phi %11, 0:i1, 0:i1, 1:i1
%13:i32 = select %12, 24:i32, 22:i32
%14:i32 = phi %0, %8, 19:i32, %9, %10, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i32 = zext %3
%5 = block 4
%6:i32 = phi %5, 0:i32, 1:i32, 0:i32, 0:i32
%7:i32 = phi %1, %4, %6
%8:i32 = phi %0, 0:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 8193:i32, 1:i32
%3:i32 = or 67108864:i32, %2
%4:i32 = or 134217728:i32, %2
%5:i32 = phi %0, %3, %4, %2
%6:i32 = or 131072:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 1:i32, 1:i32, %2, 2:i32
%4:i32 = phi %0, 1:i32, 1:i32, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000x0x0x) (zn)
%2:i1 = eq 20:i32, %1
%3:i32 = select %2, 0:i32, %1
%4:i32 = phi %0, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, %4
%7:i32 = phi %0, %4, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = var (001xx100) (zn)
%4:i8 = phi %2, %3, 20:i8
%5:i8 = phi %1, %4, %4, 20:i8
%6:i8 = phi %0, 20:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = var (00000000000000000000000000000xx0) (zn)
%4:i32 = phi %1, %3, 0:i32
%5:i1 = var
%6:i32 = zext %5
%7:i32 = or %4, %6
%8:i32 = phi %0, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, %2, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 5
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %2, %4, 0:i32, 0:i32
%6:i32 = phi %1, %5, 0:i32
%7:i32 = phi %0, 2:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 3
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 1:i32, 0:i32, %6
%8:i32 = phi %1, 1:i32, 0:i32, %3, %7
%9:i32 = phi %0, 1:i32, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000001x) (zn)
%3 = block 2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 8:i64, %5
%7:i64 = phi %0, %6, %5
%8:i64 = or 4:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 2
%2:i1 = var
%3:i32 = var (000000000000000000000000000xxxxx) (n)
%4:i32 = select %2, 11:i32, %3
%5:i32 = phi %1, %4, 11:i32
%6:i32 = phi %0, %5, %5, 5:i32, %4, 15:i32, %5, %5, %5, %5, %5, %5, %5, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 10:i32, 0:i32
%4:i32 = addnw 10:i32, %3
%5:i32 = phi %1, %4, %3
%6:i32 = addnsw 3:i32, %5
%7:i32 = phi %0, %5, %5, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 2:i32, 3:i32
%3 = block 7
%4:i32 = phi %3, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32
%5:i32 = lshr %4, 1:i32
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 5:i32
%4:i32 = phi %1, %3, 5:i32
%5:i32 = phi %0, 5:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 5
%3 = block 2
%4:i8 = var (0000000x) (n)
%5 = block 2
%6:i8 = var (0000000x) (n)
%7 = block 2
%8:i8 = var (0000000x) (n)
%9 = block 2
%10:i8 = var (0000000x) (n)
%11:i8 = phi %2, %4, %6, %8, %10, 0:i8
%12:i8 = phi %1, 0:i8, %11, %11
%13:i8 = phi %0, 0:i8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = or 2:i32, %2
%5:i32 = phi %3, %2, %4
%6 = block 2
%7:i32 = phi %6, %2, %4
%8:i32 = or 4:i32, %7
%9:i32 = phi %0, %2, %2, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (000000000000xx01xxxxxxxx00000000) (zn)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5:i32 = var (000000000000000000000000xxxxxx00) (n)
%6:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%7:i32 = or %5, %6
%8:i32 = or 2752512:i32, %7
%9:i32 = or 2818048:i32, %7
%10:i32 = or 2883584:i32, %7
%11:i32 = var (0000000000101xxx0000000000000000) (zn)
%12:i32 = or %7, %11
%13:i32 = or 1:i32, %12
%14:i32 = var (000000000000000000000000xxxxxx00) (n)
%15:i32 = var (000000000000xx00xxxxxxxx00000000) (zn)
%16:i32 = or %14, %15
%17:i32 = or 1:i32, %16
%18:i32 = phi %0, %4, %4, %3, %3, %8, %8, %9, %9, %10, %10, %13, %13, %17, %17, %16, %16
infer %18

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 131072:i64, 0:i64
%3:i64 = or 262144:i64, %2
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4 = block 2
%5:i8 = phi %4, 1:i8, %2
%6:i8 = phi %3, %2, %5
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000x1) (zn)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 0:i32, 1:i32, 2:i32, 0:i32, 5:i32, 3:i32, 4:i32
%3:i32 = phi %0, 6:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = select %2, 0:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, %6
%9:i32 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 0:i32, 0:i32, 1:i32, 0:i32, 1:i32, %2, 0:i32, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, %4, 1:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0)
%2:i1 = eq 0:i32, %1
%3 = block 2
%4:i32 = var (000000000000000000000000000000x1) (zn)
%5:i32 = phi %3, 3:i32, %4
%6:i32 = select %2, %5, 1:i32
%7:i32 = phi %0, %6, 0:i32, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000x0x0x) (zn)
%3:i32 = phi %1, %2, 1:i32
%4:i32 = phi %0, %3, 16:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 96:i64
%4:i64 = subnsw 192153584101141162:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, 1:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 4693:i32, 4641:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i32 = phi %1, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, 8:i32, 0:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = phi %1, %2, 4:i32
%4:i32 = phi %0, 4:i32, 4:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i64 = var
%2:i64 = var
%3:i64 = phi %0, 0:i64, %1, %2, %1, %1, %1, %1
%4:i64 = srem %3, 8:i64
%5:i64 = subnsw 8:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3 = block 6
%4:i8 = phi %3, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = and 4294967295:i64, %1
%3:i64 = and 7:i64, %1
%4:i64 = subnsw %2, %3
%5:i64 = phi %0, %4, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = phi %0, 7:i32, 9:i32, 12:i32
%2:i8 = var (0000000x) (n)
%3:i32 = zext %2
%4:i32 = subnsw %1, %3
%5:i32 = shl 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4 = block 3
%5:i32 = phi %4, 1:i32, 1:i32, 0:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7:i32 = phi %0, 1:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 14
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4, 0:i8
%6 = block 2
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, %7, %5
%9:i8 = phi %1, %5, %5, %8, %5
%10 = block 2
%11 = block 2
%12:i8 = phi %11, 0:i8, %9
%13:i8 = phi %10, %9, %12
%14:i8 = phi %0, %9, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 15
%2 = block 3
%3:i1 = var
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = select %3, 2:i64, %4
%6:i64 = phi %1, 0:i64, 2:i64, 2:i64, 2:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %5, 0:i64, 0:i64, 0:i64, 0:i64
%7 = block 2
%8:i64 = phi %7, %6, 2:i64
%9:i64 = phi %0, %6, %8, %8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5, 1:i32
%7:i32 = phi %0, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 21:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i32 = phi %1, 234:i32, 234:i32, 230:i32
%3:i32 = phi %0, 232:i32, 233:i32, %2, 234:i32, 234:i32, 230:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 2:i32
%5:i32 = phi %0, 2:i32, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 9
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32
%3 = block 4
%4:i32 = phi %3, 1:i32, 1:i32, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = var (0000000x) (n)
%6:i8 = var (0000000x) (n)
%7:i8 = var (0000000x) (n)
%8:i8 = var (0000000x) (n)
%9:i1 = var
%10:i8 = zext %9
%11:i8 = phi %1, %2, %3, %4, %5, %6, %7, %8, %10
%12:i8 = phi %0, %11, %10
%13:i8 = addnw 1:i8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 1073741824:i32, 536870912:i32
%3:i32 = phi %0, %2, %2, %2, 1073741824:i32, 536870912:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var
%2:i1 = eq 2:i32, %1
%3:i1 = var
%4:i32 = select %3, 0:i32, 2:i32
%5:i32 = select %2, 1:i32, %4
%6:i32 = phi %0, 2:i32, 1:i32, 2:i32, 0:i32, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 2:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2 = block 3
%3:i32 = phi %2, 314:i32, 314:i32, 318:i32
%4:i32 = phi %1, 0:i32, 0:i32, 0:i32, %3, 0:i32, 318:i32
%5 = block 6
%6 = block 3
%7:i32 = phi %6, 312:i32, 312:i32, 309:i32
%8:i32 = phi %5, 0:i32, 0:i32, 0:i32, %7, 0:i32, 309:i32
%9:i1 = var
%10:i32 = select %9, 1693:i32, 629:i32
%11:i32 = phi %0, %4, %8, 630:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8, 1:i8
%5 = block 2
%6:i8 = phi %5, 1:i8, 0:i8
%7:i8 = phi %0, 1:i8, %4, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 2:i32, 4:i32
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, 8:i32, %3, %3, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 8:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, %2, 1:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 16
%2:i32 = phi %1, 6:i32, 7:i32, 8:i32, 9:i32, 10:i32, 11:i32, 12:i32, 13:i32, 14:i32, 0:i32, 0:i32, 5:i32, 4:i32, 3:i32, 2:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 6:i32, 4:i32, 2:i32
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i8 = trunc %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 2:i32
%3:i32 = phi %0, %2, 2:i32
%4:i32 = addnsw 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 1308:i32, 1309:i32
%4:i32 = select %2, 944:i32, 945:i32
%5:i32 = select %2, 82:i32, 85:i32
%6:i32 = phi %1, %3, %4, %5
%7:i32 = phi %0, %6, 98:i32, %6, 97:i32, 952:i32, 951:i32, 98:i32, 97:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i16 = phi %0, 64:i16, 32:i16, 16:i16, 16:i16, 8:i16, 8:i16
%2:i16 = addnsw 65535:i16, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 8
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, %3, 1:i8, %3, %3, 0:i8, %3
%5:i32 = var
%6:i1 = slt 7:i32, %5
%7:i8 = select %6, %4, 1:i8
%8:i8 = phi %0, %4, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 125:i32, 125:i32, 126:i32, 126:i32
%3:i32 = phi %0, 125:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var (0000xxxx00000000) (n)
%2:i1 = eq 2048:i16, %1
%3:i8 = zext %2
%4 = block 2
%5:i8 = phi %4, 1:i8, %3
%6:i8 = phi %0, %3, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 2:i32, 1:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 2:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7:i32 = phi %0, 2:i32, 1:i32, %2, %6, 2:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, 1:i1, 1:i1, %2
%4:i8 = zext %3
%5 = block 2
%6:i8 = phi %5, 1:i8, 0:i8
%7:i8 = phi %0, %4, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var
%3:i1 = ne 4294967295:i32, %2
%4:i8 = zext %3
%5 = block 5
%6:i8 = phi %5, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8
%7:i8 = phi %0, %4, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 3:i32, 2:i32
%3 = block 3
%4 = block 2
%5:i32 = phi %4, 6:i32, 5:i32
%6:i32 = phi %3, 4:i32, 4:i32, %5
%7:i32 = phi %0, 0:i32, %2, 2:i32, 1:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 5:i32
%3:i32 = phi %0, 6:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 932:i32, 1743:i32
%3:i32 = phi %0, 933:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, %6, 1:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%2:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%3:i32 = or %1, %2
%4:i32 = or 1:i32, %3
%5 = block 4
%6:i32 = var (000000000000xx000000000000000000) (zn)
%7:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%8:i32 = or %6, %7
%9:i32 = or 1:i32, %8
%10:i32 = phi %0, %4, %4, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = and 255:i32, %2
%4:i32 = or 256:i32, %3
%5:i32 = select %1, %4, %3
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3 = block 2
%4:i32 = var (00000000000000000000000000000xx0) (zn)
%5:i32 = phi %2, %4, %4, %4, 0:i32
%6:i32 = phi %1, %5, 0:i32
%7 = block 2
%8:i32 = or 1:i32, %6
%9:i32 = phi %7, %8, %6
%10:i32 = phi %0, %6, %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000000xx0) (n)
%2:i1 = eq 2:i64, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = select %2, %4, 3:i32
%6:i32 = phi %0, 2:i32, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 2:i32, 0:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2
%4:i8 = zext %3
%5 = block 2
%6 = block 3
%7:i8 = phi %6, 0:i8, 1:i8, 1:i8
%8:i8 = phi %5, %7, 1:i8
%9:i8 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 5
%3:i32 = phi %2, 6:i32, 6:i32, 6:i32, 6:i32, 0:i32
%4:i32 = phi %1, 11:i32, 2:i32, %3, %3
%5:i32 = phi %0, %4, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3 = block 4
%4:i8 = phi %3, 0:i8, 0:i8, 0:i8, 1:i8
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000x00000000000x000000) (n)
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = or %1, %2
%4:i32 = var (000000000000000000000000x0000000) (n)
%5:i32 = or %4, %3
%6:i32 = var (000000000000000000000000x0000000) (n)
%7:i32 = or %3, %6
%8:i32 = phi %0, %3, %5, %7
%9:i1 = ult 2097151:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 1:i32, 2:i32, 4:i32, 8:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i1 = var
%4:i64 = select %3, 16:i64, 12:i64
%5:i64 = udiv %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 1:i8, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, %2, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = zext %1
%3:i1 = var
%4:i32 = zext %3
%5 = block 2
%6:i32 = phi %5, 2:i32, 0:i32
%7:i32 = phi %0, %2, %4, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = or 50:i32, %2
%4:i32 = phi %0, %3, 70:i32, 65:i32, 65:i32, 65:i32, 65:i32, 65:i32, 65:i32, 65:i32, 65:i32, 70:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 36:i32, 33:i32, 21:i32
%3:i32 = phi %0, %2, %2, %2, %2, 9:i32, %2, %2, %2, %2, %2, %2, %2, 17:i32, 17:i32, 17:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 0:i32, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = zext %1
%3 = block 4
%4:i1 = var
%5:i32 = select %4, 2:i32, 0:i32
%6:i1 = var
%7:i32 = zext %6
%8:i32 = phi %3, 1:i32, %5, %7, 1:i32
%9:i32 = phi %0, 1:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 3:i32, 3:i32, 1:i32, 3:i32, 1:i32, 3:i32, 3:i32, 1:i32
%3:i32 = phi %0, %2, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5 = block 2
%6 = block 4
%7:i8 = phi %6, 0:i8, 1:i8, 0:i8, 0:i8
%8:i8 = phi %5, 0:i8, %7
%9:i8 = phi %0, 0:i8, %4, %8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i64 = sdivexact %2, 20:i64
%4:i64 = subnsw 922337203685477580:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = select %2, 8:i8, 16:i8
%4:i8 = phi %1, 8:i8, %3
%5:i8 = phi %0, 16:i8, 16:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4, 0:i8
%6:i8 = phi %1, %5, 0:i8, %5
%7:i8 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 15
%3:i32 = phi %2, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 2:i32, 2:i32, 3:i32, 3:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 4:i32, 3:i32
%4:i32 = phi %1, 4:i32, %3
%5:i32 = phi %0, 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = or %3, %5
%7:i8 = phi %0, %6, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i16 = var (000000000xxxxxxx) (n)
%2:i16 = and 3:i16, %1
%3:i32 = zext %2
%4:i1 = var
%5:i1 = var
%6:i1 = or %4, %5
%7:i32 = select %6, 0:i32, %3
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i16 = var (000000x000000000) (n)
%4:i16 = phi %2, 0:i16, 0:i16, %3
%5:i1 = var
%6:i16 = var (000000x000001000) (zn)
%7:i16 = select %5, %6, %4
%8:i16 = phi %1, %4, %4, %7
%9:i16 = or 256:i16, %8
%10:i16 = phi %0, %8, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 2:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = or 2:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, 1:i32, 2:i32, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = or 8:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 1:i32, %2, %4, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %2, %4, 1:i8, 1:i8, 1:i8
%6:i8 = phi %1, %5, 0:i8
%7:i8 = phi %0, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 2:i32, %1
%3:i32 = select %2, 3:i32, 0:i32
%4 = block 2
%5:i1 = var
%6:i32 = select %5, 155:i32, 156:i32
%7:i32 = phi %4, 155:i32, %6
%8:i32 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 4
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %2, %4, 3:i32
%6 = block 5
%7:i32 = phi %6, 2:i32, 2:i32, 3:i32, 3:i32, 3:i32
%8:i32 = phi %1, %5, %7
%9:i32 = phi %0, %8, 2:i32, 3:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 0:i8, 1:i8, %4, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 1:i1, %2
%4:i8 = zext %3
%5 = block 2
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %5, %7, 0:i8
%9:i8 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %1, 0:i32, %3, %7
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11 = block 2
%12 = block 2
%13:i32 = phi %12, 1:i32, 0:i32
%14:i32 = phi %11, 0:i32, %13
%15:i32 = phi %0, %8, %10, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000000x0) (n)
%3:i32 = lshrexact %2, 1:i32
%4:i32 = xor 3:i32, %3
%5:i32 = phi %1, %3, %4
%6:i32 = phi %0, 4:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 1:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, 2:i32, 1:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, 0:i32, 1:i32, %3
%5:i32 = phi %1, %4, 2:i32
%6:i32 = phi %0, %5, 2:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2 = block 2
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, 1:i32, %5
%7:i32 = phi %0, 1:i32, %6, 2:i32, 1:i32, 1:i32, 2:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, 1:i8, 1:i8, 0:i8, %3
%5:i8 = phi %0, 0:i8, %4, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 5
%2 = block 3
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = phi %2, %3, %4, %4
%6:i32 = phi %1, %5, 0:i32, 0:i32, 0:i32, 0:i32
%7:i32 = phi %0, %6, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 3:i32, 2:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i16 = var (0000000000000xxx) (zn)
%5:i16 = var (0000000000001xxx) (zn)
%6:i16 = select %3, %4, %5
%7:i16 = or 16:i16, %6
%8:i16 = phi %1, %6, %7
%9:i16 = or 32:i16, %8
%10:i16 = phi %0, %8, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, %2, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 3
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3
%5 = block 4
%6 = block 3
%7:i32 = phi %6, 1:i32, 0:i32, 1:i32
%8:i32 = phi %5, 1:i32, 0:i32, 1:i32, %7
%9:i32 = phi %0, 0:i32, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = var (0000000000000000000000000000100x) (zn)
%4:i32 = phi %1, %2, %3, %2
%5:i32 = or 32:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000010x) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 16:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 1:i32, 1:i32, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, %4, 1:i8, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 2:i32
%3:i32 = phi %0, 0:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = phi %8, 0:i32, %10
%12:i32 = phi %7, 0:i32, %11
%13:i32 = phi %0, 1:i32, 0:i32, %6, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7 = block 2
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10:i32 = phi %7, 0:i32, %9
%11:i32 = phi %0, 1:i32, 0:i32, 1:i32, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000001x0xx) (zn)
%3 = block 6
%4:i32 = var (0000000000000000000000000000x0xx) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 32:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = or 4:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5 = block 3
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %3, 0:i32, %7
%9:i32 = phi %0, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 1:i32, %8
%10:i32 = phi %1, 0:i32, %5, %9
%11:i32 = phi %0, 0:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = urem %2, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = var (0000000x) (n)
%6:i8 = phi %2, %4, %5, 0:i8
%7:i8 = phi %1, %6, 0:i8
%8:i8 = phi %0, %7, 0:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 3
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 1:i32, 0:i32, %6
%8:i32 = phi %1, 0:i32, %3, %7
%9:i32 = phi %0, 1:i32, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 14:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 14:i32, 1:i32
%5:i32 = phi %0, 14:i32, 1:i32, %2, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 1:i8, %1
%3 = block 3
%4:i8 = phi %3, 0:i8, 1:i8, 0:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2 = block 2
%3 = block 5
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8
%6 = block 2
%7:i8 = phi %6, %5, 0:i8
%8:i8 = phi %1, %5, %7, %5, %5, %5
%9:i8 = phi %0, %8, 0:i8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 21:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, %2, 0:i1, 1:i1
%4:i1 = var
%5:i32 = select %4, 5:i32, 3:i32
%6 = block 3
%7:i1 = var
%8:i32 = select %7, 4:i32, 0:i32
%9:i32 = select %3, %5, %8
%10:i32 = phi %0, 2:i32, 1:i32, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i64 = var
%2:i64 = srem %1, 8:i64
%3:i64 = subnsw 8:i64, %2
%4:i64 = addnsw 8:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3 = block 5
%4:i32 = var (000000000000000000000000000000x1) (zn)
%5:i32 = phi %2, %4, 3:i32
%6:i32 = phi %1, 3:i32, %5, 3:i32, 3:i32, 3:i32
%7:i32 = phi %0, %6, 3:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000xxxxx) (n)
%2:i64 = zext %1
%3:i64 = phi %0, %2, 32:i64
%4:i32 = trunc %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3:i32 = phi %0, %2, 0:i32, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 116:i8, 100:i8, 98:i8, 115:i8
%3:i8 = phi %0, %2, 115:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4 = block 2
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %4, %6, %2
%8:i8 = phi %3, %7, %2
%9:i8 = phi %0, %2, %2, %8, %2, %2
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 7:i32, 4:i32, 6:i32, 5:i32
%3:i32 = phi %0, 3:i32, %2, 1:i32
%4:i32 = or 16:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 1:i32, 1:i32, %4
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 13:i32, 0:i32
%3:i32 = phi %0, 14:i32, %2, 14:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 4:i32
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 2:i32
%7:i32 = phi %0, 0:i32, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 0:i32, %7
%9:i32 = phi %0, 1:i32, %4, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 9
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 7:i32, %1
%3:i32 = var (000000000000000000000000000xxxx0) (n)
%4:i32 = or 32:i32, %3
%5:i32 = or %2, %4
%6:i32 = phi %0, 0:i32, 0:i32, %5, %2, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (zn)
%3:i64 = var (000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (zn)
%4:i64 = phi %1, %2, %3
%5:i64 = addnsw 16:i64, %4
%6:i64 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var
%2:i64 = zext %1
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, %3, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 5
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, 0:i8, 1:i8, 0:i8, %4
%6:i8 = phi %1, 0:i8, %5, %5
%7 = block 5
%8 = block 2
%9:i8 = phi %8, 0:i8, %6
%10:i8 = phi %7, %6, 0:i8, 0:i8, %6, %9
%11:i8 = phi %0, %6, %10, %10, %6
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = phi %1, %3, 0:i32
%5:i32 = addnsw 4:i32, %4
%6:i32 = addnsw 8:i32, %4
%7:i32 = phi %0, %5, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 5:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %0, 1:i32, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2:i32 = zext %1
%3:i32 = or 8:i32, %2
%4:i32 = phi %0, %2, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8
%10:i32 = phi %1, 0:i32, %5, %9
%11:i32 = phi %0, 0:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (zn)
%3 = block 4
%4:i32 = var (00000000000000000000000000000x0x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = addnsw 2:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i8 = var
%6:i8 = and 1:i8, %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = or %6, %8
%10:i8 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = shl 4:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = phi %0, %3, 15:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or %1, %2
%4:i1 = var
%5:i32 = zext %4
%6:i32 = or %3, %5
%7:i32 = var (0000000000000000000000000000000x) (n)
%8:i32 = or %6, %7
%9:i1 = var
%10:i32 = zext %9
%11:i32 = or %8, %10
%12:i32 = phi %0, %6, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7:i32 = phi %0, 1:i32, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 1:i32, 2:i32
%4:i32 = phi %1, 6:i32, %3
%5:i32 = phi %0, 4:i32, 3:i32, %4, 0:i32, 5:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 32
%1 = block 2
%2:i32 = phi %1, 0:i32, 7:i32
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = phi %5, 0:i32, 5:i32
%7:i32 = phi %4, 6:i32, %6
%8:i32 = phi %3, %7, %6
%9 = block 3
%10:i32 = phi %9, 0:i32, 0:i32, 4:i32
%11 = block 4
%12:i32 = phi %11, 8:i32, 0:i32, 9:i32, 0:i32
%13:i32 = phi %0, %2, %8, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %10, %10, 0:i32, 0:i32, 10:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %12, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 11:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 340:i32, 340:i32, 340:i32, 340:i32, 339:i32
%3:i32 = phi %0, %2, 97:i32, 96:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 0:i8, %4
%6 = block 2
%7:i8 = var
%8:i1 = eq 95:i8, %7
%9:i8 = zext %8
%10:i8 = phi %0, %5, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (00000000000000000000000000000000000000000000000000000xxxxxxxxxxx) (n)
%1:i64 = var (0000000000000000000000000000000000000x0000xxxxxx00x0x00000000000) (n)
%2:i64 = or %0, %1
%3:i32 = trunc %2
%4:i32 = shl %3, 16:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 274:i32, 275:i32
%4:i32 = phi %1, 272:i32, %3, 273:i32
%5 = block 3
%6:i1 = var
%7:i32 = select %6, 278:i32, 279:i32
%8:i32 = phi %5, 276:i32, %7, 277:i32
%9 = block 3
%10:i1 = var
%11:i32 = select %10, 282:i32, 283:i32
%12:i32 = phi %9, 280:i32, %11, 281:i32
%13 = block 3
%14:i1 = var
%15:i32 = select %14, 270:i32, 271:i32
%16:i32 = phi %13, 268:i32, %15, 269:i32
%17 = block 3
%18:i1 = var
%19:i32 = select %18, 286:i32, 287:i32
%20:i32 = phi %17, 284:i32, %19, 285:i32
%21 = block 3
%22:i1 = var
%23:i32 = select %22, 274:i32, 275:i32
%24:i32 = phi %21, 272:i32, %23, 273:i32
%25 = block 3
%26:i1 = var
%27:i32 = select %26, 290:i32, 291:i32
%28:i32 = phi %25, 288:i32, %27, 289:i32
%29 = block 3
%30:i1 = var
%31:i32 = select %30, 286:i32, 287:i32
%32:i32 = phi %29, 284:i32, %31, 285:i32
%33 = block 3
%34:i1 = var
%35:i32 = select %34, 282:i32, 283:i32
%36:i32 = phi %33, 280:i32, %35, 281:i32
%37 = block 3
%38:i1 = var
%39:i32 = select %38, 278:i32, 279:i32
%40:i32 = phi %37, 276:i32, %39, 277:i32
%41 = block 3
%42:i1 = var
%43:i32 = select %42, 274:i32, 275:i32
%44:i32 = phi %41, 272:i32, %43, 273:i32
%45 = block 3
%46:i1 = var
%47:i32 = select %46, 270:i32, 271:i32
%48:i32 = phi %45, 268:i32, %47, 269:i32
%49 = block 3
%50:i1 = var
%51:i32 = select %50, 266:i32, 267:i32
%52:i32 = phi %49, 264:i32, %51, 265:i32
%53 = block 3
%54:i1 = var
%55:i32 = select %54, 262:i32, 263:i32
%56:i32 = phi %53, 260:i32, %55, 261:i32
%57:i32 = phi %0, %4, %8, %12, %16, %20, %24, %28, %32, %36, %40, %44, %48, %52, %56
infer %57

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, 0:i8, %2
%4 = block 4
%5:i64 = var
%6:i64 = var
%7:i1 = ne %5, %6
%8:i8 = select %7, 0:i8, %3
%9:i8 = phi %0, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, %3, %3, 1:i8, %3
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i32 = var (000000000000000000000000000000xx) (n)
%2:i32 = phi %0, 1:i32, 0:i32, 0:i32, 1:i32, 1:i32, 1:i32, %1, 2:i32, 0:i32
%3:i16 = trunc %2
%4:i16 = shlnw %3, 2:i16
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = and 3:i64, %1
%3:i64 = or 5:i64, %2
%4:i64 = or 4:i64, %2
%5:i64 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 3:i32, 3:i32, 3:i32, 0:i32
%3:i32 = phi %0, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 3059:i32, 533:i32
%4:i32 = phi %1, 2906:i32, %3, 3058:i32
%5 = block 4
%6:i1 = var
%7:i32 = select %6, 2968:i32, 91:i32
%8:i32 = phi %5, 2559:i32, 2970:i32, %7, 2967:i32
%9:i32 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 917504:i32, 786432:i32, 655360:i32
%4:i32 = or 1:i32, %3
%5:i32 = phi %1, %3, %4
%6:i32 = or 2:i32, %5
%7:i32 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 3
%5:i8 = phi %4, 0:i8, 1:i8, 1:i8
%6:i8 = phi %1, %3, %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i32 = or 50:i32, %2
%4:i32 = phi %0, 32:i32, 65:i32, 65:i32, %3, 70:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = or 2:i32, %2
%4:i32 = addnw 1:i32, %3
%5:i32 = phi %0, %4, %3
%6:i32 = addnsw 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 6
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32, 2:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (000000000000000000000000000000000000000000000000000000000000001x) (zn)
%3 = block 2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 8:i64, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 33:i32, 31:i32, 18:i32
%3:i32 = phi %0, %2, %2, %2, %2, 6:i32, %2, %2, %2, %2, %2, %2, %2, %2, 15:i32, 15:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000000000000000000000000000000xxxxx) (n)
%2:i64 = subnsw 32:i64, %1
%3:i32 = trunc %2
%4:i32 = phi %0, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i64 = select %2, 3797:i64, 3796:i64
%4 = block 2
%5 = block 2
%6:i64 = phi %5, 4064:i64, 4063:i64
%7:i64 = phi %4, %6, 4063:i64
%8:i64 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8, 1:i8
%5:i8 = phi %0, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, %3, %5, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 10
%3 = block 3
%4:i32 = var (00000000000000000000000000x0xx1x) (zn)
%5:i32 = phi %2, 46:i32, 46:i32, 58:i32, 46:i32, 46:i32, 46:i32, 3:i32, 3:i32, %4, 46:i32
%6:i32 = phi %1, %5, 58:i32
%7:i32 = phi %0, 3:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 5
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000000000000000xxxxxxx) (n)
%3:i16 = trunc %2
%4:i16 = var (000000000000000x) (n)
%5:i16 = addnw %4, %3
%6:i16 = phi %1, %3, %3, %5
%7:i16 = phi %0, 0:i16, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 3:i32
%4:i32 = phi %0, 1:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = lshr %0, 2:i32
%2:i32 = addnw 2:i32, %1
%3:i8 = var
%4:i1 = ne 0:i8, %3
%5:i32 = select %4, 3:i32, 2:i32
%6:i32 = addnuw %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2:i32 = zext %1
%3:i32 = or 8:i32, %2
%4:i32 = phi %0, %2, %3, %2
%5:i32 = or 32:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 30
%2:i64 = phi %1, 0:i64, 8:i64, 11:i64, 8:i64, 8:i64, 8:i64, 11:i64, 11:i64, 11:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 8:i64, 11:i64, 11:i64, 11:i64, 12:i64, 12:i64, 12:i64, 10:i64, 10:i64, 10:i64, 7:i64, 7:i64, 7:i64
%3:i64 = phi %0, %2, 8:i64, 8:i64, 8:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 305:i32
%3 = block 294
%4 = block 2
%5:i32 = phi %4, 307:i32, 1:i32
%6:i32 = phi %3, 17:i32, 18:i32, 19:i32, 20:i32, 21:i32, 22:i32, 23:i32, 24:i32, 33:i32, 25:i32, 26:i32, 27:i32, 28:i32, 29:i32, 30:i32, 31:i32, 32:i32, 34:i32, 35:i32, 36:i32, 37:i32, 38:i32, 39:i32, 40:i32, 41:i32, 42:i32, 43:i32, 44:i32, 45:i32, 46:i32, 47:i32, 48:i32, 49:i32, 50:i32, 51:i32, 52:i32, 53:i32, 54:i32, 55:i32, 56:i32, 57:i32, 58:i32, 59:i32, 60:i32, 61:i32, 62:i32, 63:i32, 64:i32, 65:i32, 66:i32, 67:i32, 68:i32, 69:i32, 70:i32, 71:i32, 72:i32, 73:i32, 74:i32, 75:i32, 76:i32, 77:i32, 78:i32, 79:i32, 80:i32, 81:i32, 82:i32, 83:i32, 84:i32, 85:i32, 86:i32, 87:i32, 88:i32, 89:i32, 90:i32, 91:i32, 92:i32, 93:i32, 96:i32, 97:i32, 98:i32, 100:i32, 101:i32, 102:i32, 103:i32, 105:i32, 106:i32, 107:i32, 108:i32, 109:i32, 110:i32, 111:i32, 112:i32, 113:i32, 114:i32, 99:i32, 115:i32, 116:i32, 104:i32, 117:i32, 119:i32, 118:i32, 120:i32, 121:i32, 122:i32, 123:i32, 124:i32, 125:i32, 126:i32, 127:i32, 128:i32, 129:i32, 130:i32, 131:i32, 95:i32, 94:i32, 132:i32, 134:i32, 133:i32, 135:i32, 137:i32, 138:i32, 139:i32, 140:i32, 141:i32, 142:i32, 143:i32, 144:i32, 145:i32, 146:i32, 147:i32, 148:i32, 149:i32, 150:i32, 151:i32, 152:i32, 153:i32, 154:i32, 155:i32, 156:i32, 157:i32, 158:i32, 159:i32, 160:i32, 161:i32, 162:i32, 163:i32, 164:i32, 165:i32, 166:i32, 167:i32, 168:i32, 169:i32, 170:i32, 175:i32, 171:i32, 172:i32, 173:i32, 174:i32, 136:i32, 176:i32, 177:i32, 178:i32, 179:i32, 180:i32, 181:i32, 182:i32, 183:i32, 184:i32, 185:i32, 186:i32, 187:i32, 188:i32, 189:i32, 190:i32, 191:i32, 192:i32, 193:i32, 194:i32, 195:i32, 196:i32, 197:i32, 198:i32, 199:i32, 200:i32, 201:i32, 202:i32, 203:i32, 204:i32, 205:i32, 206:i32, 207:i32, 208:i32, 209:i32, 210:i32, 211:i32, 212:i32, 213:i32, 214:i32, 215:i32, 216:i32, 16:i32, 283:i32, 284:i32, 285:i32, 286:i32, 255:i32, 256:i32, 257:i32, 258:i32, 305:i32, 305:i32, 305:i32, 305:i32, 305:i32, 305:i32, 305:i32, 305:i32, 305:i32, 305:i32, 305:i32, 217:i32, 218:i32, 219:i32, 220:i32, 221:i32, 222:i32, 223:i32, 224:i32, 225:i32, 226:i32, 227:i32, 228:i32, 229:i32, 230:i32, 231:i32, 232:i32, 233:i32, 234:i32, 235:i32, 236:i32, 237:i32, 238:i32, 239:i32, 240:i32, 241:i32, 242:i32, 243:i32, 244:i32, 245:i32, 246:i32, 247:i32, 248:i32, 249:i32, 250:i32, 251:i32, 252:i32, 253:i32, 259:i32, 260:i32, 261:i32, 262:i32, 263:i32, 264:i32, 265:i32, 271:i32, 272:i32, 273:i32, 275:i32, 276:i32, 274:i32, 277:i32, 278:i32, 279:i32, 280:i32, 281:i32, 282:i32, 254:i32, 266:i32, 268:i32, 267:i32, 269:i32, 270:i32, 296:i32, 297:i32, 298:i32, 299:i32, 300:i32, 302:i32, 304:i32, 303:i32, 301:i32, %5, 95:i32, 1:i32
%7:i32 = phi %0, 290:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 4:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7 = block 3
%8:i32 = phi %7, 1:i32, 1:i32, 0:i32
%9 = block 3
%10:i32 = phi %9, 1:i32, 1:i32, 0:i32
%11 = block 2
%12:i32 = phi %11, 0:i32, 1:i32
%13:i32 = phi %0, 0:i32, %2, %6, %8, %10, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 256:i64, 0:i64
%3:i64 = or 16384:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = or 32768:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 2:i32, 3:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 5
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %3, 1:i8, 0:i8, 1:i8, 1:i8, %5
%7:i8 = phi %0, %2, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i8 = var (000xxxx1) (zn)
%4 = block 5
%5:i8 = var (0000xxx0) (n)
%6:i8 = var (000x0000) (n)
%7:i8 = or %5, %6
%8:i8 = phi %2, %3, %7
%9:i8 = phi %1, %8, %7
%10 = block 2
%11:i8 = phi %10, %9, %8
%12:i8 = phi %0, %9, %11, %11, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2, 0:i1, 0:i1
%4:i8 = zext %3
%5 = block 5
%6:i8 = phi %5, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8
%7:i8 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = phi %0, 4:i32, 1:i32, 1:i32, 4:i32, 1:i32, 1:i32
%2:i32 = var (0000000000000000000000000000xx0x) (n)
%3:i32 = shl 1:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
%5:i32 = mulnsw %1, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 3:i32, 1:i32, 0:i32, 3:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 2:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000xx11xx00xx) (zn)
%3:i32 = var (0000000000000000000000xxxxxx0000) (zn)
%4:i32 = phi %1, %2, %3
%5:i1 = var
%6:i32 = select %5, 520:i32, 260:i32
%7:i32 = or %4, %6
%8:i32 = phi %0, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = var (0000000000000000000001x00000000x) (zn)
%4 = block 4
%5:i32 = var (0000000000000000000000x00000000x) (n)
%6:i32 = phi %2, %3, %5, %5
%7:i32 = or 128:i32, %6
%8:i32 = phi %1, %7, %6
%9:i32 = or 2:i32, %8
%10:i32 = phi %0, %8, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 2:i32
%5:i32 = phi %0, 0:i32, 2:i32, %2, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i8 = var
%4:i8 = and 1:i8, %3
%5:i8 = phi %1, 0:i8, %4
%6:i8 = phi %0, 0:i8, %5, 0:i8, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 2:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 202:i32, 199:i32
%4:i32 = select %2, 206:i32, 194:i32
%5:i32 = phi %1, %3, %4
%6:i32 = select %2, 376:i32, 375:i32
%7:i32 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (000000000000000000000000000000xx) (n)
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %0, %1, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = subnsw 10:i32, %1
%3 = block 2
%4:i1 = var
%5:i32 = zext %4
%6:i32 = subnsw %2, %5
%7:i1 = var
%8:i32 = select %7, 4:i32, 5:i32
%9:i32 = phi %0, 22:i32, %6, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000xxxxxxx) (n)
%1:i32 = addnsw 4294967252:i32, %0
%2:i1 = ult 2:i32, %1
%3 = block 2
%4:i1 = var
%5 = block 2
%6:i32 = var (00000000000000000000000000xxx0x0) (n)
%7:i32 = select %4, %6, 10:i32
%8:i32 = phi %3, 48:i32, %7
%9:i32 = select %2, %8, 10:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000000x01) (zn)
%1:i1 = eq 5:i32, %0
%2:i3 = trunc %0
%3:i3 = select %1, 0:i3, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 16:i32, 32:i32
%3:i32 = phi %0, 0:i32, %2
%4:i16 = trunc %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, 2:i32, %4, 2:i32
%6:i32 = phi %1, 2:i32, %5
%7:i32 = phi %0, 0:i32, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3, 2:i32
%5:i32 = phi %0, 0:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 4295:i32, 4300:i32
%3 = block 2
%4:i32 = select %1, 4559:i32, 4560:i32
%5:i32 = phi %3, %4, %2
%6:i32 = phi %0, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 4
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3, %3
%5:i8 = phi %0, 1:i8, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 3:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 1:i32, %4, 0:i32
%6:i32 = phi %0, 1:i32, 1:i32, 1:i32, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var
%2:i32 = zext %1
%3:i32 = addnw 32:i32, %2
%4:i32 = phi %0, %3, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 4
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = phi %2, 2:i32, %4, %4
%6:i32 = phi %1, 4:i32, %5, %5
%7:i32 = phi %0, 6:i32, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4:i32, 3:i32
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2 = block 15
%3:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (n)
%4:i64 = phi %2, 0:i64, 2:i64, 2:i64, 2:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %3, 0:i64, 0:i64, 0:i64, 0:i64
%5 = block 2
%6:i64 = phi %5, %4, 2:i64
%7:i64 = phi %1, %4, %6, %6, %6, %6, %6
%8:i64 = phi %0, %7, 2:i64, 2:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, %4, 2:i32
%6:i32 = phi %1, 2:i32, %5
%7:i32 = phi %0, 2:i32, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i32 = var
%2:i1 = eq 2:i32, %1
%3:i1 = var
%4:i32 = select %3, 0:i32, 2:i32
%5:i32 = select %2, 1:i32, %4
%6:i32 = phi %0, 2:i32, 0:i32, 0:i32, %5, 1:i32, 2:i32, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i24 = zext %1
%3:i24 = shlnw %2, 17:i24
%4:i24 = phi %0, 131072:i24, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i16 = var (0000000000000xxx) (zn)
%4:i16 = var (0000000000001xxx) (zn)
%5:i16 = phi %2, %3, %4
%6:i16 = or 16:i16, %5
%7:i16 = phi %1, %5, %6
%8:i16 = or 32:i16, %7
%9:i16 = phi %0, %7, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 0:i32, 4:i32, 3:i32, 2:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000xxxxx) (n)
%2:i64 = zext %1
%3:i64 = phi %0, %2, 0:i64
%4:i64 = subnsw 31:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %2, %4, 0:i32
%6:i32 = phi %1, %5, %4
%7 = block 2
%8:i1 = var
%9:i32 = zext %8
%10:i32 = phi %7, 1:i32, %9
%11 = block 2
%12:i1 = var
%13:i32 = zext %12
%14:i32 = phi %11, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18:i32 = var (0000000000000000000000000000000x) (n)
%19:i32 = phi %16, 0:i32, %18
%20:i32 = phi %15, %19, 0:i32
%21 = block 10
%22:i1 = var
%23:i1 = var
%24:i1 = var
%25:i1 = var
%26:i1 = var
%27:i1 = var
%28:i1 = var
%29:i1 = var
%30 = block 2
%31:i1 = var
%32:i1 = phi %21, 0:i1, %22, %23, %24, %25, %26, %27, %28, %29, %31
%33:i32 = zext %32
%34 = block 2
%35:i32 = phi %34, 0:i32, 1:i32
%36:i32 = phi %0, 1:i32, 0:i32, %6, 1:i32, 2:i32, 0:i32, %10, %14, %20, 1:i32, 0:i32, %33, 0:i32, %35, 0:i32, 1:i32, 0:i32
infer %36

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 2:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 1:i32, 3:i32, 0:i32, 2:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2 = block 4
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, %3, %3, 1:i8
%5:i8 = phi %1, %4, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6 = block 2
%7:i1 = var
%8:i8 = zext %7
%9:i1 = var
%10:i8 = zext %9
%11:i8 = phi %6, %8, %10
%12:i8 = phi %0, %5, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 20:i32
%4:i32 = phi %0, 0:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 5
%3:i32 = phi %2, 1:i32, 0:i32, 0:i32, 1:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6:i32 = phi %1, %3, %5, 1:i32
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 3
%2:i32 = phi %1, 442:i32, 58:i32, 32:i32
%3:i32 = or 2048:i32, %2
%4:i32 = phi %0, 0:i32, 638:i32, 4096:i32, 64:i32, 2986:i32, 16:i32, 20:i32, 42:i32, 8:i32, 1:i32, 278:i32, 4:i32, 2:i32, 1024:i32, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000)
%2:i64 = zext %1
%3:i64 = addnw 32:i64, %2
%4:i64 = phi %0, 0:i64, %3, 0:i64, 32:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2:i32 = phi %1, 0:i32, 0:i32, 0:i32, 7:i32, 6:i32, 7:i32
%3 = block 6
%4:i32 = phi %3, %2, 4:i32, %2, 5:i32, 8:i32, 4:i32
%5:i32 = phi %0, %2, 3:i32, %2, 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 33:i32, 31:i32, 18:i32
%3:i32 = phi %0, 0:i32, %2, %2, %2, 6:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 15:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 1:i8, %1
%3 = block 2
%4 = block 2
%5:i8 = phi %4, 1:i8, 0:i8
%6:i8 = phi %3, %5, 0:i8
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2:i8 = var
%3:i8 = var (0000000x) (n)
%4:i1 = eq %2, %3
%5:i8 = select %4, 0:i8, %1
%6:i8 = phi %0, %1, %1, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 4
%2:i32 = phi %1, 2:i32, 0:i32, 1:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32, 1:i32, 2:i32, 2:i32, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, 0:i64
%3:i64 = var
%4:i64 = add 1:i64, %3
%5:i64 = and 4294967295:i64, %4
%6:i64 = urem %2, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 18
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32
%3 = block 3
%4:i32 = phi %3, 0:i32, 0:i32, 1:i32
%5 = block 3
%6:i32 = phi %5, 0:i32, 0:i32, 1:i32
%7:i32 = phi %0, %2, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 2:i32, 4:i32
%4:i32 = phi %1, %3, %3, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = phi %1, 2:i32, 2:i32, 0:i32, 2:i32
%3:i32 = phi %0, 2:i32, 2:i32, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5 = block 2
%6:i32 = phi %5, 0:i32, 1:i32
%7 = block 2
%8:i32 = phi %7, 0:i32, 1:i32
%9:i32 = phi %0, 0:i32, %2, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 16:i32
%5:i32 = phi %1, 0:i32, %4, 1:i32
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32
%6 = block 5
%7 = block 4
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 1:i32, 1:i32, 0:i32, 1:i32, %8
%10:i32 = phi %1, 0:i32, %5, 1:i32, %9
%11:i32 = phi %0, 0:i32, 1:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 4:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4:i8 = phi %3, 0:i8, 1:i8, 1:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 7:i32, 4:i32, 6:i32, 5:i32
%3:i32 = phi %0, 3:i32, %2, 1:i32
%4:i32 = or 112:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 23:i32
%4:i32 = phi %0, 23:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = var (001xx100) (zn)
%4:i8 = phi %2, %3, 20:i8
%5:i8 = phi %1, %4, 0:i8, 20:i8
%6:i8 = phi %0, 20:i8, %5, 36:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4:i8 = phi %3, 1:i8, 0:i8, 0:i8
%5:i8 = phi %0, %2, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 7
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8
%3 = block 4
%4:i8 = phi %3, 1:i8, 1:i8, 0:i8, 0:i8
%5:i8 = phi %0, %2, 1:i8, 1:i8, %4, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i64 = var
%2:i1 = ne 0:i64, %1
%3:i8 = zext %2
%4 = block 2
%5 = block 3
%6:i8 = phi %5, %3, %3, 1:i8
%7:i8 = phi %4, %6, %3
%8:i8 = phi %0, %3, %3, %7, %3, %3, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 3:i32, 3:i32, 3:i32, 0:i32
%4:i32 = phi %1, 3:i32, %3
%5 = block 3
%6:i32 = phi %5, 2:i32, 3:i32, 3:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, 2:i32, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = phi %0, 0:i1, 0:i1, 0:i1, 1:i1, 0:i1, 0:i1
%2:i32 = var
%3:i32 = phi %0, 0:i32, 0:i32, 0:i32, %2, 0:i32, 0:i32
%4:i1 = ult %3, 9:i32
%5:i1 = and %1, %4
%6:i32 = select %5, %3, 9:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 9:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 14:i32, 4:i32, 0:i32
%4:i32 = phi %1, 14:i32, %3, 14:i32
%5:i32 = phi %0, 14:i32, %4, 14:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, 1:i32, %3
%5 = block 2
%6:i32 = phi %5, 0:i32, 1:i32
%7:i32 = phi %0, 0:i32, 1:i32, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = var (0000000x) (n)
%3:i8 = xor 1:i8, %2
%4:i8 = var (0000000x) (n)
%5:i8 = xor 1:i8, %4
%6:i8 = phi %1, 0:i8, 0:i8, 0:i8, %3, %5
%7:i8 = phi %0, %6, 0:i8, 0:i8, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, %4, 0:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 3:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 3
%3 = block 5
%4:i32 = phi %3, 340:i32, 340:i32, 340:i32, 340:i32, 339:i32
%5:i32 = phi %2, %4, 97:i32, 96:i32
%6:i32 = phi %1, %5, %5, %4
%7:i32 = phi %0, %6, 285:i32, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (0000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = and 524280:i64, %1
%3:i64 = addnw 72:i64, %2
%4:i64 = phi %0, 176:i64, 96:i64, 88:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 23:i32
%4:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = or 4:i32, %2
%5:i32 = phi %0, %3, %3, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = sdivexact %0, 608:i64
%2:i1 = var
%3:i64 = select %2, 1:i64, %1
%4:i64 = addnsw %1, %3
%5:i1 = ult 30340039594917025:i64, %4
%6:i1 = ult %4, %1
%7:i1 = or %5, %6
%8:i64 = select %7, 30340039594917025:i64, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var (00000000000xxxxx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 2:i32, 1:i32, 2:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 2:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 917504:i32, 786432:i32, 655360:i32
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, %2, %3
%5:i32 = or 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 3
%3:i32 = phi %2, 2:i32, 3:i32, 0:i32
%4:i32 = phi %1, 1:i32, 4:i32, 5:i32, 0:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i1 = ne 0:i64, %0
%2 = block 2
%3:i256 = var (000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xxxx) (n)
%4:i256 = shlnw %3, 227:i256
%5:i256 = phi %2, 0:i256, %4
%6:i256 = select %1, 3235193600058076775360041810442355680836457330704868697732433229905920:i256, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32, 1:i32, 1:i32
%6:i32 = phi %1, 1:i32, 1:i32, 1:i32, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 4:i32, 1:i32, 1:i32
%3:i32 = phi %0, 4:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 0:i8
%7:i8 = phi %1, %3, %6
%8 = block 2
%9:i1 = var
%10:i8 = zext %9
%11:i8 = phi %8, %10, %7
%12:i8 = phi %0, %7, %11, %7
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, %2, %2, %2, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = var
%3:i32 = and 1:i32, %2
%4:i32 = or 226:i32, %3
%5:i32 = phi %0, 226:i32, 228:i32, %4, 228:i32, 228:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 11
%2:i32 = phi %1, 8:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32
%3:i32 = phi %0, %2, %2, 8:i32, 8:i32, 10:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 0:i32, 7:i32, 4:i32, 6:i32, 5:i32
%3:i32 = phi %0, 3:i32, %2, 1:i32
%4:i32 = or 32:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 2:i32
%3 = block 3
%4:i1 = var
%5:i32 = zext %4
%6:i32 = phi %3, %5, 0:i32, 2:i32
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4, 1:i32
%6 = block 2
%7:i32 = phi %6, 0:i32, 1:i32
%8:i32 = phi %1, 0:i32, %5, 1:i32, %7
%9:i32 = phi %0, 0:i32, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = ult %0, 6:i32
%2:i32 = var
%3:i32 = and 15:i32, %2
%4:i32 = select %1, %0, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 2:i8, 6:i8, 2:i8
%4:i8 = phi %1, %3, 2:i8, 6:i8
%5:i8 = phi %0, 6:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
%4:i32 = addnsw 4:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 5:i32
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 7:i32
%7:i32 = phi %0, 0:i32, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 255:i32, %1
%3:i32 = or 256:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = phi %3, 2:i32, 1:i32
%5:i32 = phi %2, %4, 1:i32
%6:i32 = phi %1, 0:i32, %5, %4
%7 = block 2
%8:i32 = phi %7, 2:i32, 1:i32
%9:i32 = phi %0, 1:i32, %6, 1:i32, %8, 1:i32, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, %4, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 3
%3:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = phi %2, %3, 0:i64, 0:i64
%5:i64 = phi %1, %4, 0:i64, 0:i64
%6:i64 = phi %0, 0:i64, 0:i64, %5, 0:i64, 0:i64
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5 = block 2
%6:i32 = phi %5, 0:i32, 1:i32
%7:i32 = phi %0, 1:i32, 0:i32, %2, %4, 1:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (znp)
%4:i32 = phi %2, %3, 0:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %0, 1:i8, %2, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 7:i32
%3 = block 2
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 5:i32
%7:i32 = phi %3, 0:i32, %6
%8 = block 2
%9:i32 = var (0000000000000000000000000000000x) (n)
%10:i32 = phi %8, %9, 2:i32
%11:i32 = phi %0, 0:i32, %2, %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, %3
%5:i8 = phi %0, %4, 1:i8, %4, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (0000000000000000000000000000000000000000000000000100000x00000000) (zn)
%3 = block 2
%4:i64 = var (0000000000000000000000000000000000000000000000000000000x00000000) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 32768:i64, %5
%7:i64 = phi %0, %6, %5
%8:i64 = or 512:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i1 = var
%2:i8 = zext %1
%3 = block 11
%4:i1 = var
%5:i8 = zext %4
%6 = block 10
%7:i8 = var (0000000x) (n)
%8 = block 10
%9:i8 = var (0000000x) (n)
%10:i8 = phi %6, %7, %9, %9, %9, %9, %9, %9, %9, %9, %9
%11:i8 = phi %3, %5, %10, %10, %10, 0:i8, %10, 0:i8, 0:i8, %10, %10, %10
%12:i8 = phi %0, %2, %11, %11, %11, 0:i8, %11, 0:i8, 0:i8, %11, %11, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 6:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 8193:i32, 1:i32
%3:i32 = or 67108864:i32, %2
%4:i32 = or 134217728:i32, %2
%5:i32 = phi %0, %3, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = zext %1
%3 = block 2
%4:i32 = phi %3, 2:i32, 0:i32
%5:i1 = var
%6:i32 = zext %5
%7:i32 = phi %0, %2, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 4:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, 1:i32, %3
%5:i32 = phi %0, 0:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 61
%1 = block 5
%2:i1 = var
%3:i32 = select %2, 100:i32, 52:i32
%4:i32 = phi %1, 148:i32, 124:i32, 172:i32, %3, 76:i32
%5 = block 5
%6:i1 = var
%7:i32 = select %6, 98:i32, 50:i32
%8:i32 = phi %5, 146:i32, 122:i32, 170:i32, %7, 74:i32
%9 = block 5
%10:i1 = var
%11:i32 = select %10, 99:i32, 51:i32
%12:i32 = phi %9, 147:i32, 123:i32, 171:i32, %11, 75:i32
%13 = block 5
%14:i1 = var
%15:i32 = select %14, 97:i32, 49:i32
%16:i32 = phi %13, 145:i32, 121:i32, 169:i32, %15, 73:i32
%17 = block 5
%18:i1 = var
%19:i32 = select %18, 96:i32, 48:i32
%20:i32 = phi %17, 144:i32, 120:i32, 168:i32, %19, 72:i32
%21 = block 5
%22:i1 = var
%23:i32 = select %22, 94:i32, 46:i32
%24:i32 = phi %21, 142:i32, 118:i32, 166:i32, %23, 70:i32
%25 = block 5
%26:i1 = var
%27:i32 = select %26, 95:i32, 47:i32
%28:i32 = phi %25, 143:i32, 119:i32, 167:i32, %27, 71:i32
%29 = block 5
%30:i1 = var
%31:i32 = select %30, 93:i32, 45:i32
%32:i32 = phi %29, 141:i32, 117:i32, 165:i32, %31, 69:i32
%33 = block 5
%34:i1 = var
%35:i32 = select %34, 108:i32, 60:i32
%36:i32 = phi %33, 156:i32, 132:i32, 180:i32, %35, 84:i32
%37 = block 5
%38:i1 = var
%39:i32 = select %38, 106:i32, 58:i32
%40:i32 = phi %37, 154:i32, 130:i32, 178:i32, %39, 82:i32
%41 = block 5
%42:i1 = var
%43:i32 = select %42, 107:i32, 59:i32
%44:i32 = phi %41, 155:i32, 131:i32, 179:i32, %43, 83:i32
%45 = block 5
%46:i1 = var
%47:i32 = select %46, 105:i32, 57:i32
%48:i32 = phi %45, 153:i32, 129:i32, 177:i32, %47, 81:i32
%49 = block 5
%50:i1 = var
%51:i32 = select %50, 104:i32, 56:i32
%52:i32 = phi %49, 152:i32, 128:i32, 176:i32, %51, 80:i32
%53 = block 5
%54:i1 = var
%55:i32 = select %54, 103:i32, 55:i32
%56:i32 = phi %53, 151:i32, 127:i32, 175:i32, %55, 79:i32
%57 = block 5
%58:i1 = var
%59:i32 = select %58, 102:i32, 54:i32
%60:i32 = phi %57, 150:i32, 126:i32, 174:i32, %59, 78:i32
%61 = block 5
%62:i1 = var
%63:i32 = select %62, 101:i32, 53:i32
%64:i32 = phi %61, 149:i32, 125:i32, 173:i32, %63, 77:i32
%65 = block 5
%66:i1 = var
%67:i32 = select %66, 92:i32, 44:i32
%68:i32 = phi %65, 140:i32, 116:i32, 164:i32, %67, 68:i32
%69 = block 5
%70:i1 = var
%71:i32 = select %70, 90:i32, 42:i32
%72:i32 = phi %69, 138:i32, 114:i32, 162:i32, %71, 66:i32
%73 = block 5
%74:i1 = var
%75:i32 = select %74, 91:i32, 43:i32
%76:i32 = phi %73, 139:i32, 115:i32, 163:i32, %75, 67:i32
%77 = block 5
%78:i1 = var
%79:i32 = select %78, 89:i32, 41:i32
%80:i32 = phi %77, 137:i32, 113:i32, 161:i32, %79, 65:i32
%81 = block 5
%82:i1 = var
%83:i32 = select %82, 88:i32, 40:i32
%84:i32 = phi %81, 136:i32, 112:i32, 160:i32, %83, 64:i32
%85 = block 5
%86:i1 = var
%87:i32 = select %86, 87:i32, 39:i32
%88:i32 = phi %85, 135:i32, 111:i32, 159:i32, %87, 63:i32
%89 = block 5
%90:i1 = var
%91:i32 = select %90, 86:i32, 38:i32
%92:i32 = phi %89, 134:i32, 110:i32, 158:i32, %91, 62:i32
%93 = block 5
%94:i1 = var
%95:i32 = select %94, 85:i32, 37:i32
%96:i32 = phi %93, 133:i32, 109:i32, 157:i32, %95, 61:i32
%97:i32 = phi %0, %4, %8, %12, %16, %20, %24, %28, %32, %36, %40, %44, %48, %52, %56, %60, %64, %68, %72, %76, %80, %84, %88, %92, %96, 36:i32, 34:i32, 35:i32, 33:i32, 32:i32, 28:i32, 24:i32, 30:i32, 31:i32, 26:i32, 27:i32, 25:i32, 29:i32, 23:i32, 22:i32, 21:i32, 20:i32, 10:i32, 16:i32, 17:i32, 13:i32, 11:i32, 12:i32, 18:i32, 19:i32, 14:i32, 15:i32, 9:i32, 1:i32, 7:i32, 8:i32, 4:i32, 2:i32, 3:i32, 5:i32, 6:i32, 0:i32
infer %97

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 4:i32, %3, 4:i32
%5:i32 = phi %0, %4, 3:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = var
%2:i64 = add 1:i64, %1
%3:i64 = and 4294967295:i64, %2
%4:i64 = urem %0, %3
infer %4

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 4
%2:i32 = phi %1, 10:i32, 9:i32, 31:i32, 31:i32
%3:i32 = phi %0, 31:i32, %2, 19:i32, 18:i32, 16:i32, 17:i32, 15:i32, 2:i32, 5:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i32 = phi %1, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, 7:i32
%3:i32 = phi %0, %2, 8:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = select %1, 2557:i32, 1707:i32
%3 = block 2
%4:i32 = select %1, 2556:i32, 1706:i32
%5:i32 = phi %3, %2, %4
%6 = block 2
%7:i32 = phi %6, %2, %4
%8:i32 = phi %0, %2, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i64 = select %0, 8:i64, 4:i64
%2:i32 = var
%3:i64 = zext %2
%4:i64 = addnw %1, %3
%5:i64 = addnsw 18446744073709551615:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 4:i32, %2, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 11:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2:i32 = var (000000000000000000000000000000xx) (zn)
%3:i32 = phi %0, %2, 0:i32
%4:i64 = zext %3
%5:i64 = shl 1:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2 = block 3
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, %4, %5, 0:i8
%7:i8 = var (0000000x) (n)
%8:i8 = phi %2, %6, %7, 0:i8
%9:i8 = phi %0, %1, %8, 0:i8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = xor 1:i32, %2
%4:i32 = phi %1, %3, 1:i32
%5:i32 = var (0000xxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%6:i32 = and 1:i32, %5
%7:i32 = xor 1:i32, %6
%8:i32 = phi %0, %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %3, %5
%7:i32 = or 1:i32, %6
%8:i32 = phi %0, %6, %6, %6, %6, %6, %6, %7, %7, %7, %7, %7, %7, %6, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (00000000000000000000000000000x0x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 0:i32, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 3:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %3, %4, 2:i32
%6:i32 = phi %0, 2:i32, 1:i32, 1:i32, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = and 3:i32, %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 18
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %3, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = and 1:i32, %1
%3:i32 = addnw 1:i32, %2
%4 = block 4
%5:i32 = var
%6:i1 = eq 2:i32, %5
%7:i8 = var (0000000x) (n)
%8:i32 = zext %7
%9:i32 = select %6, %8, 2:i32
%10:i32 = phi %0, 0:i32, %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 945:i32, 1743:i32
%4:i32 = phi %1, 946:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 932:i32, 1743:i32
%8:i32 = phi %5, 933:i32, %7
%9:i32 = phi %0, 946:i32, %4, 933:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4 = block 2
%5 = block 3
%6:i8 = var (0000000x) (n)
%7:i8 = phi %4, %6, %2
%8:i8 = phi %3, %7, %2
%9:i8 = phi %0, %2, %8, %2
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, 0:i32, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 4
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 16384:i32, 1024:i32, 16384:i32
%3:i32 = phi %0, 0:i32, %2, %2, %2, 128:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1024:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 1:i32, %4, 0:i32
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, 0:i8, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 1:i8, %4
%6:i8 = phi %0, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 34
%1 = block 3
%2 = block 5
%3:i32 = phi %2, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32
%5 = block 2
%6 = block 4
%7:i32 = phi %6, 1:i32, 0:i32, 0:i32, 0:i32
%8:i32 = phi %5, %7, 1:i32
%9:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %4, 1:i32, 1:i32, %8, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %3, %4, 0:i32
%6:i32 = phi %2, %5, 0:i32
%7:i32 = phi %1, %6, %5
%8:i32 = phi %0, 0:i32, %7, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 6
%2 = block 4
%3:i32 = phi %2, 2:i32, 2:i32, 0:i32, 1:i32
%4 = block 2
%5 = block 4
%6 = block 3
%7:i32 = phi %6, 2:i32, 2:i32, 0:i32
%8:i32 = phi %5, 2:i32, %7, 2:i32, 2:i32
%9:i32 = phi %4, 1:i32, %8
%10:i32 = phi %1, 1:i32, %3, %9, 1:i32, 1:i32, 2:i32
%11:i32 = phi %0, 0:i32, %10, %8, 2:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 1:i8, 1:i8, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 933:i32, 1743:i32
%4:i32 = phi %1, 933:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 946:i32, 1743:i32
%8:i32 = phi %5, 946:i32, %7
%9:i32 = phi %0, 932:i32, %4, 945:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 21
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8
%5 = block 2
%6:i8 = phi %5, 0:i8, %4
%7:i8 = phi %0, 0:i8, %4, %4, %6, %4, %4, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = phi %1, %2, 0:i32, 1:i32
%4:i32 = phi %0, 0:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6 = block 3
%7:i8 = var (0000000x) (n)
%8:i8 = phi %4, %5, %7
%9:i8 = phi %3, %8, %2
%10:i8 = phi %0, %2, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 2:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2 = block 9
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 2
%2:i32 = phi %1, 5:i32, 4:i32
%3:i32 = phi %0, 3:i32, 3:i32, 1:i32, 1:i32, 0:i32, 3:i32, 5:i32, 5:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i32 = var (00000000000000000xxxxx0000000000) (n)
%3:i32 = select %1, 0:i32, %2
%4:i32 = phi %0, 31744:i32, 31744:i32, 0:i32, %3
%5:i8 = var (0000000x) (n)
%6:i32 = zext %5
%7:i32 = shlnw %6, 15:i32
%8:i32 = or %4, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 314
%1:i32 = phi %0, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 0:i32, 1:i32, 1:i32, 1:i32, 4294967295:i32, 4294967295:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 0:i32, 0:i32, 0:i32, 0:i32, 4294967295:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32
%2:i32 = add 1:i32, %1
%3:i24 = var (0000000000000000xxxxxxxx) (n)
%4:i24 = and 1:i24, %3
%5:i32 = zext %4
%6:i32 = add %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 5
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8, 0:i8
%6:i8 = phi %1, %5, 0:i8
%7:i8 = and 1:i8, %6
%8:i8 = xor 1:i8, %7
%9:i8 = phi %0, %8, %6, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i1 = var
%2:i32 = select %1, 3035:i32, 300:i32
%3 = block 6
%4:i32 = phi %3, 1548:i32, 1547:i32, 1549:i32, 1645:i32, 0:i32, 1528:i32
%5:i32 = phi %0, 1645:i32, 1645:i32, 1528:i32, 1528:i32, 1528:i32, %2, 1528:i32, 1528:i32, 1528:i32, 1548:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 0:i32, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = var (000000000000000000000000000000x1) (zn)
%3:i32 = phi %1, %2, 1:i32, 1:i32, 2:i32
%4 = block 4
%5:i32 = var (000000000000000000000000000000x1) (zn)
%6:i32 = phi %4, %5, 1:i32, 1:i32, 2:i32
%7:i32 = phi %0, 2:i32, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7 = block 3
%8 = block 5
%9 = block 2
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = phi %8, 1:i32, 1:i32, 0:i32, 1:i32, %10
%12 = block 2
%13:i32 = phi %12, 1:i32, 0:i32
%14:i32 = phi %7, 0:i32, %11, %13
%15 = block 2
%16 = block 2
%17 = block 2
%18:i32 = var (0000000000000000000000000000000x) (n)
%19:i32 = phi %16, 0:i32, %18
%20:i32 = phi %15, 0:i32, %19
%21:i32 = phi %0, 0:i32, %2, %6, %14, %20
infer %21

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (0000000000000000000000000000000000000000000001x00000000000000000) (zn)
%3 = block 2
%4:i64 = var (0000000000000000000000000000000000000000000000x00000000000000000) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 524288:i64, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 4
%4:i32 = phi %3, 0:i32, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 5
%3 = block 9
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4, 1:i32, 1:i32, 1:i32
%6:i32 = phi %1, %5, 1:i32, 1:i32, 1:i32
%7:i32 = phi %0, %6, 1:i32, 1:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ctlz %0
%2:i64 = subnsw 64:i64, %1
%3:i64 = addnsw 3:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 4
%4:i32 = var (0000000000000000000000000000001x) (zn)
%5:i32 = var (0000000000000000000000000000010x) (zn)
%6:i32 = phi %3, %4, %4, %5, %2
%7:i32 = phi %0, %2, %6, 0:i32
%8:i32 = or 32:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8
%5:i8 = phi %0, %4, %3, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 3:i32, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (000000000000000000000000000001x0) (zn)
%3:i32 = var (000000000000000000001000000000x0) (zn)
%4:i32 = var (000000000000000000010000000000x0) (zn)
%5:i32 = phi %1, %2, %3, %4
%6:i32 = or 1:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var (0000000x) (n)
%2:i8 = var (0000000x) (n)
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %3, 1:i8, %4
%6:i8 = phi %0, %1, %2, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 5:i32, 1:i32, 5:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8
%3 = block 2
%4 = block 5
%5 = block 4
%6:i8 = phi %5, 0:i8, 1:i8, 1:i8, 1:i8
%7:i8 = phi %4, %6, 0:i8, %6, %6, %6
%8:i8 = phi %3, %7, %6
%9:i8 = phi %0, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 3
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = var (0000000x) (n)
%8:i8 = phi %4, %6, %7, %6
%9:i8 = phi %1, %3, %8
%10:i8 = phi %0, %9, %8
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 946:i32, 1743:i32
%3:i32 = phi %0, 946:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 2:i32, 4:i32, 2:i32, 4:i32
%3:i32 = phi %0, %2, 0:i32
%4:i32 = var
%5:i1 = ne 0:i32, %4
%6:i32 = zext %5
%7:i32 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 3
%3 = block 3
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %2, 2:i32, 0:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, 1:i32, 1:i32, %6, 1:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 5:i32
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %5, %6, 7:i32
%8:i32 = phi %1, 0:i32, %4, %7
%9:i32 = phi %0, 0:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 1:i8, 0:i8, 1:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, 0:i32, 1:i32, 1:i32, %3
%5:i32 = phi %1, %4, 1:i32
%6:i32 = phi %0, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 2:i32, 2:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 0:i32, 3:i32, 1:i32, 6:i32, 4:i32, 2:i32, 5:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 6
%2 = block 3
%3:i32 = phi %2, 234:i32, 234:i32, 230:i32
%4:i32 = phi %1, 232:i32, 233:i32, %3, 234:i32, 234:i32, 230:i32
%5:i32 = phi %0, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, %4, 230:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3, 1:i8, %3
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4 = block 2
%5:i8 = phi %4, 0:i8, 1:i8
%6 = block 2
%7:i8 = phi %6, 0:i8, 1:i8
%8 = block 2
%9:i8 = phi %8, 0:i8, 1:i8
%10:i8 = phi %1, %3, %5, %7, %9, 0:i8
%11:i8 = phi %0, 0:i8, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 4:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 2:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %3, 0:i32, %5, %7
%9:i32 = phi %0, 1:i32, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i16 = var (000000x000001000) (zn)
%3 = block 2
%4:i1 = var
%5:i16 = select %4, 0:i16, 512:i16
%6:i16 = phi %3, %5, 0:i16
%7:i16 = select %1, %2, %6
%8:i16 = or 256:i16, %7
%9:i16 = phi %0, %8, %7, %6, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (00000000000000000000000000000xxx) (zn)
%4:i32 = phi %2, 0:i32, %3
%5:i1 = var
%6:i32 = select %5, 1:i32, 2:i32
%7:i32 = phi %1, %4, %6
%8:i32 = phi %0, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 4
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000x000) (n)
%1:i32 = shl 1:i32, %0
infer %1

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 0:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %2, %3, %2
%5:i32 = addnsw 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i64 = var
%2:i64 = var
%3:i64 = phi %0, %1, %2, 0:i64, 0:i64, 0:i64, 0:i64
%4:i1 = ne 0:i64, %3
%5 = block 2
%6:i1 = var
%7 = block 6
%8:i8 = phi %7, 1:i8, 0:i8, 1:i8, 0:i8, 0:i8, 1:i8
%9:i8 = select %6, %8, 0:i8
%10:i8 = phi %5, %9, %8
%11:i8 = select %4, 0:i8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = phi %1, 1:i1, 0:i1
%3:i32 = select %2, 4:i32, 1:i32
%4 = block 6
%5:i32 = select %2, 12:i32, 11:i32
%6:i32 = select %2, 5:i32, 2:i32
%7:i32 = phi %4, 6:i32, 8:i32, 7:i32, %5, %6, 0:i32
%8:i32 = phi %0, 10:i32, 9:i32, 1:i32, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var
%2:i1 = eq 0:i32, %1
%3:i1 = var
%4:i32 = zext %3
%5:i32 = select %3, 2:i32, 1:i32
%6:i32 = select %2, %4, %5
%7 = block 3
%8:i32 = addnw 1:i32, %6
%9:i32 = var (0000000000000000000000000000000x) (n)
%10:i32 = addnw %6, %9
%11:i32 = phi %7, %6, %8, %10
%12 = block 3
%13:i32 = addnsw 1:i32, %11
%14:i32 = var (0000000000000000000000000000000x) (n)
%15:i32 = addnsw %11, %14
%16:i32 = phi %12, %11, %13, %15
%17 = block 3
%18:i32 = add 1:i32, %16
%19:i32 = var (0000000000000000000000000000000x) (n)
%20:i32 = add %16, %19
%21:i32 = phi %17, %16, %18, %20
%22:i32 = phi %0, %6, %11, %16, %21
infer %22

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = var (0000000x) (n)
%4:i8 = phi %1, %2, %3, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 1:i8, %3
%5:i8 = phi %1, 1:i8, %4
%6:i8 = phi %0, %5, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000010100xxxx) (zn)
%5:i32 = phi %2, 327:i32, %4
%6:i32 = phi %1, %5, 394:i32, 394:i32, 393:i32, 393:i32
%7 = block 2
%8:i1 = var
%9:i32 = select %8, 393:i32, 375:i32
%10:i32 = phi %7, %9, 0:i32
%11 = block 5
%12:i32 = phi %11, 377:i32, 376:i32, 0:i32, 0:i32, 0:i32
%13:i32 = phi %0, %6, %10, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var
%2:i64 = var
%3:i1 = eq %1, %2
%4:i64 = select %3, 7:i64, 8:i64
%5:i64 = var
%6:i64 = var
%7:i1 = eq %5, %6
%8:i64 = select %7, 7:i64, 8:i64
%9 = block 2
%10 = block 2
%11:i64 = phi %10, 1:i64, 0:i64
%12:i64 = phi %9, %11, 0:i64
%13:i64 = phi %0, %4, %8, %12, %11
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 2:i32, 0:i32
%4:i32 = zext %2
%5:i32 = phi %1, %3, %4, 0:i32, 0:i32
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 1:i32, 1:i32, 0:i32
%5:i32 = phi %0, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 10
%2:i32 = phi %1, 4:i32, 3:i32, 4:i32, 2:i32, 4:i32, 4:i32, 4:i32, 4:i32, 4:i32, 4:i32
%3:i32 = phi %0, %2, 4:i32, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7 = block 2
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10:i32 = phi %7, 0:i32, %9
%11:i32 = phi %0, 0:i32, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (00000000000000000000000000000x0x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 2:i32, 2:i32, %3, 2:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 4
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4, 1:i32
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4 = block 2
%5:i8 = phi %4, 1:i8, 0:i8
%6:i8 = phi %3, %5, %5, 0:i8
%7:i8 = phi %0, %2, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (000000000000000000000000000000000000000000000000000000000000100x) (zn)
%1:i64 = shl 1:i64, %0
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = addnw %1, %2
%4:i64 = addnsw 18446744073709551615:i64, %3
%5:i64 = subnsw 0:i64, %1
%6:i64 = and %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = and 2301:i32, %1
%3:i32 = addnw 112:i32, %2
%4:i32 = and 2296:i32, %1
%5:i32 = addnw 126:i32, %4
%6:i32 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 14:i32
%4:i32 = phi %0, 1:i32, 0:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i72 = var (00000000000000000000000000000000000000000000000000000000000000000x000000) (n)
%2:i1 = eq 0:i72, %1
%3 = block 3
%4:i32 = phi %3, 1:i32, 0:i32, 1:i32
%5:i32 = select %2, 0:i32, %4
%6:i32 = phi %0, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var (0000000000000000000000000000000000000000000000000000000000000xxx) (n)
%2:i64 = xor 1:i64, %1
%3:i64 = phi %0, 8:i64, 0:i64, %2
%4:i32 = trunc %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 56
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4 = block 26
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %1, 0:i8, %3, %6, 0:i8
%8:i8 = phi %0, %7, %3, %3, 0:i8, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = var (000000000000000000000xx000000000) (znp)
%2:i32 = var (00000000000000000000000x00000000) (n)
%3:i32 = xor 256:i32, %2
%4:i32 = or %1, %3
%5:i32 = phi %0, %4, %3, %3, %4
%6:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%7:i32 = and 15:i32, %6
%8:i32 = shlnw %7, 4:i32
%9:i32 = or %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 8:i32
%4:i32 = phi %1, %3, 8:i32
%5:i32 = phi %0, 8:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i32 = phi %1, 36:i32, 33:i32, 21:i32
%3:i32 = phi %0, 0:i32, %2, %2, %2, 9:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 17:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = var (0000000x) (n)
%6:i8 = phi %2, %4, %5, %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %1, %6, %8
%10:i1 = var
%11:i8 = zext %10
%12:i8 = phi %0, %9, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, %5, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i8 = var
%4:i8 = and 1:i8, %3
%5:i8 = phi %1, 0:i8, %4, %4
%6:i8 = phi %0, 0:i8, %5, 0:i8, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = select %1, %2, 4:i32
%4:i32 = addnw 4:i32, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i32 = phi %1, 4:i32, 3:i32, 0:i32
%3:i32 = phi %0, %2, %2, %2, 4:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i16 = var (000000x000000000) (n)
%4:i16 = var (000000x00000x000) (n)
%5:i16 = phi %1, 0:i16, %3, %4
%6:i16 = or 256:i16, %5
%7:i16 = phi %0, %6, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i1 = phi %1, 1:i1, 0:i1, 0:i1
%3:i32 = phi %1, 0:i32, 352:i32, 353:i32
%4:i32 = select %2, 347:i32, %3
%5:i32 = phi %0, 0:i32, 354:i32, 356:i32, 355:i32, 348:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %4, 0:i32, 0:i32, 0:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 217:i32, 216:i32
%4:i32 = phi %1, 216:i32, %3
%5:i32 = phi %0, %4, %4, 216:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 3
%2 = block 4
%3:i32 = var (000000000000000000000000000000x0) (n)
%4:i32 = phi %2, 1:i32, 1:i32, 1:i32, %3
%5:i1 = var
%6:i32 = select %5, 2:i32, 0:i32
%7:i32 = phi %1, %4, 0:i32, %6
%8:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, %7, 1:i32, 1:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2, 0:i1, 0:i1
%4:i8 = zext %3
%5:i8 = var
%6:i8 = and 1:i8, %5
%7:i8 = xor 1:i8, %6
%8:i8 = phi %0, %4, %4, %4, %4, %7, %4
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = shl 8:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = phi %0, %3, 7:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 1:i32, %1
%3:i64 = zext %1
%4:i64 = select %2, 0:i64, %3
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3, 0:i32, 1:i32
%5:i32 = phi %0, 0:i32, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, 1:i32, 0:i32, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 0:i8
%7:i8 = phi %3, 0:i8, %6, 0:i8
%8:i8 = phi %0, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, %4, 2:i32
%6:i32 = phi %1, %5, 2:i32
%7:i32 = phi %0, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 17:i32, 1:i32
%3:i32 = or 4:i32, %2
%4:i32 = or 260:i32, %2
%5:i32 = phi %0, %3, %4, %2
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i32 = zext %2
%4 = block 7
%5:i32 = phi %4, 1:i32, %3, %3, %3, %3, %3, %3
%6:i32 = phi %1, %3, %5, %3
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %1, %3, %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %0, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 16:i32, 0:i32
%4:i32 = or 32:i32, %3
%5:i32 = phi %1, %4, %3
%6:i32 = or 2:i32, %5
%7:i32 = phi %0, %5, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, 0:i64, %3
%5:i64 = phi %0, %4, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i16 = var (00000000000000xx) (zn)
%3:i16 = var (0000000000000x00) (n)
%4:i16 = or %2, %3
%5:i16 = or 8:i16, %4
%6:i16 = phi %0, %4, %5
%7:i1 = ult 511:i16, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 262:i32, 263:i32
%4:i32 = phi %1, 260:i32, %3, 261:i32
%5 = block 3
%6:i1 = var
%7:i32 = select %6, 282:i32, 283:i32
%8:i32 = phi %5, 280:i32, %7, 281:i32
%9:i32 = phi %0, 412:i32, 412:i32, 412:i32, 412:i32, %4, %8, 412:i32, 412:i32, 412:i32, 412:i32, 412:i32, 412:i32, 412:i32, 412:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 8:i32, 16:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 4293:i32, 4293:i32, 4292:i32, 4292:i32
%3:i32 = phi %0, %2, 4292:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 1:i8, %3
%5:i8 = var
%6:i8 = var (0000000x) (n)
%7:i8 = and %5, %6
%8:i8 = phi %1, %4, %7
%9:i8 = phi %0, 0:i8, 0:i8, %8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 1:i32, %7
%9:i32 = phi %0, 0:i32, %4, 1:i32, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 0:i32, %7
%9:i32 = phi %0, 0:i32, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %3, %4, 0:i32
%6:i32 = phi %0, 1:i32, 0:i32, %2, 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 9
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4 = block 2
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %3, %6, 0:i8
%8:i8 = phi %0, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 0:i32, 2:i32, 0:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 7
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 1:i8, %4, %4, %4, %4, %4, %4
%6:i8 = phi %0, %5, 1:i8, 0:i8, 1:i8, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 4:i32, 8:i32, 4:i32
%3:i32 = phi %0, 4:i32, 8:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i64 = phi %2, 1:i64, 0:i64
%4:i64 = phi %1, %3, 0:i64
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = shl 2:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = phi %0, %3, 31:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 4:i32, 3:i32
%4:i32 = phi %1, 3:i32, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 8
%3 = block 3
%4:i1 = var
%5:i32 = select %4, 1308:i32, 1309:i32
%6:i32 = select %4, 944:i32, 945:i32
%7:i32 = select %4, 82:i32, 85:i32
%8:i32 = phi %3, %5, %6, %7
%9:i32 = phi %2, %8, 98:i32, %8, 97:i32, 952:i32, 951:i32, 98:i32, 97:i32
%10 = block 2
%11:i32 = phi %10, %9, %8
%12:i32 = phi %1, %9, %11
%13:i32 = phi %0, %12, %8
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 0:i32
%5:i32 = phi %1, %4, 0:i32
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, 0:i32, %4, 2:i32
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000x00x) (zn)
%3:i32 = phi %1, %2, 5:i32
%4:i32 = phi %0, 1:i32, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = mulnw 48:i64, %1
%3:i64 = phi %0, %2, 0:i64
%4:i1 = var
%5:i64 = zext %4
%6:i64 = shlnw %5, 4:i64
%7:i64 = addnsw %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4 = block 6
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, %5, 0:i8
%7:i8 = phi %2, %6, %6, 1:i8
%8:i8 = phi %1, %7, %6, %6, %6
%9:i8 = phi %0, %8, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 8
%2:i32 = phi %1, 2:i32, 3:i32, 1:i32, 2:i32, 1:i32, 2:i32, 1:i32, 2:i32
%3:i32 = phi %0, 3:i32, 2:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, %2, 0:i32
%5:i32 = phi %0, 1:i32, %2, %4, 1:i32, 1:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5:i32 = phi %0, 0:i32, %2, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 5
%3:i8 = phi %2, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8
%5 = block 2
%6:i8 = phi %5, %4, 0:i8
%7:i8 = phi %0, %4, %6, %4, %4, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (00000000000000000000000000xxxxxx) (n)
%1:i32 = subnsw 32:i32, %0
%2:i32 = subnsw 64:i32, %1
%3:i32 = var
%4:i32 = ctlz %3
%5:i32 = subnsw 32:i32, %4
%6:i1 = ult %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 314
%1:i32 = phi %0, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 0:i32, 1:i32, 1:i32, 1:i32, 4294967295:i32, 4294967295:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 0:i32, 0:i32, 0:i32, 0:i32, 4294967295:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32
%2:i24 = var (00000000000000000000000x) (n)
%3:i32 = zext %2
%4:i32 = add %1, %3
%5:i32 = add 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, %4, 2:i32
%6:i32 = phi %1, 2:i32, %5
%7:i32 = phi %0, 1:i32, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 5
%3 = block 2
%4:i8 = var (0000000x) (n)
%5 = block 2
%6:i8 = var (0000000x) (n)
%7 = block 2
%8:i8 = var (0000000x) (n)
%9 = block 2
%10:i8 = var (0000000x) (n)
%11:i8 = phi %2, %4, %6, %8, %10, 0:i8
%12:i8 = phi %1, 0:i8, %11, %11
%13 = block 5
%14 = block 2
%15:i8 = phi %14, 0:i8, %12
%16:i8 = phi %13, %12, 0:i8, 1:i8, %12, %15
%17:i8 = phi %0, %12, %16, %16, %12
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3:i32 = phi %2, 55:i32, 55:i32, 40:i32
%4:i32 = phi %1, %3, %3, %3, 40:i32
%5:i32 = phi %0, %4, 55:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 32
%1 = block 4
%2:i32 = phi %1, 6:i32, 6:i32, 1:i32, 6:i32
%3:i32 = phi %0, 1:i32, 7:i32, 1:i32, 3:i32, 3:i32, 5:i32, 6:i32, 6:i32, 6:i32, 1:i32, 1:i32, 1:i32, 6:i32, 6:i32, 6:i32, 5:i32, 1:i32, 1:i32, 6:i32, 6:i32, 1:i32, 1:i32, 6:i32, %2, 1:i32, 6:i32, 6:i32, 6:i32, 1:i32, 1:i32, 0:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 4:i32, 5:i32
%3:i32 = phi %0, 0:i32, 3:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i32 = zext %2
%4:i32 = phi %1, %3, 2:i32
%5:i32 = phi %0, 0:i32, %4, 1:i32, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 1:i8, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i1 = var
%3:i32 = select %2, 7841:i32, 1786:i32
%4:i32 = select %1, 7838:i32, %3
%5:i32 = select %2, 7566:i32, 1751:i32
%6:i32 = select %1, 7531:i32, %5
%7:i32 = select %2, 8036:i32, 1841:i32
%8:i32 = select %1, 8001:i32, %7
%9:i32 = phi %0, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4 = block 2
%5 = block 2
%6:i8 = var (0000000x) (n)
%7:i8 = phi %4, %6, 1:i8
%8:i8 = phi %1, %3, %7, %7
%9:i8 = phi %0, 1:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 16:i32, 0:i32
%3:i32 = or 4:i32, %2
%4:i32 = or 260:i32, %2
%5:i32 = phi %0, %3, %4, %2
%6:i32 = or 32:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, 2:i32, %4
%6:i32 = phi %1, 2:i32, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 0:i32, %7
%9:i32 = phi %0, 2:i32, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 4292:i32, 4293:i32, 4293:i32, 4292:i32, 4292:i32
%3:i32 = phi %0, %2, 4292:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 0:i8, %4
%6:i8 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 208:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 0:i32, 3:i32, 2:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i32 = var (000000000000000000000000xxxxxxxx) (n)
%3:i32 = and 7:i32, %2
%4:i32 = var (00000000000000000000000000xxxxxx) (n)
%5:i32 = or 39:i32, %4
%6:i32 = phi %1, 0:i32, %3, %5, 0:i32, 0:i32
%7:i32 = or 64:i32, %6
%8:i32 = or 128:i32, %6
%9:i32 = phi %0, %6, %7, %8, %6, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 2:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 19
%2:i32 = phi %1, 36:i32, 38:i32, 37:i32, 47:i32, 40:i32, 39:i32, 47:i32, 45:i32, 42:i32, 41:i32, 43:i32, 44:i32, 47:i32, 47:i32, 47:i32, 48:i32, 47:i32, 46:i32, 47:i32
%3:i32 = phi %0, 47:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i8 = xor 1:i8, %2
%4:i8 = var
%5:i8 = and 1:i8, %4
%6:i8 = xor 1:i8, %5
%7:i8 = var
%8:i8 = and 1:i8, %7
%9:i8 = xor 1:i8, %8
%10:i8 = var
%11:i8 = and 1:i8, %10
%12:i8 = xor 1:i8, %11
%13:i8 = var
%14:i8 = and 1:i8, %13
%15:i8 = xor 1:i8, %14
%16:i8 = var
%17:i8 = and 1:i8, %16
%18:i8 = xor 1:i8, %17
%19:i8 = var
%20:i8 = and 1:i8, %19
%21:i8 = xor 1:i8, %20
%22:i8 = var
%23:i8 = and 1:i8, %22
%24:i8 = xor 1:i8, %23
%25:i8 = var
%26:i8 = and 1:i8, %25
%27:i8 = xor 1:i8, %26
%28:i8 = var
%29:i8 = and 1:i8, %28
%30:i8 = xor 1:i8, %29
%31:i8 = phi %0, %3, %6, %9, %12, %15, %18, %21, %24, %27, %30, 1:i8
infer %31

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = and 18446744073709547520:i64, %1
%3:i64 = sub %1, %2
%4:i64 = phi %0, 0:i64, %3, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 3
%5:i32 = phi %4, 1:i32, 1:i32, 0:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5 = block 3
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 0:i32, %7, 1:i32
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11 = block 2
%12:i32 = phi %11, 1:i32, 0:i32
%13:i32 = phi %0, 0:i32, %4, %8, %10, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 2:i32, 3:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, %2, 1:i8
%4:i8 = phi %0, 0:i8, %3
%5:i8 = shlnw %4, 3:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = addnw %1, %2
%4:i32 = and 508:i32, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 17
%2:i32 = phi %1, 0:i32, 200:i32, 200:i32, 15:i32, 14:i32, 13:i32, 9:i32, 7:i32, 6:i32, 11:i32, 10:i32, 12:i32, 5:i32, 4:i32, 3:i32, 2:i32, 1:i32
%3:i32 = phi %0, 100:i32, 100:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4 = block 2
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %1, %3, 1:i8, %6
%8:i8 = phi %0, %7, 0:i8, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i8 = var
%1:i64 = sext %0
%2:i64 = addnsw 4294967248:i64, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i1 = var
%2:i32 = select %1, 116:i32, 115:i32
%3:i32 = select %1, 21:i32, 23:i32
%4:i32 = select %1, 113:i32, 114:i32
%5:i32 = select %1, 233:i32, 234:i32
%6 = block 3
%7:i32 = select %1, 19:i32, 22:i32
%8:i32 = select %1, 24:i32, 19:i32
%9:i32 = select %1, 22:i32, 19:i32
%10:i32 = phi %6, %7, %8, %9
%11:i32 = phi %0, %2, %3, %4, %5, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 11
%2:i32 = phi %1, 8:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32
%3:i32 = phi %0, %2, %2, 8:i32, 8:i32, 10:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32, 12:i32
%4:i32 = shl 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32, 0:i32, 0:i32
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, 1:i8
%4:i8 = phi %0, 1:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 98313:i32, 32777:i32
%3:i32 = or 131072:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%4:i64 = phi %1, %2, %3
%5:i64 = var
%6:i64 = var
%7:i64 = sub %5, %6
%8:i1 = ult %4, %7
%9:i64 = select %8, %4, %7
%10:i64 = phi %0, %9, 0:i64, %4
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8, 1:i8, 1:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i32 = subnsw 32:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = phi %0, 7:i32, 63:i32, 31:i32, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, %5, 12:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, 0:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 2:i32, %4
%6:i1 = var
%7:i32 = select %6, 1:i32, 2:i32
%8:i32 = phi %0, %5, 0:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i16 = var (00000000000000xx) (n)
%3:i32 = zext %2
%4:i32 = phi %1, %3, 1:i32
%5:i8 = var (0000000x) (n)
%6:i1 = eq 0:i8, %5
%7:i32 = select %6, %4, 0:i32
%8:i32 = phi %0, %4, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ne 2:i32, %1
%3:i8 = zext %2
%4 = block 2
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %4, %6, 0:i8
%8:i8 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i32 = phi %0, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32, 7:i32, 8:i32
%2:i32 = subnsw 8:i32, %1
%3:i32 = shlnsw %2, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = var (000000000000000000000000000000xx) (zn)
%4:i32 = phi %1, %3, 2:i32
%5:i32 = addnsw 1:i32, %4
%6:i32 = phi %0, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = phi %2, 3:i32, 2:i32
%4 = block 3
%5 = block 2
%6:i32 = var (000000000000000000000000000001xx) (zn)
%7:i32 = phi %4, 4:i32, 4:i32, %6
%8:i32 = phi %1, 0:i32, %3, 2:i32, 1:i32, 1:i32, %7
%9:i32 = phi %0, %8, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 3
%4 = block 2
%5:i32 = var (000000000000000000000000000000x0) (n)
%6:i32 = phi %3, %5, 0:i32, 2:i32
%7:i32 = phi %2, 0:i32, %6
%8:i32 = phi %1, %7, %6, 0:i32
%9:i32 = phi %0, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var
%2:i32 = zext %1
%3 = block 2
%4:i32 = phi %3, 1700:i32, %2
%5:i32 = phi %0, %2, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ult %1, 6:i32
%3:i32 = select %2, %1, 15:i32
%4 = block 18
%5:i32 = var
%6:i32 = var
%7:i32 = var
%8:i32 = phi %4, %5, 0:i32, 13:i32, 3:i32, 0:i32, %6, %7, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 14:i32
%9:i32 = and 15:i32, %8
%10:i32 = phi %0, %3, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 4
%2:i64 = phi %1, 1:i64, 2:i64, 2:i64, 1:i64
%3:i64 = phi %0, %2, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 0:i32, 13:i32, 15:i32, 15:i32
%4:i32 = phi %1, %3, 15:i32
%5:i32 = phi %0, 15:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 5
%4:i32 = var (0000000000000000000000000000000x) (n)
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %2, %4, %6, 1:i32
%8:i32 = phi %1, %7, 1:i32
%9:i32 = phi %0, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 4
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, %3, 1:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2, 0:i64
%4:i64 = var (000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%5:i64 = and 17179865088:i64, %4
%6:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00)
%7:i64 = zext %6
%8:i64 = addnw %5, %7
%9:i64 = addnsw %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2:i64 = phi %1, 1:i64, 0:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64
%3:i64 = phi %0, %2, 0:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i1 = eq 0:i64, %1
%3:i32 = var
%4:i1 = ult 2:i32, %3
%5:i1 = or %2, %4
%6 = block 2
%7:i1 = var
%8 = block 2
%9:i32 = var (00000000000000000000000000xxx0x0) (n)
%10:i32 = select %7, %9, 10:i32
%11:i32 = phi %6, 48:i32, %10
%12:i32 = select %5, %11, 10:i32
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 4
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = phi %2, %4, 1:i32, 4:i32
%6:i32 = phi %1, 0:i32, 2:i32, 3:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 125
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = phi %3, 146:i32, 72:i32
%5:i32 = phi %2, %4, 72:i32
%6:i32 = phi %1, %5, %4
%7:i32 = phi %0, 72:i32, 270:i32, 269:i32, 268:i32, 267:i32, 266:i32, 260:i32, 259:i32, 258:i32, 256:i32, 255:i32, 253:i32, 265:i32, 264:i32, 263:i32, 262:i32, 261:i32, 257:i32, 252:i32, 249:i32, 248:i32, 246:i32, 254:i32, 245:i32, 244:i32, 243:i32, 240:i32, 239:i32, 251:i32, 238:i32, 242:i32, 241:i32, 237:i32, 236:i32, 235:i32, 250:i32, 234:i32, 233:i32, 232:i32, 200:i32, 144:i32, 103:i32, 102:i32, 101:i32, 101:i32, %6, 143:i32, 142:i32, 105:i32, 141:i32, 148:i32, 145:i32, 140:i32, 139:i32, 138:i32, 137:i32, 135:i32, 134:i32, 133:i32, 132:i32, 131:i32, 130:i32, 129:i32, 128:i32, 127:i32, 126:i32, 125:i32, 124:i32, 123:i32, 122:i32, 121:i32, 120:i32, 119:i32, 118:i32, 117:i32, 116:i32, 115:i32, 114:i32, 147:i32, 113:i32, 136:i32, 112:i32, 111:i32, 110:i32, 109:i32, 108:i32, 107:i32, 106:i32, 200:i32, 231:i32, 200:i32, 201:i32, 230:i32, 202:i32, 100:i32, 100:i32, 247:i32, 228:i32, 227:i32, 226:i32, 225:i32, 224:i32, 223:i32, 222:i32, 221:i32, 220:i32, 219:i32, 218:i32, 217:i32, 216:i32, 229:i32, 215:i32, 214:i32, 213:i32, 212:i32, 211:i32, 210:i32, 209:i32, 208:i32, 207:i32, 206:i32, 205:i32, 204:i32, 203:i32, 271:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 2:i32, 1:i32, 0:i32
%3:i32 = phi %0, 3:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 9:i32
%3:i32 = phi %0, 1:i32, 1:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, %3, 0:i64
%5:i32 = var
%6:i64 = zext %5
%7:i64 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5 = block 2
%6:i8 = phi %5, 1:i8, 0:i8
%7:i8 = phi %0, 0:i8, 0:i8, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = phi %1, 1:i1, 0:i1
%3:i32 = select %2, 3:i32, 0:i32
%4 = block 5
%5:i32 = select %2, 4:i32, 1:i32
%6 = block 6
%7:i32 = var (00000000000000000000000000001xxx) (zn)
%8:i32 = var (00000000000000000000000000000xxx) (zn)
%9:i32 = phi %6, 6:i32, 8:i32, 7:i32, %7, %8, 0:i32
%10:i32 = phi %4, 10:i32, 9:i32, 1:i32, %5, %9
%11:i32 = phi %0, %3, %10, %9
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 3:i32, 2:i32, 2:i32
%3:i32 = phi %0, %2, 1:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 7
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 1:i8, %4, %4, %4, %4, %4, %4
%6:i8 = phi %0, %5, 1:i8, 1:i8, 1:i8, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3 = block 2
%4:i32 = var
%5:i64 = zext %4
%6:i64 = phi %3, %5, %2
%7:i64 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i32 = phi %1, 2:i32, 2:i32, 0:i32, 1:i32
%3 = block 2
%4 = block 4
%5 = block 3
%6:i32 = var (000000000000000000000000000000x0) (n)
%7:i32 = phi %4, 2:i32, %6, 2:i32, 2:i32
%8:i32 = phi %3, 1:i32, %7
%9:i32 = phi %0, 1:i32, %2, %8, 1:i32, 1:i32, 2:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (znp)
%4:i32 = phi %2, %3, 1:i32
%5:i32 = phi %1, %4, 0:i32, 1:i32
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 2:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 32:i32
%4:i32 = phi %0, 0:i32, %3, 1:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 15:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4, 0:i32, 1:i32
%6:i32 = phi %1, 0:i32, %5, 1:i32, 1:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i32 = var
%2:i32 = and 16:i32, %1
%3:i32 = xor 16:i32, %2
%4:i32 = var
%5:i32 = and 16:i32, %4
%6:i32 = xor 16:i32, %5
%7:i32 = var
%8:i32 = and 16:i32, %7
%9:i32 = xor 16:i32, %8
%10:i32 = var
%11:i32 = and 16:i32, %10
%12:i32 = xor 16:i32, %11
%13:i32 = phi %0, 16:i32, %3, 16:i32, 16:i32, %6, 16:i32, 16:i32, 16:i32, %9, %12, 16:i32
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, 0:i8, %2
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000010100xxxx) (zn)
%5:i32 = phi %2, 327:i32, %4
%6:i32 = phi %1, %5, 394:i32, 394:i32, 393:i32, 393:i32
%7 = block 2
%8:i1 = var
%9:i32 = select %8, 393:i32, 375:i32
%10:i32 = phi %7, %9, 0:i32
%11 = block 11
%12:i32 = phi %11, 377:i32, 376:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%13:i32 = phi %0, %6, %10, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000xxxxx) (n)
%4:i32 = phi %2, 11:i32, %3
%5:i32 = phi %1, %4, 11:i32
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = udiv 360360:i32, %1
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 125:i32, 126:i32, 125:i32, 126:i32
%3:i32 = phi %0, 125:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 15
%2 = block 3
%3:i1 = var
%4:i32 = var (00000000000000000000000x0xx0000x) (n)
%5:i32 = select %3, 347:i32, %4
%6:i32 = phi %1, 0:i32, 354:i32, 356:i32, 355:i32, 348:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %5, 0:i32, 0:i32, 0:i32, 0:i32
%7:i32 = phi %0, %6, 354:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32, 1:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5:i32 = phi %0, %2, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 10
%2:i32 = phi %1, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 2:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5 = block 2
%6:i32 = phi %5, 0:i32, 1:i32
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11:i32 = phi %0, 0:i32, %2, %4, %6, %8, %10, 1:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 3:i32
%4:i32 = phi %1, %3, 3:i32
%5:i32 = phi %0, 3:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4, 0:i8
%6 = block 2
%7:i8 = phi %6, 0:i8, %5
%8:i8 = phi %1, %5, %5, %7, %5
%9:i8 = phi %0, 1:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 4:i32, 2:i32, 8:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i8 = xor 1:i8, %1
%3:i8 = phi %0, %2, %1
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, 0:i32, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5 = block 5
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, %8, 1:i32
%10:i32 = phi %5, 1:i32, 0:i32, %9, 1:i32, 1:i32
%11:i32 = phi %0, 0:i32, %4, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 13:i32, 14:i32, 15:i32
%4:i32 = and 7:i32, %3
%5:i32 = phi %1, %4, %3
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (000000000000000000000000000000000000000000000000000000000010000x) (zn)
%3 = block 2
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 64:i64, %5
%7:i64 = phi %0, %6, %5
%8:i64 = or 8:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = phi %2, %3, 0:i32
%5:i32 = phi %1, %4, 0:i32
%6:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, %5, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (xxxxx000)
%2:i8 = and 24:i8, %1
%3:i8 = or 36:i8, %2
%4:i8 = phi %0, 20:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 945:i32, 1743:i32
%3:i32 = phi %0, 946:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 2:i32, 3:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, 0:i32, 1:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 14
%2:i32 = phi %1, 15:i32, 15:i32, 15:i32, 15:i32, 15:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32
%3:i32 = phi %0, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, 15:i32, 15:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = select %2, %3, 3:i32
%5:i32 = phi %1, %4, 2:i32
%6:i32 = phi %0, 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %0, 0:i8, %2, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5 = block 2
%6 = block 4
%7 = block 2
%8:i8 = var (0000000x) (n)
%9:i8 = phi %6, 1:i8, 0:i8, %8, 0:i8
%10:i8 = phi %5, %9, 0:i8
%11:i8 = phi %0, %4, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 0:i32
%4:i32 = phi %0, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 7
%3:i32 = phi %2, 3757:i32, 3742:i32, 4033:i32, 3746:i32, 3747:i32, 3740:i32, 3739:i32
%4:i32 = phi %1, %3, 3757:i32, 3757:i32, 3757:i32
%5:i32 = phi %0, 3757:i32, 3757:i32, %4, 3757:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 8:i32, 12:i32, 8:i32, 10:i32
%2:i32 = shl 1:i32, %1
%3:i32 = addnsw 4294967295:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3 = block 3
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 1:i32, 0:i32, %5
%7:i32 = phi %0, 1:i32, 0:i32, 1:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 0:i32
%7:i32 = phi %1, %3, %6
%8:i32 = phi %0, 0:i32, %7, %6, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = phi %0, 0:i64, %1
%3:i64 = sub %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 4:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 2577:i32, 2994:i32
%4 = block 3
%5:i32 = phi %4, %3, 133:i32, 133:i32
%6:i32 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 8
%3:i32 = phi %2, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 9
%2 = block 3
%3 = block 5
%4:i32 = phi %3, 268:i32, 272:i32, 265:i32, 269:i32, 263:i32
%5:i32 = phi %2, 273:i32, %4, %4
%6:i32 = phi %1, 99:i32, 99:i32, 265:i32, 269:i32, 265:i32, 269:i32, 263:i32, %5, %4
%7 = block 3
%8:i32 = phi %7, 267:i32, 271:i32, %6
%9:i32 = phi %0, %6, %8, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 4
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, %4, 2:i32
%6:i32 = phi %1, 2:i32, %5
%7:i32 = phi %0, 2:i32, %6, 2:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 1:i8
%5:i8 = phi %1, %4, 0:i8
%6:i8 = phi %0, 0:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 130
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i1 = var
%4:i32 = select %3, 124:i32, 172:i32
%5:i32 = select %2, %4, 76:i32
%6:i8 = var (0000000x) (n)
%7:i1 = ne 0:i8, %6
%8:i32 = select %7, 100:i32, 52:i32
%9:i8 = var (0000000x) (n)
%10:i1 = ne 0:i8, %9
%11:i1 = var
%12:i32 = select %11, 122:i32, 170:i32
%13:i32 = select %10, %12, 74:i32
%14:i8 = var (0000000x) (n)
%15:i1 = ne 0:i8, %14
%16:i32 = select %15, 98:i32, 50:i32
%17:i8 = var (0000000x) (n)
%18:i1 = ne 0:i8, %17
%19:i1 = var
%20:i32 = select %19, 123:i32, 171:i32
%21:i32 = select %18, %20, 75:i32
%22:i8 = var (0000000x) (n)
%23:i1 = ne 0:i8, %22
%24:i32 = select %23, 99:i32, 51:i32
%25:i8 = var (0000000x) (n)
%26:i1 = ne 0:i8, %25
%27:i1 = var
%28:i32 = select %27, 121:i32, 169:i32
%29:i32 = select %26, %28, 73:i32
%30:i8 = var (0000000x) (n)
%31:i1 = ne 0:i8, %30
%32:i32 = select %31, 97:i32, 49:i32
%33:i8 = var (0000000x) (n)
%34:i1 = ne 0:i8, %33
%35:i1 = var
%36:i32 = select %35, 120:i32, 168:i32
%37:i32 = select %34, %36, 72:i32
%38:i8 = var (0000000x) (n)
%39:i1 = ne 0:i8, %38
%40:i32 = select %39, 96:i32, 48:i32
%41:i8 = var (0000000x) (n)
%42:i1 = ne 0:i8, %41
%43:i1 = var
%44:i32 = select %43, 118:i32, 166:i32
%45:i32 = select %42, %44, 70:i32
%46:i8 = var (0000000x) (n)
%47:i1 = ne 0:i8, %46
%48:i32 = select %47, 94:i32, 46:i32
%49:i8 = var (0000000x) (n)
%50:i1 = ne 0:i8, %49
%51:i1 = var
%52:i32 = select %51, 119:i32, 167:i32
%53:i32 = select %50, %52, 71:i32
%54:i8 = var (0000000x) (n)
%55:i1 = ne 0:i8, %54
%56:i32 = select %55, 95:i32, 47:i32
%57:i8 = var (0000000x) (n)
%58:i1 = ne 0:i8, %57
%59:i1 = var
%60:i32 = select %59, 117:i32, 165:i32
%61:i32 = select %58, %60, 69:i32
%62:i8 = var (0000000x) (n)
%63:i1 = ne 0:i8, %62
%64:i32 = select %63, 93:i32, 45:i32
%65:i8 = var (0000000x) (n)
%66:i1 = ne 0:i8, %65
%67:i1 = var
%68:i32 = select %67, 132:i32, 180:i32
%69:i32 = select %66, %68, 84:i32
%70:i8 = var (0000000x) (n)
%71:i1 = ne 0:i8, %70
%72:i32 = select %71, 108:i32, 60:i32
%73:i8 = var (0000000x) (n)
%74:i1 = ne 0:i8, %73
%75:i1 = var
%76:i32 = select %75, 130:i32, 178:i32
%77:i32 = select %74, %76, 82:i32
%78:i8 = var (0000000x) (n)
%79:i1 = ne 0:i8, %78
%80:i32 = select %79, 106:i32, 58:i32
%81:i8 = var (0000000x) (n)
%82:i1 = ne 0:i8, %81
%83:i1 = var
%84:i32 = select %83, 131:i32, 179:i32
%85:i32 = select %82, %84, 83:i32
%86:i8 = var (0000000x) (n)
%87:i1 = ne 0:i8, %86
%88:i32 = select %87, 107:i32, 59:i32
%89:i8 = var (0000000x) (n)
%90:i1 = ne 0:i8, %89
%91:i1 = var
%92:i32 = select %91, 129:i32, 177:i32
%93:i32 = select %90, %92, 81:i32
%94:i8 = var (0000000x) (n)
%95:i1 = ne 0:i8, %94
%96:i32 = select %95, 105:i32, 57:i32
%97:i8 = var (0000000x) (n)
%98:i1 = ne 0:i8, %97
%99:i1 = var
%100:i32 = select %99, 128:i32, 176:i32
%101:i32 = select %98, %100, 80:i32
%102:i8 = var (0000000x) (n)
%103:i1 = ne 0:i8, %102
%104:i32 = select %103, 104:i32, 56:i32
%105:i8 = var (0000000x) (n)
%106:i1 = ne 0:i8, %105
%107:i1 = var
%108:i32 = select %107, 127:i32, 175:i32
%109:i32 = select %106, %108, 79:i32
%110:i8 = var (0000000x) (n)
%111:i1 = ne 0:i8, %110
%112:i32 = select %111, 103:i32, 55:i32
%113:i8 = var (0000000x) (n)
%114:i1 = ne 0:i8, %113
%115:i1 = var
%116:i32 = select %115, 126:i32, 174:i32
%117:i32 = select %114, %116, 78:i32
%118:i8 = var (0000000x) (n)
%119:i1 = ne 0:i8, %118
%120:i32 = select %119, 102:i32, 54:i32
%121:i8 = var (0000000x) (n)
%122:i1 = ne 0:i8, %121
%123:i1 = var
%124:i32 = select %123, 125:i32, 173:i32
%125:i32 = select %122, %124, 77:i32
%126:i8 = var (0000000x) (n)
%127:i1 = ne 0:i8, %126
%128:i32 = select %127, 101:i32, 53:i32
%129:i8 = var (0000000x) (n)
%130:i1 = ne 0:i8, %129
%131:i1 = var
%132:i32 = select %131, 116:i32, 164:i32
%133:i32 = select %130, %132, 68:i32
%134:i8 = var (0000000x) (n)
%135:i1 = ne 0:i8, %134
%136:i32 = select %135, 92:i32, 44:i32
%137:i8 = var (0000000x) (n)
%138:i1 = ne 0:i8, %137
%139:i1 = var
%140:i32 = select %139, 114:i32, 162:i32
%141:i32 = select %138, %140, 66:i32
%142:i8 = var (0000000x) (n)
%143:i1 = ne 0:i8, %142
%144:i32 = select %143, 90:i32, 42:i32
%145:i8 = var (0000000x) (n)
%146:i1 = ne 0:i8, %145
%147:i1 = var
%148:i32 = select %147, 115:i32, 163:i32
%149:i32 = select %146, %148, 67:i32
%150:i8 = var (0000000x) (n)
%151:i1 = ne 0:i8, %150
%152:i32 = select %151, 91:i32, 43:i32
%153:i8 = var (0000000x) (n)
%154:i1 = ne 0:i8, %153
%155:i1 = var
%156:i32 = select %155, 113:i32, 161:i32
%157:i32 = select %154, %156, 65:i32
%158:i8 = var (0000000x) (n)
%159:i1 = ne 0:i8, %158
%160:i32 = select %159, 89:i32, 41:i32
%161:i8 = var (0000000x) (n)
%162:i1 = ne 0:i8, %161
%163:i1 = var
%164:i32 = select %163, 112:i32, 160:i32
%165:i32 = select %162, %164, 64:i32
%166:i8 = var (0000000x) (n)
%167:i1 = ne 0:i8, %166
%168:i32 = select %167, 88:i32, 40:i32
%169:i8 = var (0000000x) (n)
%170:i1 = ne 0:i8, %169
%171:i1 = var
%172:i32 = select %171, 111:i32, 159:i32
%173:i32 = select %170, %172, 63:i32
%174:i8 = var (0000000x) (n)
%175:i1 = ne 0:i8, %174
%176:i32 = select %175, 87:i32, 39:i32
%177:i8 = var (0000000x) (n)
%178:i1 = ne 0:i8, %177
%179:i32 = select %178, 158:i32, 62:i32
%180:i8 = var (0000000x) (n)
%181:i1 = ne 0:i8, %180
%182:i32 = select %181, 86:i32, 38:i32
%183:i8 = var (0000000x) (n)
%184:i1 = ne 0:i8, %183
%185:i32 = select %184, 157:i32, 61:i32
%186:i8 = var (0000000x) (n)
%187:i1 = ne 0:i8, %186
%188:i32 = select %187, 85:i32, 37:i32
%189:i8 = var (0000000x) (n)
%190:i1 = ne 0:i8, %189
%191:i32 = select %190, 28:i32, 24:i32
%192:i8 = var
%193:i1 = eq 2:i8, %192
%194:i32 = select %193, 13:i32, 11:i32
%195:i8 = var (0000000x) (n)
%196:i1 = eq 0:i8, %195
%197:i32 = select %196, 1:i32, 9:i32
%198:i8 = var
%199:i1 = eq 1:i8, %198
%200:i32 = select %199, 4:i32, 2:i32
%201:i8 = var
%202:i1 = eq 4:i8, %201
%203:i1 = var
%204:i32 = select %203, 6:i32, 0:i32
%205:i32 = select %202, 5:i32, %204
%206:i8 = var (0000000x) (n)
%207:i1 = ne 0:i8, %206
%208:i32 = select %207, 158:i32, 62:i32
%209:i8 = var (0000000x) (n)
%210:i1 = ne 0:i8, %209
%211:i32 = select %210, 157:i32, 61:i32
%212:i8 = var
%213:i1 = eq 4:i8, %212
%214:i1 = var
%215:i32 = select %214, 19:i32, 14:i32
%216:i32 = select %213, %215, 15:i32
%217:i32 = phi %0, 35:i32, 33:i32, 22:i32, 21:i32, 148:i32, %5, 172:i32, %8, 146:i32, %13, 170:i32, %16, 147:i32, %21, 171:i32, %24, 145:i32, %29, 169:i32, %32, 144:i32, %37, 168:i32, %40, 142:i32, %45, 166:i32, %48, 143:i32, %53, 167:i32, %56, 141:i32, %61, 165:i32, %64, 156:i32, %69, 180:i32, %72, 154:i32, %77, 178:i32, %80, 155:i32, %85, 179:i32, %88, 153:i32, %93, 177:i32, %96, 152:i32, %101, 176:i32, %104, 151:i32, %109, 175:i32, %112, 150:i32, %117, 174:i32, %120, 149:i32, %125, 173:i32, %128, 140:i32, %133, 164:i32, %136, 138:i32, %141, 162:i32, %144, 139:i32, %149, 163:i32, %152, 137:i32, %157, 161:i32, %160, 136:i32, %165, 160:i32, %168, 135:i32, %173, 159:i32, %176, 134:i32, 110:i32, %179, %182, 133:i32, 109:i32, %185, %188, 36:i32, 34:i32, 32:i32, %191, 30:i32, 31:i32, 26:i32, 27:i32, 25:i32, 29:i32, 23:i32, 20:i32, 20:i32, 10:i32, 16:i32, %194, 11:i32, 12:i32, 18:i32, %197, 7:i32, %200, 2:i32, 3:i32, %205, %208, %211, 17:i32, 8:i32, %216
infer %217

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var
%2:i32 = lshr %1, 3:i32
%3:i32 = addnw 164:i32, %2
%4:i32 = addnw 88:i32, %2
%5:i32 = lshr %1, 2:i32
%6:i32 = addnw 121:i32, %5
%7:i32 = lshr %1, 4:i32
%8:i32 = addnw 188:i32, %7
%9:i32 = phi %0, %3, %4, %6, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 1:i32, 0:i32, %5
%7:i32 = phi %0, 1:i32, 0:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = var (0000000000000000000000000000010x) (zn)
%4:i32 = select %1, %2, %3
%5:i32 = or 2:i32, %4
%6:i32 = phi %0, %5, %4
%7:i32 = or 8:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 19
%2:i1 = var
%3:i32 = select %2, 161:i32, 163:i32
%4:i1 = var
%5:i32 = select %4, 160:i32, 162:i32
%6:i32 = phi %1, 0:i32, 0:i32, 161:i32, 163:i32, %3, 0:i32, 161:i32, 163:i32, 0:i32, 160:i32, 162:i32, %5, 0:i32, 160:i32, 162:i32, 94:i32, 95:i32, 96:i32, 97:i32
%7:i1 = var
%8:i32 = select %7, 114:i32, 113:i32
%9:i32 = phi %0, %6, %8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i64 = zext %3
%5:i64 = phi %1, 0:i64, %4
%6:i64 = phi %0, %5, 0:i64
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3 = block 2
%4:i8 = phi %3, 0:i8, 1:i8
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, %5, %4, 0:i8
%7:i8 = phi %0, %6, 1:i8, 0:i8, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 10
%2:i64 = phi %1, 1:i64, 0:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64
%3:i64 = phi %0, %2, 1:i64, 1:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 15
%2:i32 = phi %1, 0:i32, 2:i32, 3:i32, 4:i32, 0:i32, 2:i32, 3:i32, 4:i32, 0:i32, 2:i32, 3:i32, 4:i32, 0:i32, 1:i32, 4:i32
%3:i32 = phi %0, %2, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 3
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, %2, 1:i8
%5 = block 3
%6:i8 = phi %5, %2, %2, 1:i8
%7 = block 2
%8:i8 = phi %7, %2, 1:i8
%9 = block 2
%10:i8 = phi %9, %2, 1:i8
%11:i8 = phi %0, %2, %2, %2, %2, %4, %6, %8, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 21
%2:i32 = phi %1, 8:i32, 7:i32, 8:i32, 7:i32, 8:i32, 7:i32, 1:i32, 14:i32, 1:i32, 14:i32, 1:i32, 14:i32, 12:i32, 3:i32, 12:i32, 3:i32, 4:i32, 11:i32, 2:i32, 13:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32
%3 = block 5
%4:i32 = phi %3, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 3:i32
%5:i32 = phi %0, %2, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3:i1 = var
%4:i32 = select %3, 2:i32, 0:i32
%5:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, %4
%6:i1 = var
%7:i32 = select %6, 2:i32, 0:i32
%8:i32 = phi %0, %5, 0:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 0:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 2:i32, 0:i32, 2:i32
%3:i32 = phi %0, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 2:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = phi %0, 4:i32, 1:i32, 1:i32, 4:i32, 1:i32, 1:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, 0:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 9
%2:i32 = phi %1, 0:i32, 0:i32, 4:i32, 25:i32, 2:i32, 0:i32, 3:i32, 24:i32, 1:i32
%3:i32 = phi %0, 25:i32, 24:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, %4, 0:i32, 2:i32
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, %6, %5, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i32 = phi %0, 1:i32, 1:i32, 4:i32, 1:i32
%2:i32 = var (00000000000000000000000000001xx0) (zn)
%3:i32 = shl 1:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
%5:i32 = mulnsw %1, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000000000000000000000000xxxxxxxxxxx) (zn)
%3:i64 = var (00000000000000000000000000000000000000000000000000000000xxxxxxxx) (n)
%4:i64 = addnw %2, %3
%5:i64 = var (0000000000000000000000000000000000000000000000000000000xxxxxxxxx) (n)
%6:i64 = addnw 8:i64, %5
%7:i64 = phi %1, %4, %6
%8:i8 = var
%9:i64 = zext %8
%10:i64 = addnsw %7, %9
%11:i64 = phi %0, %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, 1:i64, %3
%5:i64 = add %0, %4
%6:i64 = add 18446744073709551615:i64, %5
%7:i64 = urem %6, %4
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 3:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, %3, 0:i32
%5 = block 5
%6 = block 4
%7:i32 = phi %6, 1:i32, 1:i32, 1:i32, 0:i32
%8 = block 3
%9:i32 = phi %8, 1:i32, 1:i32, 0:i32
%10:i32 = phi %5, 1:i32, 1:i32, 0:i32, %7, %9
%11:i32 = phi %0, 0:i32, %4, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 24:i32, 22:i32
%3 = block 2
%4:i1 = var
%5:i32 = select %4, 23:i32, 21:i32
%6:i32 = phi %3, %5, 0:i32
%7:i32 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = var (0001xxx0) (zn)
%3 = block 4
%4:i8 = var (0000xxx0) (n)
%5:i8 = phi %1, %2, %4
%6:i8 = or 1:i8, %5
%7:i8 = phi %0, %6, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 7
%2:i32 = phi %1, 1:i32, 12:i32, 12:i32, 0:i32, 16:i32, 1:i32, 12:i32
%3 = block 7
%4:i32 = phi %3, 1:i32, 12:i32, 16:i32, 1:i32, 12:i32, 0:i32, 0:i32
%5:i32 = phi %0, %2, %4, 2:i32, 2:i32, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %0, %2, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 2:i32, 2:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 15
%2:i32 = phi %1, 231:i32, 0:i32, 231:i32, 231:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 230:i32, 231:i32, 231:i32
%3:i32 = phi %0, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, 232:i32, 232:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 4:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 16:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 3
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, 1:i8
%7:i8 = phi %3, %6, 0:i8, %6
%8:i8 = phi %0, %2, %7, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5 = block 3
%6:i32 = phi %5, %4, 1:i32, 1:i32
%7:i32 = phi %0, %4, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 36:i32, 42:i32
%4:i32 = phi %1, 40:i32, %3
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 14
%1 = block 11
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8, 0:i8, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 0:i32, %6
%8:i32 = phi %3, 0:i32, %7
%9:i32 = phi %0, 1:i32, 1:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1:i24 = var (0000000000000000xxxxxxxx) (n)
%2:i1 = eq 25:i24, %1
%3:i32 = select %2, 5:i32, 0:i32
%4 = block 2
%5:i1 = var
%6:i32 = select %5, 3:i32, 2:i32
%7:i32 = phi %4, %6, 3:i32
%8:i32 = phi %0, 2:i32, 4:i32, 4:i32, %3, %7, 1:i32, 4:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 4
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8, 1:i8, 1:i8
%6:i8 = phi %1, 0:i8, %5
%7:i8 = phi %0, %6, %5, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i1 = var
%4:i8 = zext %3
%5 = block 2
%6:i8 = phi %5, 1:i8, 0:i8
%7:i8 = phi %1, %4, %6, 0:i8
%8 = block 4
%9 = block 3
%10:i8 = var (0000000x) (n)
%11:i8 = phi %9, 0:i8, %10, %10
%12:i8 = phi %8, %11, 1:i8, 1:i8, %11
%13:i8 = phi %0, %7, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 41
%1 = block 2
%2:i32 = phi %1, 0:i32, 42:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 41:i32
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var (00000000000000000000000000000xxx) (zn)
%9:i32 = phi %7, 0:i32, %8
%10:i32 = var (000000000000000000000000000000xx) (znp)
%11:i32 = phi %6, %9, %10
%12:i32 = phi %5, %11, %9
%13:i32 = phi %0, 0:i32, %2, %4, 44:i32, 40:i32, 39:i32, 38:i32, 37:i32, 36:i32, 35:i32, 34:i32, 33:i32, 32:i32, 31:i32, 30:i32, 29:i32, 28:i32, 27:i32, 26:i32, 25:i32, 24:i32, 23:i32, 22:i32, 21:i32, 20:i32, 19:i32, 18:i32, 17:i32, 16:i32, 15:i32, 14:i32, 13:i32, 12:i32, 11:i32, 10:i32, 9:i32, 8:i32, 7:i32, 6:i32, 5:i32, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 28
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (0000000000000000000000000000000000000000000000000100000x00000000) (zn)
%3 = block 2
%4:i64 = var (0000000000000000000000000000000000000000000000000000000x00000000) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 32768:i64, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 3:i32, 1:i32, 0:i32, 2:i32
%3:i32 = phi %0, 3:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 13:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 15
%2:i32 = phi %1, 15:i32, 0:i32, 15:i32, 15:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 14:i32, 15:i32, 15:i32
%3:i32 = phi %0, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, 15:i32, 15:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 4064:i64, 4063:i64
%3:i64 = phi %0, %2, 0:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = phi %1, %2, 1:i32, 2:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, 1:i32, 4:i32
%2:i32 = addnsw 4294967295:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000001x) (zn)
%4:i32 = phi %2, 1:i32, %3
%5:i32 = phi %1, 1:i32, %4
%6:i32 = phi %0, 0:i32, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = var
%3:i64 = zext %2
%4:i64 = shlnw %3, 4:i64
%5:i64 = phi %0, %4, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 3
%2:i32 = phi %1, 2:i32, 2:i32, 1:i32
%3:i32 = phi %0, 2:i32, 0:i32, 0:i32, 2:i32, 1:i32, 0:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 116:i8, 100:i8, 98:i8, 115:i8
%4:i8 = phi %1, %3, 115:i8
%5:i8 = phi %0, 45:i8, 63:i8, %4, 105:i8, 115:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8, %3, 0:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 0:i32
%6 = block 2
%7:i32 = phi %6, 1:i32, %5
%8:i32 = phi %1, %5, %5, %7
%9:i32 = phi %0, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000000xxxxx) (n)
%2:i64 = zext %1
%3:i64 = phi %0, %2, 0:i64
%4:i32 = trunc %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 4
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 23:i32, 23:i32, 23:i32
%5:i32 = phi %1, 23:i32, %4
%6:i32 = phi %0, 23:i32, %5, 23:i32, 23:i32, 23:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 1:i8, 0:i8, 0:i8, %2, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 2:i32, 1:i32, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 21:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 21:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i8 = var
%6:i8 = and 1:i8, %5
%7:i8 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5 = block 2
%6:i8 = phi %5, 1:i8, 0:i8
%7:i8 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 8
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i8 = zext %1
%3 = block 4
%4:i1 = var
%5:i8 = zext %4
%6 = block 4
%7:i8 = var (0000000x) (n)
%8:i8 = phi %6, %7, 0:i8, 0:i8, 0:i8
%9:i8 = phi %3, %5, %8, %8, %8
%10:i8 = phi %0, %2, %9, %9, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4, 1:i32
%6:i32 = phi %1, %5, 0:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 6:i32, 4:i32, 2:i32
%3:i32 = or 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 4
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3, %3, %3
%5:i8 = phi %0, 1:i8, %4, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i8 = shlnw %1, 3:i8
%3:i8 = xor 10:i8, %2
%4:i8 = xor 12:i8, %2
%5:i8 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i32 = phi %1, 2:i32, 0:i32
%3:i1 = var
%4:i32 = select %3, 3:i32, 1:i32
%5:i32 = phi %0, 0:i32, 3:i32, 2:i32, %2, 0:i32, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 2:i32, 0:i32, 1:i32
%3:i32 = phi %0, 2:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i8 = var (001xx100) (zn)
%4:i8 = phi %2, %3, 20:i8
%5:i8 = phi %1, %4, 0:i8, 20:i8
%6:i8 = phi %0, 20:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 25
%1:i72 = var (00000000000000000000000000000000000000000000000000000000000000000x000000) (n)
%2:i1 = ne 0:i72, %1
%3:i32 = select %2, 14:i32, 5:i32
%4 = block 4
%5:i32 = var (000000000000000000000000000000x0) (n)
%6:i32 = or 1:i32, %5
%7:i32 = phi %4, 0:i32, 13:i32, %6, 12:i32
%8:i72 = var (00000000000000000000000000000000000000000000000000000000000000000x000000) (n)
%9:i1 = ne 0:i72, %8
%10:i32 = select %9, 10:i32, 5:i32
%11:i32 = var (00000xxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%12:i32 = and 2:i32, %11
%13:i32 = or 1:i32, %12
%14:i32 = phi %0, %3, %7, %10, 9:i32, 7:i32, 11:i32, 5:i32, %13, 5:i32, 1:i32, 4:i32, 0:i32, 8:i32, 8:i32, 8:i32, 8:i32, 8:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 327:i32, 327:i32, 328:i32
%3:i32 = phi %0, %2, 394:i32, 394:i32, 393:i32, 393:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = ctlz %0
%2:i64 = subnsw 64:i64, %1
%3:i64 = lshr %2, 1:i64
%4:i64 = or %2, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var (0000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00) (n)
%2:i64 = var (000000000000000000000000000000000000000000000000000000000xxx1000) (zn)
%3:i64 = addnw %1, %2
%4:i64 = addnw 16:i64, %3
%5:i64 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 6:i32, 0:i32
%3:i32 = phi %0, %2, 11:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, %2, 1:i8
%5:i8 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %5, %3
%7 = block 2
%8:i1 = var
%9:i1 = phi %7, 1:i1, %8
%10:i8 = zext %9
%11:i8 = phi %0, %6, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, 1:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var (0000000x) (n)
%2 = block 5
%3:i8 = phi %2, 1:i8, %1, %1, %1, %1
%4:i8 = phi %0, %1, 0:i8, %1, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, 1:i32, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 4:i32, %5
%7:i32 = phi %0, %6, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %5
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %0, %6, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 5:i32
%5:i32 = phi %1, 1:i32, %4
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 3:i32, 3:i32, 3:i32, 0:i32
%4:i32 = phi %1, %3, 3:i32
%5 = block 5
%6:i32 = phi %5, 2:i32, 2:i32, 3:i32, 3:i32, 3:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 4
%2:i32 = phi %1, 2:i32, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 6:i32, 0:i32, 6:i32, 6:i32
%4:i32 = phi %1, 6:i32, %3
%5:i32 = phi %0, 2:i32, 11:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 3
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %3, 0:i32, %5, %7
%9:i32 = phi %0, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 15:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000000000000000000000000000000x) (n)
%2:i1 = eq 0:i32, %1
%3:i1 = var
%4:i32 = select %3, 1:i32, 3:i32
%5:i32 = select %2, %4, 1:i32
%6:i32 = phi %0, 0:i32, 0:i32, %5, 1:i32, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 5
%3:i8 = phi %2, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 6:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 0:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, 2:i32, %4
%6:i32 = phi %1, %5, 2:i32
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 1:i64, 0:i64
%3:i64 = or 4:i64, %2
%4:i64 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 2:i32, 4:i32
%3:i32 = phi %0, %2, %2, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 3
%3:i32 = phi %2, 327:i32, 327:i32, 328:i32
%4:i32 = phi %1, %3, 394:i32, 394:i32, 393:i32, 393:i32
%5 = block 2
%6:i1 = var
%7:i32 = select %6, 393:i32, 375:i32
%8:i32 = phi %5, %7, 0:i32
%9 = block 11
%10:i32 = phi %9, 377:i32, 376:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%11:i32 = phi %0, %4, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var (0000000x) (n)
%2:i8 = shlnw %1, 1:i8
%3:i32 = zext %2
%4 = block 2
%5:i32 = phi %4, 4:i32, %3
%6:i32 = phi %0, 4:i32, %3, 6:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i1 = var
%3:i32 = select %2, 116:i32, 21:i32
%4:i1 = var
%5:i32 = select %4, 113:i32, 233:i32
%6 = block 3
%7:i1 = var
%8:i32 = select %7, 24:i32, 22:i32
%9:i32 = phi %1, 19:i32, %3, %5, %8
%10:i8 = var (0000000x) (n)
%11:i1 = ne 0:i8, %10
%12:i32 = select %11, 44:i32, 30:i32
%13:i32 = phi %0, %9, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i32 = phi %1, 4:i32, 3:i32, 3:i32
%3:i32 = phi %0, 0:i32, 4:i32, %2, 1:i32, 2:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1250:i32, 1248:i32
%3:i32 = phi %0, 1257:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 7
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, 0:i32, %3, %3, %3, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, 0:i32, %4, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 5
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 23:i32, 23:i32, 23:i32, 23:i32, %2
%4:i32 = phi %0, 23:i32, %3, 23:i32, 23:i32, 23:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 6
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, %2, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 1:i8, 1:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 4
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, %3, 1:i8, %3
%5:i8 = phi %0, %4, %4, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 2:i32, 0:i32, 0:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i1 = var
%5:i8 = zext %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %3, %5, %7
%9 = block 3
%10:i8 = phi %9, 1:i8, 0:i8, 0:i8
%11:i64 = var
%12:i64 = var
%13:i1 = ne %11, %12
%14:i8 = zext %13
%15 = block 2
%16:i8 = phi %15, 1:i8, 0:i8
%17:i8 = phi %0, %2, %8, %10, %14, %16, 1:i8
infer %17

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 14
%2 = block 11
%3 = block 11
%4:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%5:i32 = phi %2, %4, 0:i32, 2750:i32, 2892:i32, 2878:i32, 2899:i32, 2667:i32, 2675:i32, 2643:i32, 2659:i32, 2683:i32
%6:i16 = var
%7:i32 = zext %6
%8:i32 = phi %1, %5, %5, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7
%9:i32 = phi %0, 0:i32, %8, 2750:i32, 2892:i32, 2878:i32, 2899:i32, 2667:i32, 2675:i32, 2643:i32, 2659:i32, 2683:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 1:i8, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 6
%2:i32 = phi %1, 3:i32, 3:i32, 2:i32, 3:i32, 2:i32, 3:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32, 2:i32, 3:i32, 1:i32, 2:i32, 3:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 1:i32, 1:i32, 0:i32, %2
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = shl %1, %2
%4:i32 = phi %0, 8:i32, %3
%5:i32 = udiv 16:i32, %4
infer %5

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = var (00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = sub %1, %2
%4:i32 = var
%5:i64 = zext %4
%6:i1 = ult %3, %5
%7:i64 = select %6, %3, %5
%8:i64 = phi %0, %7, 0:i64, 0:i64
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i32 = phi %1, 2:i32, 1:i32, 1:i32, 1:i32, 2:i32, 0:i32
%3:i32 = phi %0, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 5:i32
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 0:i32, %5, 1:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 0:i32, %2, %4, 1:i32, 1:i32, 1:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = phi %1, 0:i1, 1:i1
%3:i8 = zext %2
%4 = block 2
%5:i8 = phi %4, 1:i8, 0:i8
%6:i8 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4
%6:i8 = phi %1, %5, 1:i8, 1:i8, 1:i8
%7 = block 2
%8:i8 = phi %7, %6, 0:i8
%9:i8 = phi %0, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 4:i32
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %5, %6, 2:i32
%8:i32 = phi %1, 0:i32, %4, %7
%9:i32 = phi %0, 0:i32, %8, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 6
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, %4, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3 = block 3
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %2, %4, 0:i32
%6:i32 = addnsw 4:i32, %5
%7:i32 = addnsw 8:i32, %5
%8:i32 = phi %1, %6, %7, %5
%9:i32 = phi %0, %8, %5, %5
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = var (001xx100) (zn)
%4:i8 = phi %2, %3, 20:i8
%5:i8 = phi %1, %4, %4, 20:i8
%6:i8 = phi %0, 20:i8, %5, 36:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (000000000000000000000000xxxxxxxx) (n)
%2:i32 = var
%3:i32 = and %1, %2
%4:i8 = var
%5:i32 = zext %4
%6:i32 = or %3, %5
%7:i32 = phi %0, %6, %3
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 11
%5 = block 2
%6:i32 = var (000000000000000000000000000000xx) (zn)
%7:i32 = phi %4, %6, 1:i32, 2:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32
%8:i32 = phi %1, 1:i32, 2:i32, 0:i32, %3, %7
%9:i32 = phi %0, 0:i32, 2:i32, 2:i32, 1:i32, 2:i32, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 1:i1, %2
%4:i8 = zext %3
%5 = block 4
%6 = block 4
%7 = block 3
%8:i8 = var (0000000x) (n)
%9:i8 = phi %6, %8, 1:i8, %8, %8
%10:i8 = phi %5, %9, 1:i8, 0:i8, %9
%11:i8 = phi %0, %4, %10, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = phi %0, 0:i64, %1
%3:i64 = sub %2, %2
%4:i64 = ashrexact %3, 2:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 246:i32, 86:i32
%4:i32 = select %2, 276:i32, 116:i32
%5:i32 = phi %1, %3, %4
%6 = block 2
%7:i32 = phi %6, %3, %4
%8:i32 = phi %0, %5, %5, %7, %3, %3, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (zn)
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %1, %2, %4
%6:i32 = addnsw 1:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 4
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 14:i32, %1
%3:i8 = zext %2
%4 = block 3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %4, 0:i8, %6, 0:i8
%8:i8 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = phi %1, 0:i1, 1:i1
%3:i32 = select %2, 2:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 0:i32, 2:i32
%6 = block 2
%7:i32 = phi %6, 0:i32, 2:i32
%8:i32 = phi %0, %3, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 9
%2:i32 = phi %1, 0:i32, 0:i32, 1522:i32, 1522:i32, 1525:i32, 1521:i32, 1522:i32, 1523:i32, 1524:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 5:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2:i32, 4:i32
%3:i32 = phi %0, %2, 0:i32
%4:i32 = var
%5:i1 = ne 0:i32, %4
%6:i32 = zext %5
%7:i32 = or %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4 = block 4
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, 0:i8, %5, 0:i8
%7:i8 = phi %2, %6, 0:i8
%8:i8 = phi %1, %7, %6
%9:i8 = phi %0, 0:i8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 4293:i32, 4293:i32, 4292:i32, 4292:i32
%4:i32 = phi %1, %3, 4292:i32
%5:i32 = phi %0, %4, 4292:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2:i8 = var (0000000x) (n)
%3:i8 = xor 1:i8, %2
%4:i8 = phi %0, 2:i8, %1, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 28:i32, 36:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 8:i32, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 3
%7:i32 = phi %6, 1:i32, 0:i32, 1:i32
%8 = block 2
%9 = block 4
%10:i32 = var (000000000000000000000000000000xx) (zn)
%11:i32 = phi %8, %10, 1:i32
%12:i32 = phi %1, 0:i32, %5, %7, 1:i32, %11
%13:i32 = phi %0, 1:i32, 0:i32, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 21
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3:i8 = phi %2, 0:i8, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8, 0:i8, 0:i8
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i64 = phi %1, 4:i64, 0:i64
%3:i64 = phi %0, 0:i64, 4:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i64 = var (0000000000000000000000000000000000000000000000000000000000000x10) (zn)
%4 = block 2
%5:i64 = var (0000000000000000000000000000000000000000000000000000000000000x00) (n)
%6:i64 = phi %2, %3, %5
%7:i64 = or 1:i64, %6
%8:i64 = phi %1, %7, %6
%9:i64 = phi %0, 8:i64, 0:i64, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, 2:i32, %4
%6:i32 = phi %1, 2:i32, %5
%7:i32 = phi %0, %6, 2:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (xxxxxx00)
%2:i8 = and 4:i8, %1
%3:i8 = or 1:i8, %2
%4:i8 = phi %0, %3, 5:i8
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 3
%2:i8 = phi %1, 14:i8, 15:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, 16:i8, 13:i8, 12:i8, 11:i8, 10:i8, 9:i8, 8:i8, 7:i8, 6:i8, 5:i8, 4:i8, 3:i8, 2:i8, 1:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 3
%4:i8 = phi %3, 1:i8, 0:i8, 0:i8
%5:i8 = phi %2, 0:i8, %4
%6:i8 = phi %1, %5, %5, %4
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 3
%4 = block 3
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 1:i32, 0:i32, %6
%8:i32 = phi %3, 1:i32, 0:i32, %7
%9:i32 = phi %0, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i64 = var
%2:i64 = var
%3:i1 = eq %1, %2
%4:i8 = zext %3
%5 = block 3
%6:i8 = phi %5, 1:i8, 0:i8, 0:i8
%7:i8 = phi %0, %4, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i16 = var (00000000000000x0) (n)
%2:i16 = lshrexact %1, 1:i16
%3:i8 = trunc %2
%4 = block 3
%5:i1 = var
%6:i1 = var
%7:i1 = phi %4, 1:i1, %5, %6
%8:i8 = zext %7
%9:i8 = phi %0, %3, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 9
%2:i32 = phi %1, 0:i32, 0:i32, 1522:i32, 1522:i32, 1523:i32, 1524:i32, 1522:i32, 1521:i32, 1525:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 2:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 0:i32, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, 0:i8, %5
%7:i8 = phi %0, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var
%2:i8 = and 15:i8, %1
%3:i8 = or 16:i8, %2
%4:i8 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7:i32 = phi %0, 1:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4, 1:i32
%6:i32 = phi %1, 1:i32, %5, 0:i32
%7:i32 = phi %0, 1:i32, 1:i32, %6, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = zext %2
%4:i32 = subnsw 2:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 5
%3 = block 2
%4:i8 = var (0000000x) (n)
%5 = block 2
%6:i8 = var (0000000x) (n)
%7 = block 2
%8:i8 = var (0000000x) (n)
%9 = block 2
%10:i8 = var (0000000x) (n)
%11:i8 = phi %2, %4, %6, %8, %10, 0:i8
%12:i8 = phi %1, 0:i8, %11, %11
%13 = block 2
%14:i8 = phi %13, 0:i8, %12
%15:i8 = phi %0, %12, 0:i8, 1:i8, %12, %14
infer %15

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000100x) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 2:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 35
%1 = block 3
%2 = block 5
%3:i32 = phi %2, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32
%5 = block 2
%6 = block 4
%7:i32 = phi %6, 1:i32, 0:i32, 0:i32, 0:i32
%8:i32 = phi %5, %7, 1:i32
%9:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %4, 1:i32, 1:i32, %8, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 1:i32, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2 = block 2
%3:i1 = var
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 0:i32
%7:i32 = select %3, 16:i32, %6
%8:i32 = phi %2, %7, %6
%9:i32 = select %1, 32:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %1, 0:i32, %3, %5, %7
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11:i32 = phi %0, 1:i32, 1:i32, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var (000000000000000000000000000000xx) (n)
%3:i32 = shlnw %2, 1:i32
%4:i32 = or 1:i32, %3
%5 = block 7
%6:i32 = phi %5, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32
%7:i32 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (000000000000000000000000xxxxxxxx) (n)
%1:i32 = var (00000x000000xxxx0xxx000000000000) (n)
%2:i32 = or %0, %1
%3:i32 = shl %2, 16:i32
%4:i32 = var (000000000000xxxx0000000000000000) (n)
%5:i32 = var (00000x00000000000000000000000000) (n)
%6:i32 = or %4, %5
%7:i32 = lshrexact %6, 16:i32
%8:i32 = or %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 0:i32, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i1 = var
%3:i32 = select %2, 7566:i32, 1751:i32
%4:i32 = select %1, 7532:i32, %3
%5:i32 = select %2, 7565:i32, 1750:i32
%6:i32 = select %1, 7529:i32, %5
%7:i32 = phi %0, 7531:i32, %4, 7528:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000000000000000000000000001x0000000) (zn)
%3 = block 2
%4:i64 = var (00000000000000000000000000000000000000000000000000000000x0000000) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 4:i64, %5
%7:i64 = phi %0, %6, %5
%8:i64 = or 16:i64, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000100100xxx0x01) (zn)
%5:i32 = phi %2, %4, 0:i32, 0:i32
%6:i32 = phi %1, %5, 0:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i8 = phi %1, %3, %5
%7:i8 = phi %0, %6, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 4
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6 = block 3
%7 = block 3
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8, 1:i32
%10:i32 = phi %3, 0:i32, 1:i32, %5, %9
%11:i32 = phi %0, 0:i32, %2, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4, 0:i8
%6 = block 2
%7:i8 = phi %6, 0:i8, %5
%8:i8 = phi %1, %5, %5, %7, %5
%9 = block 2
%10:i8 = phi %9, 1:i8, %8
%11:i8 = phi %0, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = shlnw %2, 1:i32
%4:i32 = or %1, %3
%5:i32 = shl %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 5:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 6
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %4, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %6
%8:i32 = phi %3, 0:i32, %7
%9:i32 = phi %0, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 31
%1:i1 = var
%2:i32 = select %1, 2:i32, 1:i32
%3:i1 = var
%4:i32 = select %3, 2:i32, 1:i32
%5:i1 = var
%6:i32 = select %5, 2:i32, 1:i32
%7:i1 = var
%8:i32 = select %7, 2:i32, 1:i32
%9:i1 = var
%10:i32 = select %9, 2:i32, 1:i32
%11 = block 2
%12:i1 = var
%13:i32 = select %12, 2:i32, 1:i32
%14:i32 = phi %11, 0:i32, %13
%15 = block 2
%16:i1 = var
%17:i32 = select %16, 2:i32, 1:i32
%18:i32 = phi %15, 0:i32, %17
%19:i1 = var
%20:i32 = select %19, 2:i32, 1:i32
%21:i1 = var
%22:i32 = select %21, 2:i32, 1:i32
%23:i1 = var
%24:i32 = select %23, 2:i32, 1:i32
%25:i1 = var
%26:i32 = select %25, 2:i32, 1:i32
%27:i1 = var
%28:i32 = select %27, 2:i32, 1:i32
%29:i1 = var
%30:i32 = select %29, 2:i32, 1:i32
%31:i1 = var
%32:i32 = select %31, 2:i32, 1:i32
%33:i1 = var
%34:i32 = select %33, 2:i32, 1:i32
%35:i1 = var
%36:i32 = select %35, 2:i32, 1:i32
%37:i1 = var
%38:i32 = select %37, 2:i32, 1:i32
%39:i1 = var
%40:i32 = select %39, 2:i32, 1:i32
%41:i1 = var
%42:i32 = select %41, 2:i32, 1:i32
%43:i1 = var
%44:i32 = select %43, 2:i32, 1:i32
%45:i1 = var
%46:i32 = select %45, 2:i32, 1:i32
%47:i1 = var
%48:i32 = select %47, 2:i32, 1:i32
%49:i1 = var
%50:i32 = select %49, 2:i32, 1:i32
%51:i1 = var
%52:i32 = select %51, 2:i32, 1:i32
%53:i1 = var
%54:i32 = select %53, 2:i32, 1:i32
%55:i32 = phi %0, 0:i32, %2, 1:i32, %4, %6, %8, %10, %14, 0:i32, %18, 0:i32, %20, %22, %24, %26, %28, %30, %32, %34, %36, %38, %40, %42, %44, 1:i32, 1:i32, %46, %48, %50, %52, %54
infer %55

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i1 = var
%4:i1 = phi %1, %2, %3, 0:i1
%5:i8 = zext %4
%6 = block 2
%7:i8 = phi %6, 1:i8, %5
%8:i8 = phi %0, %5, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = var (0000000000001xx00000000000000000) (zn)
%4:i32 = var (0000000000001xx00000000000000001) (zn)
%5:i32 = phi %1, %3, %4
%6:i32 = or 2:i32, %5
%7:i32 = phi %0, %5, %6
%8:i32 = or 4:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 128:i32, 64:i32
%3:i32 = phi %0, 64:i32, %2, 256:i32, 64:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 19
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 21
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000010x) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 2:i32, %5
%7:i32 = phi %0, %6, %5
%8:i32 = or 8:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 25
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %3, %4
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %1, %5, %7, %5
%9 = block 2
%10 = block 2
%11:i1 = var
%12:i8 = zext %11
%13:i1 = var
%14:i8 = zext %13
%15:i8 = phi %9, %12, %14
%16:i1 = var
%17:i8 = zext %16
%18:i8 = phi %0, %8, %15, %17, %15
infer %18

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, 0:i8, %3
%5 = block 3
%6:i8 = var (0000000x) (n)
%7:i8 = phi %5, 0:i8, 0:i8, %6
%8:i8 = phi %0, %4, 0:i8, 0:i8, %7, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 5
%2:i32 = var (000000000000xx010000000000000000) (zn)
%3:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%4:i32 = or %2, %3
%5:i32 = or 1:i32, %4
%6:i32 = var (000000000000000000000000xxxxxx00) (n)
%7:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%8:i32 = or %6, %7
%9:i32 = var (000000000000000000000000xxxxxxxx) (n)
%10:i32 = shlnw %9, 16:i32
%11:i32 = or %8, %10
%12:i32 = or 1:i32, %11
%13 = block 7
%14:i32 = var (000000000000xx000000000000000000) (zn)
%15:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%16:i32 = or %14, %15
%17:i32 = or 1:i32, %16
%18:i32 = phi %0, %5, %5, %4, %4, %11, %11, %11, %11, %11, %11, %12, %12, %17, %17, %16, %16
infer %18

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 8:i32, 0:i32, 3:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 3
%3:i1 = var
%4:i32 = zext %3
%5:i32 = phi %1, 0:i32, %4
%6:i32 = phi %0, 0:i32, 0:i32, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 2077:i32, 2075:i32
%3:i32 = phi %0, 2076:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
%4:i32 = addnsw 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i64 = zext %1
%3:i64 = shlnw %2, 4:i64
%4:i64 = mulnw 12:i64, %2
%5:i64 = phi %0, %3, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, 2:i32, %4, 2:i32
%6:i32 = phi %1, 2:i32, 2:i32, 2:i32, %5
%7:i32 = phi %0, %6, 2:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i1 = var
%2:i64 = var
%3:i64 = var
%4:i64 = select %1, %2, %3
%5:i64 = phi %0, %4, %2, %2, %2, %2, %2, %2, %2, %2
%6:i64 = add 18446744073709551614:i64, %5
%7:i1 = ult %5, %6
%8:i64 = select %7, %5, %6
%9:i64 = sub %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, 1:i8, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 17
%2 = block 3
%3:i1 = var
%4:i64 = var (000000000000000000000000000000000000000000000000000000000000000x) (n)
%5:i64 = select %3, 2:i64, %4
%6:i64 = phi %1, 0:i64, 2:i64, 2:i64, 2:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %5, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
%7:i64 = phi %0, %6, 2:i64
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4 = block 4
%5:i8 = phi %4, 1:i8, 0:i8, 0:i8, 0:i8
%6 = block 4
%7 = block 3
%8:i8 = var (0000000x) (n)
%9:i8 = phi %6, 0:i8, 1:i8, %8, 0:i8
%10:i8 = phi %1, %3, %5, %9
%11:i8 = phi %0, %10, %10, 0:i8
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 4:i32, 1:i32
%4 = block 7
%5 = block 2
%6:i32 = var (00000000000000000000000000000x00) (n)
%7 = block 2
%8:i32 = var (00000000000000000000000000000x00) (n)
%9:i32 = phi %4, 3:i32, %6, 2:i32, 4:i32, %8, 4:i32, 0:i32
%10:i32 = phi %1, 0:i32, %3, %9
%11:i32 = phi %0, 0:i32, 0:i32, 3:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var (xxxxxxx0)
%2:i8 = and 2:i8, %1
%3:i8 = xor 2:i8, %2
%4:i8 = addnw 2:i8, %3
%5:i8 = addnw 2:i8, %2
%6:i8 = phi %0, %4, 4:i8, %4, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 2:i32, 3:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, %2, 0:i8
%5:i8 = phi %0, %2, %4, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 17
%2 = block 12
%3:i64 = var
%4:i64 = var
%5:i64 = phi %1, 6:i64, 5:i64, 4:i64, %3, %3, %3, %3, %3, %3, %3, 7:i64, %3, %3, %3, %3, %4, %4
%6:i64 = phi %0, %5, 3:i64, 3:i64, 3:i64, 5:i64, 4:i64, 4:i64, 4:i64, 4:i64, 5:i64, 5:i64, 6:i64, 7:i64, 3:i64, 4:i64, 4:i64
%7:i64 = add 18446744073709551614:i64, %6
%8:i1 = ult %6, %7
%9:i64 = select %8, %6, %7
%10:i64 = sub %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5 = block 2
%6 = block 2
%7:i8 = phi %6, 1:i8, 0:i8
%8:i8 = phi %5, 1:i8, %7
%9 = block 3
%10 = block 2
%11 = block 2
%12:i8 = var (0000000x) (n)
%13:i8 = phi %10, 1:i8, %12
%14:i8 = phi %9, %13, 1:i8, %13
%15 = block 6
%16 = block 2
%17:i8 = phi %16, 1:i8, 0:i8
%18:i8 = phi %15, 0:i8, %17, %17, %17, %17, %17
%19 = block 2
%20:i8 = phi %19, 1:i8, 0:i8
%21 = block 2
%22:i8 = phi %21, 1:i8, 0:i8
%23 = block 2
%24 = block 2
%25:i8 = phi %24, 1:i8, 0:i8
%26:i8 = phi %23, 1:i8, %25
%27:i8 = phi %0, 0:i8, 1:i8, 0:i8, %4, %8, %14, %18, 0:i8, %20, 0:i8, 1:i8, %22, %26, 0:i8, 0:i8, 0:i8
infer %27

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 6:i32, 5:i32
%3:i32 = phi %0, 4:i32, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = eq 0:i32, %1
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %3, %4, 0:i32
%6:i32 = select %2, 16:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (0000000xxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%2:i32 = var (00000000000000000000000x00000000) (n)
%3:i32 = or %1, %2
%4:i32 = var (0000000000000000xxxxxxxxxxxxxxxx) (n)
%5:i32 = shlnw %4, 9:i32
%6:i32 = phi %0, %3, %5
%7:i32 = var (0000000000000000000000000000000x) (n)
%8:i32 = shlnw %7, 13:i32
%9:i32 = phi %0, %8, 8192:i32
%10:i32 = or %6, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 6:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 6
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, 2:i32, 0:i32, 2:i32, 2:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 4:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32
%3:i32 = phi %0, 3:i32, 6:i32, 4:i32, 11:i32, 10:i32, 9:i32, 8:i32, 7:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 6
%3:i32 = phi %2, 0:i32, 2:i32, 1:i32, 2:i32, 2:i32, 2:i32
%4:i32 = phi %1, 0:i32, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 2:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 3
%2 = block 10
%3:i32 = phi %2, 4:i32, 3:i32, 4:i32, 2:i32, 4:i32, 4:i32, 4:i32, 4:i32, 4:i32, 4:i32
%4:i32 = phi %1, %3, 4:i32, 4:i32
%5:i32 = phi %0, 4:i32, 4:i32, 2:i32, 0:i32, 1:i32, %4, 4:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 3:i32, 1:i32, 0:i32
%3:i32 = phi %0, 3:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (00000000000000000000000000xxxxxx) (n)
%2:i32 = subnsw 64:i32, %1
%3:i16 = trunc %2
%4:i1 = var
%5:i16 = zext %4
%6:i16 = addnw %5, %3
%7:i16 = phi %0, %3, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 2:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8, 0:i8
%4:i8 = xor 1:i8, %3
%5:i8 = phi %1, %4, %3
%6:i8 = phi %0, %5, %5, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000000000000000000000000000x0x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, 1:i8
%5:i8 = phi %0, 0:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 128:i64, 0:i64
%3:i64 = or 256:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = or 4:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i16 = var (000000000000001x) (zn)
%3:i16 = var (000000000000000x) (n)
%4:i16 = select %1, %2, %3
%5:i16 = or 16:i16, %4
%6:i16 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = trunc %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 302:i32, 303:i32
%3:i32 = phi %0, 303:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 5
%2:i64 = phi %1, 1:i64, 2:i64, 2:i64, 2:i64, 1:i64
%3:i64 = phi %0, %2, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64, 1:i64
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = var (0000000000000000000000000000010x) (zn)
%4:i32 = select %1, %2, %3
%5:i32 = or 2:i32, %4
%6:i32 = phi %0, %5, %4
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, 1:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 8
%2:i1 = var
%3:i8 = zext %2
%4:i1 = var
%5:i8 = zext %4
%6:i1 = var
%7:i8 = zext %6
%8:i1 = var
%9:i8 = zext %8
%10:i1 = var
%11:i8 = zext %10
%12:i1 = var
%13:i8 = zext %12
%14:i1 = var
%15:i8 = zext %14
%16:i1 = var
%17:i8 = zext %16
%18:i8 = phi %1, %3, %5, %7, %9, %11, %13, %15, %17
%19:i8 = phi %0, %18, %17
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 3
%2 = block 5
%3:i32 = var (00000000000000000000000000000xxx) (n)
%4:i32 = phi %1, 3:i32, %3, 1:i32
%5:i32 = or 16:i32, %4
%6:i32 = or 32:i32, %4
%7:i32 = or 112:i32, %4
%8:i32 = or 96:i32, %4
%9:i32 = or 80:i32, %4
%10:i32 = or 64:i32, %4
%11:i32 = or 48:i32, %4
%12:i32 = phi %0, %5, %6, %7, %8, %9, %10, %11, %4
%13:i32 = or 256:i32, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2:i32 = phi %1, 3:i32, 1:i32, 3:i32, 1:i32, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32, 1:i32, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5:i32 = var
%6:i1 = eq 1:i32, %5
%7:i8 = zext %6
%8:i8 = phi %0, 0:i8, 0:i8, %4, %7, 0:i8
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 4
%3 = block 2
%4:i32 = var (000000000000000000000000000000xx) (zn)
%5:i32 = phi %2, 1:i32, %4, 1:i32, 1:i32
%6:i32 = phi %1, %5, 1:i32, 1:i32
%7:i32 = phi %0, %6, %5, 1:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 6
%2 = block 6
%3:i64 = var
%4:i64 = var
%5:i64 = phi %1, %3, %3, %3, %3, %3, %4
%6:i64 = var
%7:i64 = sub %5, %6
%8:i64 = phi %0, %5, %5, %5, %5, 0:i64, 0:i64, 0:i64, %7
%9:i64 = var (00000000000000000000000000000000000000000000000000000000000000xx) (znp)
%10:i64 = sub %8, %9
%11:i1 = ult %8, %10
%12:i64 = select %11, %8, %10
%13:i64 = sub %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 1:i8
%3:i1 = var
%4:i8 = zext %3
%5 = block 2
%6:i8 = phi %5, 0:i8, 1:i8
%7:i8 = phi %0, %2, %4, 0:i8, 0:i8, %6, 1:i8, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3, %3
%5:i8 = phi %1, %4, 1:i8, %4, %4
%6:i8 = phi %0, %5, 1:i8, 0:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, 2:i32, %4
%6:i32 = phi %1, %5, 2:i32
%7:i32 = phi %0, %6, 2:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 3:i32, 1:i32, 1:i32
%3 = block 3
%4:i32 = phi %3, 3:i32, 1:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 2:i32, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var (000000000000000000000000xxxxxx00) (n)
%2:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%3:i32 = or %1, %2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %3, %5
%7:i32 = or 1:i32, %6
%8:i32 = phi %0, %6, %6, %7, %7, %6, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3:i32 = phi %2, 0:i32, 2:i32, 3:i32, 1:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i8 = phi %0, 1:i8, 0:i8, 0:i8, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i8 = xor 1:i8, %1
%3:i32 = zext %2
%4 = block 4
%5:i32 = phi %4, 1:i32, 0:i32, 0:i32, 0:i32
%6:i32 = phi %0, %3, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 6:i32, 0:i32
%4:i32 = phi %1, %3, 11:i32
%5:i32 = phi %0, 11:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3 = block 2
%4:i32 = var (0000000000000000000000000000xxxx) (zn)
%5:i32 = select %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %2, 0:i32, 2:i32, %4
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 17
%2 = block 3
%3:i1 = var
%4:i32 = var (00000000000000000000000x0xx0000x) (n)
%5:i32 = select %3, 347:i32, %4
%6:i32 = phi %1, 0:i32, 354:i32, 356:i32, 355:i32, 348:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %5, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%7 = block 2
%8:i32 = phi %7, %6, 354:i32
%9:i32 = phi %0, %6, %8, %8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 1:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (000000000000000000000000000x0100) (zn)
%3:i32 = var (000000000000000000000001000x0100) (zn)
%4 = block 2
%5:i32 = var (000000000000000000000000000x0000) (n)
%6:i32 = phi %1, %2, %3, %5
%7:i32 = or 32:i32, %6
%8:i32 = phi %0, %7, %6
%9:i32 = or 2:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 12:i32, 0:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, %2
%5:i8 = phi %0, %2, %2, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, %2, 0:i32
%5:i32 = phi %0, 1:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = var (00000000000000000000000000000x0x) (n)
%3:i32 = phi %1, %2, 2:i32, 2:i32
%4:i32 = phi %0, 2:i32, 2:i32, 2:i32, %3, 2:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 6
%2 = block 4
%3:i32 = phi %2, 2:i32, 5:i32, 0:i32, 4:i32
%4:i32 = phi %1, %3, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%5:i32 = phi %0, 0:i32, 8:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (00000000000000000000000000000xx0) (znp)
%4:i32 = phi %2, %3, 0:i32
%5:i32 = phi %1, %4, 0:i32
%6:i32 = phi %0, %5, %4
%7:i32 = shlnsw %6, 24:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10:i32 = phi %1, %3, %5, %7, %9
%11:i32 = phi %0, %10, 0:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 32:i32, 0:i32
%3:i32 = or 128:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 5
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, 1:i32
%6:i32 = phi %1, %5, 1:i32
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 0:i32, %2
%4:i32 = addnsw 6:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, 0:i32, %5
%7:i32 = phi %0, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 1:i32
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i16 = var (0000000000000xxx) (zn)
%4:i16 = var (0000000000001xxx) (zn)
%5:i16 = select %2, %3, %4
%6:i16 = or 16:i16, %5
%7:i16 = phi %0, %5, %6
%8:i1 = ult 511:i16, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3, 1:i8
%5:i8 = phi %1, %4, 0:i8, 0:i8
%6:i8 = phi %0, %5, 1:i8, 1:i8, 1:i8, 1:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i1 = var
%3:i32 = zext %2
%4:i32 = phi %1, 1:i32, 1:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, %4, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 32
%1 = block 2
%2:i32 = phi %1, 45:i32, 44:i32
%3 = block 3
%4:i32 = phi %3, 41:i32, 20:i32, 20:i32
%5:i1 = var
%6:i32 = select %5, 50:i32, 51:i32
%7:i32 = phi %0, 3:i32, 2:i32, 23:i32, 34:i32, 36:i32, 38:i32, 46:i32, %2, %2, %4, %4, 19:i32, 47:i32, 15:i32, 52:i32, %6, 49:i32, 48:i32, 39:i32, 13:i32, 31:i32, 12:i32, 11:i32, 10:i32, 28:i32, 8:i32, 7:i32, 6:i32, 29:i32, 27:i32, 26:i32, 43:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 32:i32, 0:i32
%3:i32 = or 128:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 18:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, 1:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 0:i32, 1:i32, 2:i32, 2:i32
%3:i32 = phi %0, 2:i32, 2:i32, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 2:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3, 2:i32
%5:i32 = phi %0, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2:i8 = phi %1, 0:i8, 0:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 4:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 5:i32
%3:i32 = phi %0, 1:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i1 = var
%3 = block 6
%4:i8 = phi %3, 1:i8, 0:i8, 1:i8, 0:i8, 0:i8, 1:i8
%5:i8 = select %2, %4, 0:i8
%6:i8 = phi %1, %5, %4
%7 = block 5
%8:i64 = var
%9:i1 = ne 0:i64, %8
%10:i8 = select %9, 0:i8, %6
%11:i8 = phi %0, %6, 0:i8, 0:i8, %6, %6, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (00000010xxxxxxxx0000000000000000) (zn)
%3:i32 = var (00000011xxxxxxxxxxx0000000000000) (zn)
%4:i32 = phi %1, %2, %3
%5:i32 = var (xxxxxxxxxxxxxxxxxxxxxx0000000000)
%6:i32 = and 7168:i32, %5
%7:i32 = or %4, %6
%8:i32 = var
%9:i32 = and 1023:i32, %8
%10:i32 = or %9, %7
%11:i32 = phi %0, %7, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 4
%3 = block 4
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4, %4, %4
%6:i8 = phi %1, 0:i8, %5, %5, %5
%7:i8 = phi %0, 1:i8, %6, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = zext %1
%3:i32 = shl 8:i32, %2
%4:i32 = addnsw 4294967295:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5 = block 3
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %5, %7, %7, 0:i8
%9:i8 = phi %0, %4, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, %3, 2:i32
%5:i32 = phi %0, 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i32 = zext %2
%4:i32 = phi %1, 0:i32, 1:i32, %3
%5:i32 = phi %0, %4, 2:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 6:i32, 1:i32
%3:i32 = phi %0, 6:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, %2, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i16 = var
%3:i32 = zext %2
%4:i32 = phi %1, %3, 0:i32, 0:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 1:i32, %2, 8:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 3
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 1:i32, 0:i32, %5
%7:i32 = phi %0, 1:i32, 1:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %3, %5, 0:i8
%7:i8 = phi %2, 1:i8, %6, %6
%8:i8 = phi %1, %7, %6
%9 = block 3
%10 = block 3
%11:i8 = phi %10, 1:i8, %8, %8
%12:i8 = phi %9, %8, %8, %11
%13:i8 = phi %0, %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 5:i32
%4:i32 = phi %1, %3, 5:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 10
%1 = block 12
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, %2, 0:i8, 0:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (00000000000000000000000000000x00) (n)
%5:i32 = phi %2, %4, 5:i32
%6:i32 = phi %1, %5, 5:i32
%7:i32 = phi %0, 0:i32, %6, 8:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000001x) (zn)
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 1:i32, %5
%7:i32 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4 = block 2
%5:i32 = var (000000000000000000000000000000xx) (n)
%6:i32 = phi %4, %5, 2:i32
%7:i32 = phi %0, 2:i32, %3, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, 2:i32, %2, 2:i32, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1:i32 = var (000000000000000000000000000000xx) (n)
%2:i32 = phi %0, 1:i32, 0:i32, 1:i32, 1:i32, 1:i32, %1, 2:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%3:i16 = trunc %2
%4:i16 = shlnw %3, 2:i16
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 16:i32, 0:i32
%3:i32 = or 32:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 5
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, 0:i8, 1:i8, 0:i8, %4
%6:i8 = phi %1, 0:i8, %5, %5
%7:i8 = phi %0, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i1 = phi %1, 0:i1, 1:i1, %2
%4:i8 = zext %3
%5 = block 2
%6 = block 2
%7:i8 = phi %6, 1:i8, %4
%8:i8 = phi %5, 1:i8, %7
%9:i8 = phi %0, %4, %8, %4
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 35:i32, 65:i32, 50:i32, 50:i32
%3:i32 = phi %0, 34:i32, 80:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 3
%6:i32 = phi %5, 1:i32, 0:i32, 1:i32
%7 = block 2
%8 = block 4
%9:i32 = phi %8, 1:i32, 1:i32, 2:i32, 1:i32
%10:i32 = phi %7, %9, 1:i32
%11:i32 = phi %0, 0:i32, %4, %6, 1:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i32 = and 4095:i32, %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = var
%6:i32 = lshr %5, 8:i32
%7:i32 = and 4095:i32, %6
%8 = block 3
%9:i32 = var
%10:i1 = eq 0:i32, %9
%11:i32 = var (00000000xxxxxxxxxxxxxxxxxxxxxxxx) (n)
%12:i32 = and 4095:i32, %11
%13:i32 = select %10, %12, %4
%14:i32 = phi %0, %4, %7, %13
infer %14

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, %5
%7:i32 = phi %0, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3 = block 2
%4 = block 3
%5:i32 = phi %4, 1:i32, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7:i32 = phi %0, 0:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 0:i32, 4:i32, 2:i32, 3:i32
%3:i32 = phi %0, %2, 4:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 7
%1 = block 9
%2 = block 7
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8
%4 = block 4
%5:i8 = phi %4, 1:i8, 1:i8, 0:i8, 0:i8
%6:i8 = phi %1, %3, 1:i8, 1:i8, %5, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%7:i8 = phi %0, 1:i8, 1:i8, 1:i8, 1:i8, %6, 1:i8, 1:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2, 1:i8, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (00000000000000000000000000000xxx) (n)
%3:i32 = phi %1, %2, 6:i32
%4 = block 2
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %5, %6, 4:i32
%8:i32 = phi %4, 0:i32, %7
%9:i32 = phi %0, 0:i32, %3, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = xor 1:i32, %2
%4:i32 = phi %1, %3, 1:i32
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = xor 1:i32, %6
%8:i32 = phi %5, %7, 1:i32
%9 = block 2
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = xor 1:i32, %10
%12:i32 = phi %9, %11, 1:i32
%13 = block 2
%14:i32 = var (0000000000000000000000000000000x) (n)
%15:i32 = xor 1:i32, %14
%16:i32 = phi %13, %15, 1:i32
%17 = block 2
%18 = block 2
%19:i32 = var (0000000000000000000000000000000x) (n)
%20:i32 = phi %18, %19, 1:i32
%21:i32 = var (0000000000000000000000000000000x) (n)
%22:i32 = xor 1:i32, %21
%23:i32 = phi %17, %20, %22
%24 = block 2
%25:i32 = var (0000000000000000000000000000000x) (n)
%26:i32 = xor 1:i32, %25
%27 = block 2
%28:i32 = var (0000000000000000000000000000000x) (n)
%29:i32 = phi %27, 1:i32, %28
%30:i32 = phi %24, %26, %29
%31:i32 = phi %0, %4, %8, 1:i32, 1:i32, %12, %16, 1:i32, 1:i32, %23, %30, 1:i32
infer %31

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 0:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = phi %1, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, %2, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i8 = var (0000000x) (n)
%3:i8 = phi %1, %2, %2, 0:i8
%4:i8 = phi %0, 0:i8, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i1 = var
%3:i32 = select %2, 2:i32, 3:i32
%4:i1 = var
%5:i32 = select %4, 2:i32, 3:i32
%6:i32 = phi %1, 1:i32, %3, 1:i32, 2:i32, 3:i32, 1:i32, %5
%7:i32 = phi %0, 4:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = phi %1, %4, 1:i8
%6:i8 = phi %0, 1:i8, %5, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = urem %1, 15:i32
%3:i32 = urem %1, 9:i32
%4:i32 = or 32:i32, %3
%5:i32 = phi %0, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 17:i32, 1:i32
%3:i32 = or 4:i32, %2
%4:i32 = or 260:i32, %2
%5:i32 = phi %0, %3, %4, %2
%6:i32 = or 2:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 4
%4:i8 = phi %3, 1:i8, %2, %2, %2
%5:i8 = phi %0, 1:i8, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var (00000000000000000000000000000xx0) (n)
%2:i32 = or 1:i32, %1
%3 = block 7
%4:i32 = phi %3, 0:i32, 1:i32, 2:i32, 3:i32, 4:i32, 5:i32, 6:i32
%5:i32 = phi %0, %2, %4
%6:i32 = addnsw 1:i32, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 34
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2
%4:i32 = select %3, 7850:i32, 7509:i32
%5:i32 = select %3, 7855:i32, 7554:i32
%6:i1 = var
%7:i32 = select %6, 7844:i32, 7842:i32
%8:i32 = select %6, 7643:i32, 7665:i32
%9:i32 = select %6, 7750:i32, 7805:i32
%10:i32 = select %6, 7849:i32, 7847:i32
%11:i32 = select %6, 7498:i32, 7483:i32
%12:i32 = select %6, 7968:i32, 7953:i32
%13:i32 = select %6, 7854:i32, 7852:i32
%14:i32 = select %6, 7541:i32, 7524:i32
%15:i32 = select %6, 8011:i32, 7994:i32
%16:i1 = var
%17:i32 = select %16, 7846:i32, 1787:i32
%18:i32 = select %6, 7843:i32, %17
%19:i32 = select %16, 7669:i32, 1766:i32
%20:i32 = select %6, 7632:i32, %19
%21:i32 = select %16, 7809:i32, 1770:i32
%22:i32 = select %6, 7739:i32, %21
%23:i32 = select %16, 7851:i32, 1790:i32
%24:i32 = select %6, 7848:i32, %23
%25:i32 = select %16, 7520:i32, 1746:i32
%26:i32 = select %6, 7487:i32, %25
%27:i32 = select %16, 7990:i32, 1836:i32
%28:i32 = select %6, 7957:i32, %27
%29:i32 = select %16, 7856:i32, 1791:i32
%30:i32 = select %6, 7853:i32, %29
%31:i32 = select %16, 7565:i32, 1750:i32
%32:i32 = select %6, 7528:i32, %31
%33:i32 = select %16, 8035:i32, 1840:i32
%34:i32 = select %6, 7998:i32, %33
%35:i1 = var
%36:i32 = select %16, 7879:i32, 1803:i32
%37:i32 = select %35, 7871:i32, %36
%38:i32 = select %16, 7949:i32, 1817:i32
%39:i32 = select %35, 7938:i32, %38
%40:i1 = var
%41:i1 = and %40, %3
%42:i32 = select %41, 1788:i32, 1712:i32
%43:i32 = select %41, 1789:i32, 1687:i32
%44:i32 = select %3, 7845:i32, 7654:i32
%45:i32 = phi %0, %4, 7979:i32, %5, 8024:i32, %7, %8, %9, %10, %11, %12, %13, %14, %15, %18, %20, %22, %24, %26, %28, %30, %32, %34, 1792:i32, %37, 2844:i32, 1793:i32, %39, 2843:i32, %42, %43, 1667:i32, 1734:i32, %44, 7761:i32
infer %45

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 7
%2:i32 = phi %1, 3757:i32, 3742:i32, 4033:i32, 3746:i32, 3747:i32, 3740:i32, 3739:i32
%3:i32 = phi %0, %2, 3757:i32, 3757:i32, 3757:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (0000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000) (n)
%3:i64 = phi %1, %2, 0:i64
%4 = block 7
%5:i32 = var
%6:i64 = zext %5
%7:i64 = addnsw %3, %6
%8:i64 = phi %0, %7, %3
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8, 1:i8
%6:i8 = phi %1, %5, 1:i8
%7:i8 = phi %0, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i32 = var (0000000000000000000000000000xxxx) (n)
%2:i1 = eq 15:i32, %1
%3 = block 2
%4:i32 = var (000000000000000000000000000000x1) (zn)
%5:i32 = phi %3, 3:i32, %4
%6:i32 = select %2, 1:i32, %5
%7:i32 = phi %0, 0:i32, %6, 1:i32, 0:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 0:i32, 2:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %1, 0:i8, %4, %4
%6:i8 = phi %0, %5, 1:i8, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 1:i32, 2:i32
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 11
%2 = block 2
%3:i32 = phi %2, 3:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 3:i32
%6 = block 2
%7:i32 = phi %6, 1:i32, 3:i32
%8 = block 2
%9:i32 = phi %8, 1:i32, 3:i32
%10:i32 = phi %1, 0:i32, 1:i32, 1:i32, 1:i32, %3, 1:i32, %5, %7, %9, 1:i32, 1:i32
%11:i32 = phi %0, 0:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i1 = var
%4:i8 = zext %3
%5 = block 8
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %1, %4, %7
%9:i32 = var
%10:i1 = ne 18:i32, %9
%11:i8 = zext %10
%12:i8 = phi %0, %8, %11, %8
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 4
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 0:i32, %4, 1:i32
%6:i32 = phi %1, 1:i32, %5
%7:i32 = phi %0, %6, 1:i32, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, %4
%6:i32 = phi %1, 1:i32, 1:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 2:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i32 = select %1, 4:i32, 1:i32
%3 = block 7
%4 = block 2
%5:i32 = phi %4, 0:i32, 4:i32
%6 = block 2
%7:i32 = phi %6, 4:i32, 0:i32
%8:i32 = phi %3, 3:i32, %5, 2:i32, 4:i32, %7, 4:i32, 0:i32
%9:i32 = phi %0, 0:i32, %2, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 6
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2 = block 3
%3:i32 = phi %2, 3:i32, 2:i32, 3:i32
%4:i32 = phi %1, %3, 1:i32, 4:i32, 2:i32, %3, 1:i32, 4:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 8:i32, %2, 8:i32, 8:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 5:i32, 6:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var (0000000000000000000000000000000x0xxx0000000000000000000000000000) (n)
%1:i1 = eq 0:i64, %0
%2:i32 = var
%3:i1 = slt 4294967295:i32, %2
%4:i1 = and %1, %3
%5 = block 2
%6:i1 = var
%7:i32 = var (0000000000000000000000000000000x) (n)
%8:i32 = var (0000000000000000000000000000010x) (zn)
%9:i32 = select %6, %7, %8
%10:i32 = or 2:i32, %9
%11:i32 = phi %5, %10, %9
%12:i32 = or 8:i32, %11
%13:i32 = select %4, %11, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 0:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000xxxxxxxxxxxxxxxxxxxxxx) (n)
%1:i32 = and 4095:i32, %0
%2:i64 = zext %1
%3 = block 4
%4:i32 = var (000000000000000000000000000000xx) (n)
%5:i32 = phi %3, 4:i32, %4, %4, 0:i32
%6:i64 = zext %5
%7:i64 = shl %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 512:i32, 0:i32
%3:i32 = or 1024:i32, %2
%4:i32 = phi %0, %3, %2, %2
%5:i32 = or 128:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, %2, 0:i1
%4:i8 = zext %3
%5 = block 3
%6:i8 = phi %5, 0:i8, 1:i8, 0:i8
%7:i8 = phi %0, %4, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 2:i32, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 2:i32
%3:i32 = phi %0, 1:i32, %2, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, %3, 2:i32
%5 = block 2
%6:i32 = phi %5, 2:i32, 0:i32
%7:i32 = phi %1, %4, %6
%8:i32 = phi %0, 2:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 12:i32, 9:i32, 16:i32
%4:i32 = phi %1, %3, 16:i32
%5:i32 = phi %0, 16:i32, %4, 9:i32, 12:i32, 16:i32, 13:i32, 12:i32, 11:i32, 10:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 2:i32, 1:i32, 0:i32
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, 0:i64, %3
%5:i64 = phi %0, %4, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 8:i32
%3:i32 = phi %0, %2, 8:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3:i8 = phi %0, %2, %2, %2, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var
%2:i64 = and 4294967295:i64, %1
%3:i64 = and 3:i64, %1
%4:i64 = subnsw %2, %3
%5:i64 = phi %0, %4, 0:i64, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i8 = phi %1, 0:i8, 1:i8, 0:i8, 0:i8
%3:i8 = phi %0, %2, 1:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 0:i32, 2:i32
%4:i32 = phi %1, %3, 2:i32, 2:i32
%5 = block 2
%6:i1 = var
%7:i32 = select %6, 0:i32, 2:i32
%8:i32 = phi %5, %7, 0:i32
%9:i32 = phi %0, 0:i32, %4, 2:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8 = block 2
%9 = block 2
%10:i32 = var (0000000000000000000000000000000x) (n)
%11:i32 = phi %8, 0:i32, %10
%12:i32 = phi %1, 0:i32, %5, %7, %11
%13:i32 = phi %0, 0:i32, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7:i32 = phi %0, 2:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i32 = phi %1, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 32:i32, 0:i32
%3:i32 = or 128:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = var (0000000000000000000000000000xxxx) (zn)
%3:i32 = phi %1, %2, 1:i32, 1:i32, 4:i32
%4:i32 = phi %0, 0:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 12
%1 = block 3
%2:i64 = phi %1, 0:i64, 1:i64, 1:i64
%3:i64 = phi %0, 0:i64, 0:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 2:i64, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i1 = ne 25:i32, %1
%3:i8 = zext %2
%4 = block 3
%5:i8 = phi %4, 0:i8, %3, %3
%6:i8 = phi %0, %3, %5, %3
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 1:i32, 2:i32, 1:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 5
%3:i32 = phi %2, 3:i32, 1:i32, 2:i32, 2:i32, 1:i32
%4:i32 = phi %1, %3, 0:i32, 0:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2:i32 = phi %1, 2:i32, 3:i32
%3:i32 = phi %0, 0:i32, 1:i32, 1:i32, 1:i32, 0:i32, 1:i32, 0:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 2:i32, 2:i32, 0:i32, 0:i32
%3:i32 = phi %0, 2:i32, 2:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, %2, 0:i8
%5 = block 2
%6:i8 = phi %5, 1:i8, %4
%7:i8 = phi %0, %2, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 0:i32, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 7
%2:i32 = var
%3:i32 = and 7:i32, %2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = xor 1:i32, %4
%6:i32 = phi %1, 3:i32, %3, %3, 2:i32, 0:i32, %5, 0:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = phi %0, 25:i8, 33:i8
%2:i32 = zext %1
%3:i32 = addnsw 4294967283:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 4
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8, 1:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, %4, %4, 1:i32
%6 = block 2
%7:i32 = phi %6, %5, 0:i32
%8:i32 = phi %1, %5, %7
%9:i32 = phi %0, %8, 1:i32, 1:i32, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i1 = var
%1:i1 = xor 1:i1, %0
%2:i16 = var (00000000000x0000) (n)
%3:i1 = ne 0:i16, %2
%4:i1 = or %1, %3
%5 = block 2
%6:i16 = var (00xxxxxxxxxxxxxx) (n)
%7:i16 = and 511:i16, %6
%8:i32 = var (00000000000000000000000xxxxxxxxx) (n)
%9:i16 = trunc %8
%10:i16 = phi %5, %7, %9
%11:i16 = or 16:i16, %10
%12:i16 = select %4, %10, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4, %4
%6:i8 = phi %1, 0:i8, %5
%7:i8 = phi %0, %6, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 6
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, %3, 1:i32
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 0:i32, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 17
%1 = block 3
%2:i1 = phi %1, 1:i1, 0:i1, 0:i1
%3:i64 = phi %1, 0:i64, 1:i64, 1:i64
%4:i64 = select %2, 2:i64, %3
%5:i64 = phi %0, 0:i64, 2:i64, 2:i64, 2:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %4, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i64 = select %2, 3797:i64, 3796:i64
%4 = block 2
%5 = block 2
%6:i64 = phi %5, 4064:i64, 4063:i64
%7:i64 = phi %4, %6, 0:i64
%8:i64 = phi %0, %3, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i1 = var
%3:i32 = select %2, 2666:i32, 2665:i32
%4:i32 = select %2, 2642:i32, 2641:i32
%5:i32 = select %2, 2674:i32, 2673:i32
%6:i32 = select %2, 2658:i32, 2657:i32
%7:i32 = select %2, 2682:i32, 2681:i32
%8:i32 = phi %1, %3, %4, %5, %6, %7
%9:i32 = phi %0, %8, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (000000000000000000000000000010x0) (zn)
%3 = block 2
%4:i32 = var (000000000000000000000000000000x0) (n)
%5:i32 = phi %1, %2, %4
%6:i32 = or 1:i32, %5
%7:i32 = phi %0, %5, %6
%8:i32 = or 32:i32, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 114:i32, 115:i32
%4:i32 = phi %1, 115:i32, %3
%5:i32 = phi %0, %4, 275:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, %3, 1:i8
%5:i8 = phi %0, %4, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 3
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = phi %2, 1:i32, 0:i32, %3
%5:i32 = phi %1, %4, 0:i32, 1:i32, 1:i32
%6:i32 = phi %0, %5, 2:i32, 2:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 0:i8, %4, 0:i8
%6 = block 2
%7:i8 = phi %6, 0:i8, %5
%8:i8 = phi %1, %5, %5, %7, %5
%9 = block 2
%10 = block 2
%11:i8 = phi %10, 1:i8, %8
%12:i8 = phi %9, %8, %11
%13:i8 = phi %0, %8, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 0:i32, 1:i32, 1:i32, %3, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2 = block 2
%3 = block 2
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 1:i8
%6:i8 = phi %1, %5, 1:i8, 1:i8, 1:i8, 1:i8
%7:i8 = phi %0, %6, 0:i8, 0:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 2:i32, 1:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5:i8 = phi %0, %4, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = phi %4, %5, %3
%7:i8 = phi %1, %3, %6
%8:i1 = var
%9:i1 = xor 1:i1, %8
%10:i8 = zext %9
%11:i8 = phi %0, %7, %10, 1:i8
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, 4:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = var (0000000000000000000000000000x0xx) (n)
%3:i32 = phi %0, 0:i32, %2, 0:i32
%4:i32 = shl 1:i32, %3
%5:i32 = addnsw 4294967295:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i32 = var
%2:i32 = lshr %1, 29:i32
%3:i32 = or 5:i32, %2
%4:i32 = var (0000000000000000000000000000xxxx) (n)
%5:i32 = and 4:i32, %4
%6:i32 = or 3:i32, %5
%7:i32 = var (0000000000000000000000000000xxxx) (n)
%8:i32 = and 4:i32, %7
%9:i32 = or 3:i32, %8
%10:i32 = phi %0, 0:i32, %3, %6, %9, 0:i32, 1:i32
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = phi %0, 0:i8, %2, 0:i8, 0:i8, %4, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 10
%2:i8 = phi %1, 0:i8, 0:i8, 0:i8, 1:i8, 1:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8
%3:i8 = phi %0, 0:i8, 0:i8, %2, %2, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4, 1:i32, 1:i32, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 8:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = or 2:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 31
%1 = block 6
%2:i1 = var
%3:i32 = select %2, 3:i32, 1:i32
%4:i1 = var
%5:i32 = select %4, 3:i32, 1:i32
%6:i32 = phi %1, 2:i32, %3, 2:i32, %5, %5, 3:i32
%7:i32 = phi %0, 0:i32, %6, %6, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 5
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32, %3
%5:i32 = phi %0, 1:i32, 0:i32, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 4
%3 = block 5
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, 0:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7:i32 = phi %0, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i1 = ult 65535:i32, %1
%3 = block 2
%4:i8 = phi %3, 1:i8, 0:i8
%5:i8 = select %2, 1:i8, %4
%6:i32 = var
%7:i1 = ult 65535:i32, %6
%8:i8 = select %7, 1:i8, %5
%9:i8 = phi %0, %5, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 3
%2:i32 = phi %1, 4:i32, 3:i32, 0:i32
%3:i32 = phi %0, %2, %2, %2, 2:i32, 0:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, %3, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 0:i8, %3
%5:i8 = phi %1, %4, %4, 0:i8, %4
%6:i8 = phi %0, %5, 0:i8, 0:i8, 0:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 314
%1:i32 = phi %0, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 0:i32, 1:i32, 1:i32, 1:i32, 4294967295:i32, 4294967295:i32, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 0:i32, 0:i32, 0:i32, 0:i32, 4294967295:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32, 4294967295:i32
%2:i32 = add 1:i32, %1
infer %2

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var (0000000000000000000000000000xxxx) (zn)
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = subnsw %1, %2
%4:i32 = shl 1:i32, %3
%5:i32 = addnsw 4294967295:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 5
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 1:i32, 0:i32
%3 = block 2
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %3, 0:i32, %5
%7:i32 = phi %0, 1:i32, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8
%5 = block 2
%6:i1 = var
%7:i8 = zext %6
%8:i8 = phi %5, %7, 0:i8
%9:i8 = phi %0, %4, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 2:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 2:i32
%5:i32 = phi %0, %2, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1:i8 = var (0001000x) (zn)
%2:i64 = zext %1
%3:i64 = or 34359738368:i64, %2
%4:i64 = phi %0, %3, %2, %2, %2, %2, %2, %2, %2, %2
%5:i64 = and 18446744000695107584:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 2:i32
%4:i32 = phi %0, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = sub %1, %1
%3:i64 = ashrexact %2, 2:i64
%4:i1 = ult 1:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i8 = phi %1, 1:i8, 1:i8, 0:i8, 1:i8
%3:i8 = phi %0, 0:i8, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, 0:i8
%5:i8 = phi %1, 0:i8, %4, 0:i8
%6 = block 2
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %6, %8, %5
%10:i8 = phi %0, %5, %5, %9, %5
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1:i8 = var (0000000x) (n)
%2:i1 = ne 0:i8, %1
%3:i32 = select %2, 3:i32, 0:i32
%4 = block 4
%5:i1 = var
%6:i32 = select %5, 3:i32, 0:i32
%7:i32 = phi %4, 1:i32, %6, 2:i32, 0:i32
%8:i32 = phi %0, 0:i32, 2:i32, %3, %7, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 31
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8
%3:i8 = phi %0, 0:i8, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i64 = var (00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%2:i64 = and 4611686018427387900:i64, %1
%3:i64 = or 1:i64, %2
%4:i64 = phi %0, %3, 1:i64, 1:i64, 1:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 1:i32, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, 1:i32, %3
%5 = block 2
%6:i32 = phi %5, 1:i32, 0:i32
%7:i32 = phi %0, 0:i32, %4, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 1:i32, %3, %5
%7:i32 = phi %0, %6, 2:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = phi %1, 128:i64, 0:i64
%3:i64 = or 256:i64, %2
%4:i64 = phi %0, %3, %2
%5:i64 = or 16:i64, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2:i32 = phi %1, 3:i32, 3:i32, 1:i32, 0:i32
%3 = block 3
%4:i32 = phi %3, 0:i32, 1:i32, 0:i32
%5:i32 = phi %0, 2:i32, 0:i32, %2, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (znp)
%4 = block 2
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %2, %3, %5
%7:i32 = phi %1, 0:i32, %6
%8:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %7, 0:i32, 0:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 0:i32, 512:i32, 0:i32
%3:i32 = or 1024:i32, %2
%4:i32 = phi %0, %3, %2, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 4
%4:i32 = var (00000000000000000000000000000xx0) (n)
%5:i32 = phi %2, 6:i32, %4
%6:i32 = phi %1, 2:i32, 11:i32, %5
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3, 0:i8, 0:i8
%5:i8 = phi %0, 1:i8, %4, 0:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5 = block 3
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %2, 0:i32, %4, %6
%8:i32 = phi %1, 1:i32, 1:i32, %7
%9 = block 3
%10:i32 = phi %9, 1:i32, 1:i32, 2:i32
%11:i32 = phi %0, %8, %10, 1:i32
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, 1:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 0:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 4
%2 = block 9
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8, 1:i8
%4:i8 = phi %1, %3, 1:i8, 1:i8, 1:i8
%5:i8 = phi %0, %4, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4 = block 2
%5:i32 = phi %4, 0:i32, 1:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7:i32 = phi %0, 0:i32, %6, 1:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 15
%1 = block 3
%2:i1 = phi %1, 1:i1, 0:i1, 0:i1
%3:i64 = phi %1, 0:i64, 1:i64, 1:i64
%4:i64 = select %2, 2:i64, %3
%5:i64 = phi %0, 0:i64, 2:i64, 2:i64, 2:i64, 2:i64, 0:i64, 0:i64, 0:i64, 0:i64, 0:i64, %4, 0:i64, 0:i64, 0:i64, 0:i64
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i8 = zext %1
%3 = block 2
%4:i8 = phi %3, %2, 1:i8
%5:i8 = phi %0, 0:i8, %2, %4
%6:i8 = shlnw %5, 3:i8
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1:i64 = and 255:i64, %0
%2:i64 = var (0000000000000000000000000000000000000000000000000xxx000000000000) (n)
%3:i64 = var (0000000000000000000000000000000000000x00x0x000000000000000000000) (n)
%4:i64 = or %2, %3
%5:i64 = or %1, %4
%6:i32 = trunc %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 0:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 4:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 4:i32, 3:i32, 2:i32, 1:i32, 0:i32
%3:i32 = addnsw 4294967295:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 4:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 2:i32
%4 = block 3
%5:i32 = var (0000000000000000000000000000000x) (n)
%6:i32 = phi %4, %5, 0:i32, 2:i32
%7:i32 = phi %1, %3, %6
%8:i32 = phi %0, %7, 0:i32, 2:i32
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5:i32 = phi %0, 0:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2 = block 19
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 3
%6 = block 2
%7 = block 6
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8
%10 = block 2
%11:i32 = phi %10, 1:i32, 0:i32
%12:i32 = phi %5, 0:i32, %9, %11
%13:i32 = phi %0, 0:i32, 1:i32, %4, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i1 = var
%2:i8 = zext %1
%3 = block 4
%4:i1 = var
%5:i8 = zext %4
%6 = block 4
%7:i8 = var (0000000x) (n)
%8 = block 4
%9:i8 = var (0000000x) (n)
%10:i8 = phi %6, %7, %9, %9, %9
%11:i8 = phi %3, %5, %10, %10, %10
%12:i8 = phi %0, %2, %11, %11, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4 = block 2
%5:i32 = phi %4, 1:i32, 0:i32
%6:i32 = phi %1, 0:i32, %3, %5
%7:i32 = phi %0, 1:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 0:i32, 1:i32
%3:i32 = phi %0, 1:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2, 2:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 4
%2 = block 2
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, 1:i8, %3
%5:i8 = phi %1, 1:i8, %4, %4, %4
%6:i8 = phi %0, %5, 1:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = var
%3:i8 = and 1:i8, %2
%4 = block 2
%5:i8 = var (0000000x) (n)
%6:i8 = or %5, %3
%7:i8 = phi %1, %3, %6
%8 = block 2
%9:i8 = var (0000000x) (n)
%10:i8 = var (0000000x) (n)
%11:i8 = or %9, %10
%12:i8 = phi %8, %7, %11
%13:i8 = phi %0, %7, %12
infer %13

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i32 = select %1, 5:i32, 4:i32
%3:i1 = var
%4:i1 = var
%5:i32 = select %4, 9:i32, 8:i32
%6:i32 = select %4, 7:i32, 6:i32
%7:i32 = select %3, %5, %6
%8:i32 = phi %0, %2, %7
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var (000000000000000000000000000001xx) (zn)
%4 = block 3
%5:i32 = var (000000000000000000000000000011xx) (zn)
%6:i32 = phi %2, %3, %5
%7:i32 = and %1, %6
%8:i32 = phi %0, %7, %6
infer %8

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i32 = var
%5:i32 = lshr %4, 2:i32
%6:i32 = urem %3, %5
infer %6

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 7
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %0, %2, %4, %2, %2, 1:i8, 1:i8, 1:i8
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i128 = var (000000000000000000000000000000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1000000000000000000000000xxxxxxx000000xxxxxxxxxxxxxxxxxxxxxxxxxx) (zn)
%2:i128 = lshr %1, 64:i128
%3:i64 = trunc %2
%4:i64 = phi %0, 0:i64, 0:i64, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 0:i32, 2:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2 = block 2
%3 = block 3
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, %5, %5, 1:i8, %5, %5
%7:i8 = phi %0, 1:i8, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var (0000000000000000000011001101100x) (zn)
%4:i32 = phi %2, %3, 3291:i32
%5 = block 2
%6 = block 2
%7:i32 = var (00000000000000000000xxx11111000x) (zn)
%8:i32 = phi %5, %7, 0:i32
%9:i32 = phi %1, %4, %8
%10:i32 = phi %0, %9, %8
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i64 = var
%1 = block 2
%2:i32 = var
%3:i64 = zext %2
%4:i64 = phi %1, %3, 1:i64
%5:i64 = add %0, %4
%6:i64 = add 18446744073709551615:i64, %5
%7:i64 = urem %6, %4
infer %7

known from Souper:   
known from compiler: n
llvm is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i64 = var (00000000000000000000000000000000000x000000000x0000000001xxx00x00) (zn)
%3 = block 2
%4:i64 = var (00000000000000000000000000000000000x000000000x0000000000xxx00x00) (n)
%5:i64 = phi %1, %2, %4
%6:i64 = or 512:i64, %5
%7:i64 = phi %0, %6, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %2, 0:i8, %4, %4
%6:i8 = phi %1, %5, %4
%7:i8 = phi %0, %6, %4
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4 = block 3
%5:i8 = phi %4, 1:i8, %3, %3
%6:i8 = phi %1, 0:i8, %3, %5
%7 = block 3
%8:i8 = phi %7, 0:i8, %3, %5
%9 = block 3
%10:i8 = phi %9, 0:i8, %3, %5
%11:i8 = phi %0, %6, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2:i1 = var
%3 = block 6
%4 = block 2
%5:i8 = var (0000000x) (n)
%6 = block 2
%7:i8 = var (0000000x) (n)
%8 = block 2
%9:i8 = var (0000000x) (n)
%10 = block 2
%11:i8 = var (0000000x) (n)
%12:i8 = phi %3, %5, %7, %9, %11, 0:i8, 0:i8
%13:i8 = select %2, %12, 0:i8
%14:i8 = phi %1, %13, %12
%15 = block 6
%16:i64 = var
%17:i1 = ne 0:i64, %16
%18:i8 = select %17, 0:i8, %14
%19:i8 = phi %0, %14, 0:i8, 1:i8, %14, %14, %18
infer %19

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 0:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, 1:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1:i1 = var
%2:i8 = zext %1
%3 = block 6
%4:i1 = var
%5:i8 = zext %4
%6 = block 6
%7:i8 = var (0000000x) (n)
%8 = block 6
%9:i8 = var (0000000x) (n)
%10:i8 = phi %6, %7, %9, %9, %9, %9, %9
%11:i8 = phi %3, %5, %10, %10, %10, %10, %10
%12:i8 = phi %0, %2, %11, %11, %11, %11, %11
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, 2:i32, %2
%4:i32 = phi %0, 2:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 1:i8, 0:i8, 0:i8
%4:i8 = phi %1, 0:i8, %3
%5:i8 = phi %0, %4, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 2:i32, 3:i32
%3:i32 = phi %0, 2:i32, %2, 1:i32, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 36:i32, 42:i32
%3:i32 = phi %0, 40:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3 = block 2
%4:i32 = phi %3, 1:i32, 0:i32
%5:i32 = phi %0, 0:i32, %2, %4, 1:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = phi %0, 7:i32, 9:i32, 12:i32
%2:i8 = var
%3:i8 = and 1:i8, %2
%4:i32 = zext %3
%5:i32 = subnsw %1, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 4:i32
%4:i32 = phi %0, 1:i32, %3, 0:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = var
%3:i32 = and 255:i32, %2
%4:i32 = phi %1, 1:i32, 99:i32, %3
%5:i32 = phi %0, 100:i32, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i32 = phi %1, 4:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, 0:i8, %3
%5:i1 = var
%6:i8 = zext %5
%7:i8 = phi %0, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 3
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5 = block 2
%6:i32 = var (0000000000000000000000000000000x) (n)
%7:i32 = phi %2, 0:i32, %4, %6
%8:i32 = phi %1, 0:i32, %7, 1:i32
%9:i32 = phi %0, 1:i32, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 3
%3:i8 = phi %2, 1:i8, 1:i8, 0:i8
%4 = block 2
%5:i8 = phi %4, %3, 1:i8
%6:i8 = phi %1, %3, %5
%7 = block 2
%8:i8 = phi %7, %6, 1:i8
%9:i8 = phi %0, %6, %8, %6
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 2:i32, 3:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2 = block 3
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, 1:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7:i32 = phi %0, 1:i32, 1:i32, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 12
%2:i1 = var
%3:i16 = select %2, 15:i16, 0:i16
%4:i1 = var
%5:i16 = select %4, 0:i16, 6:i16
%6:i16 = select %4, 7:i16, 0:i16
%7:i1 = var
%8:i16 = select %7, 8:i16, 9:i16
%9:i16 = phi %1, %3, %5, %6, %8, 1:i16, 2:i16, 3:i16, 4:i16, 5:i16, 10:i16, 14:i16, 0:i16
%10 = block 5
%11:i64 = var
%12:i64 = var
%13:i1 = ne %11, %12
%14:i16 = or 32:i16, %9
%15:i16 = select %13, %14, %9
%16:i16 = phi %0, %9, %9, %15
infer %16

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1:i8 = var (0xxxxxxx) (n)
%2:i8 = and 1:i8, %1
%3:i8 = xor 1:i8, %2
%4:i8 = phi %0, 0:i8, 0:i8, 0:i8, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 4
%4:i32 = phi %3, 0:i32, 134:i32, 133:i32, 129:i32
%5:i32 = phi %2, %4, 0:i32
%6:i32 = phi %1, %5, %4
%7:i32 = phi %0, 129:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i64 = var
%2:i64 = var (0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (n)
%3:i64 = and %1, %2
%4:i64 = cttz %3
%5:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxx000000)
%6:i64 = zext %5
%7:i64 = var
%8:i64 = cttz %7
%9:i64 = or %6, %8
%10:i64 = phi %0, %4, %9
infer %10

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = phi %2, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 1:i32
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var
%2:i64 = zext %1
%3:i64 = addnw 1:i64, %2
%4:i64 = phi %0, 0:i64, %3, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 3
%3:i8 = var (0000000x) (n)
%4:i8 = phi %2, %3, %3, 1:i8
%5:i8 = phi %1, 0:i8, %4
%6:i8 = phi %0, 0:i8, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 26
%4:i1 = var
%5:i1 = phi %3, %4, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1, 1:i1
%6:i8 = zext %5
%7:i8 = phi %0, 0:i8, %2, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 1:i32, 0:i32, %3
%5 = block 3
%6 = block 2
%7:i32 = phi %6, 1:i32, 0:i32
%8:i32 = phi %5, 1:i32, 0:i32, %7
%9:i32 = phi %0, 0:i32, %4, %8, 1:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 0:i8, 1:i8
%4:i8 = phi %1, %3, 0:i8
%5:i8 = phi %0, %4, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 2:i32, 3:i32, 1:i32, 4:i32
%3:i32 = phi %0, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = phi %1, 1:i32, 3:i32
%3:i32 = phi %0, 0:i32, %2, 0:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 7
%2:i8 = phi %1, 1:i8, 1:i8, 1:i8, 1:i8, 0:i8, 1:i8, 0:i8
%3:i8 = phi %0, %2, 0:i8, 0:i8
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (000000000000000000000000xxxxxxxx) (n)
%5 = block 2
%6:i32 = var (000000000000000000000000000000x0) (n)
%7:i32 = phi %2, %4, %6
%8:i32 = phi %1, 2:i32, %7
%9:i32 = phi %0, %8, 2:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 1:i32, 1:i32, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, 0:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i32 = phi %1, 1584:i32, 154:i32, 0:i32
%3:i32 = phi %0, 1584:i32, 170:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 0:i8, 0:i8
%5:i1 = var
%6:i8 = zext %5
%7:i1 = var
%8:i8 = zext %7
%9:i1 = var
%10:i8 = zext %9
%11:i8 = phi %0, 0:i8, %4, %6, %8, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i8 = phi %1, 0:i8, 1:i8
%3 = block 14
%4 = block 11
%5:i8 = phi %4, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6:i8 = phi %3, %5, %5, 0:i8, 1:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%7:i8 = phi %0, %2, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i1 = var
%2:i1 = var
%3:i32 = select %2, 7841:i32, 1786:i32
%4:i32 = select %1, 7838:i32, %3
%5:i32 = select %2, 7521:i32, 1747:i32
%6:i32 = select %1, 7489:i32, %5
%7:i32 = select %2, 7991:i32, 1837:i32
%8:i32 = select %1, 7959:i32, %7
%9:i32 = phi %0, %4, %6, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i32 = phi %0, 1:i32, 1:i32, %6, 1:i32, 0:i32
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i32 = phi %1, 1:i32, 2:i32, 1:i32
%3:i32 = addnw 1:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = addnsw 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var
%1:i1 = eq 0:i32, %0
%2 = block 2
%3:i1 = var
%4 = block 2
%5:i32 = var (000000000000000000000000000x000x) (n)
%6 = block 2
%7:i32 = var (0000000000000000000000000000000x) (n)
%8:i32 = phi %4, %5, %7
%9:i32 = select %3, 32:i32, %8
%10:i32 = phi %2, %9, %8
%11:i32 = select %1, 48:i32, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 9
%1 = block 2
%2 = block 4
%3:i1 = var
%4:i8 = zext %3
%5:i8 = phi %2, 0:i8, 0:i8, %4, %4
%6:i8 = phi %1, %5, %4
%7:i1 = var
%8:i8 = zext %7
%9:i8 = phi %0, 0:i8, 0:i8, %6, %8, %8, %8, %8, %8, %8
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 16
%1 = block 2
%2 = block 2
%3:i8 = phi %2, 1:i8, 0:i8
%4:i8 = phi %1, 1:i8, %3
%5 = block 2
%6 = block 2
%7:i8 = phi %6, 1:i8, 0:i8
%8:i8 = phi %5, 1:i8, %7
%9 = block 3
%10 = block 2
%11 = block 2
%12:i8 = var (0000000x) (n)
%13:i8 = phi %10, 1:i8, %12
%14:i8 = phi %9, %13, 1:i8, %13
%15 = block 8
%16 = block 2
%17:i8 = phi %16, 1:i8, 0:i8
%18:i8 = phi %15, 0:i8, %17, %17, %17, 0:i8, 0:i8, %17, %17
%19 = block 2
%20:i8 = phi %19, 1:i8, 0:i8
%21 = block 2
%22:i8 = phi %21, 1:i8, 0:i8
%23 = block 2
%24 = block 2
%25:i8 = phi %24, 1:i8, 0:i8
%26:i8 = phi %23, 1:i8, %25
%27:i8 = phi %0, 0:i8, 1:i8, 0:i8, %4, %8, %14, %18, 0:i8, %20, 0:i8, 1:i8, %22, %26, 0:i8, 0:i8, 0:i8
infer %27

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 5
%2:i32 = phi %1, 0:i32, 1:i32, 2:i32, 3:i32, 0:i32
%3:i32 = phi %0, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2:i32 = phi %1, 0:i32, 409:i32, 380:i32
%3:i37 = var (000000000000000000000000000000000000x) (n)
%4:i1 = ne 0:i37, %3
%5:i32 = select %4, 380:i32, %2
%6:i32 = phi %0, %2, %2, %2, %5
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0:i32 = var (0000000000000000000000000000000x) (n)
%1:i32 = xor 31:i32, %0
%2:i1 = var
%3:i32 = zext %2
%4:i32 = subnsw %1, %3
%5:i1 = var
%6:i32 = zext %5
%7:i32 = subnsw %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2:i1 = var
%3:i32 = select %2, 1:i32, 2:i32
%4:i32 = phi %1, %3, 2:i32, 1:i32
%5:i32 = phi %0, 2:i32, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 10
%2:i32 = phi %1, 1:i32, 2:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 1:i32
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i32 = var (0000000000000000000000000000x0x1) (zn)
%3:i32 = phi %1, %2, 9:i32
%4:i32 = phi %0, 9:i32, 9:i32, %3, 9:i32
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000xx) (n)
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, %4, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
%6:i32 = shl %5, 5:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 0:i32, 1:i32
%4:i32 = phi %1, 0:i32, %3, 1:i32
%5:i32 = phi %0, %4, 0:i32
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 1:i32, 2:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i32 = var (0000000000000000000000000000000x) (n)
%3:i32 = phi %1, %2, 19:i32
%4:i32 = phi %0, 1:i32, 1:i32, %3
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3 = block 3
%4:i8 = phi %3, 1:i8, 1:i8, 0:i8
%5:i8 = phi %0, 1:i8, %2, 1:i8, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = phi %3, 32:i32, 0:i32
%5:i32 = or 128:i32, %4
%6:i32 = phi %2, %5, %4
%7:i32 = or 18:i32, %6
%8:i32 = or 3:i32, %6
%9:i32 = or 2:i32, %6
%10:i32 = phi %1, %7, %8, %9
%11:i32 = or 64:i32, %10
%12:i32 = phi %0, %10, %11, %6
infer %12

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i1 = phi %1, 0:i1, %2
%4:i8 = zext %3
%5 = block 2
%6:i8 = phi %5, %4, 0:i8
%7:i8 = phi %0, %4, %4, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 11
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i8 = xor 1:i8, %2
%4:i8 = var
%5:i8 = and 1:i8, %4
%6:i8 = xor 1:i8, %5
%7:i8 = var
%8:i8 = and 1:i8, %7
%9:i8 = xor 1:i8, %8
%10:i8 = var
%11:i8 = and 1:i8, %10
%12:i8 = xor 1:i8, %11
%13:i8 = var
%14:i8 = and 1:i8, %13
%15:i8 = xor 1:i8, %14
%16:i8 = var
%17:i8 = and 1:i8, %16
%18:i8 = xor 1:i8, %17
%19:i8 = var
%20:i8 = and 1:i8, %19
%21:i8 = xor 1:i8, %20
%22:i8 = var
%23:i8 = and 1:i8, %22
%24:i8 = xor 1:i8, %23
%25:i8 = phi %0, 1:i8, %3, %6, %9, %12, 1:i8, %15, %18, %21, %24, 1:i8
infer %25

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 12
%2 = block 3
%3:i32 = var (0000000000000000000000000000000x) (n)
%4:i32 = var (00000000000000000000000000000xxx) (n)
%5:i32 = phi %2, %3, %4, %4
%6:i32 = phi %1, 1:i32, 1:i32, 0:i32, 3:i32, 2:i32, 0:i32, %5, 1:i32, 0:i32, 0:i32, 0:i32, 0:i32
%7:i32 = phi %0, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2:i1 = var
%3:i8 = zext %2
%4 = block 2
%5 = block 3
%6:i8 = var (0000000x) (n)
%7:i8 = phi %4, %6, %3
%8:i8 = phi %1, %3, %7
%9:i8 = phi %0, %8, %3, %7
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1:i1 = var
%2:i64 = var (000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxx) (n)
%3:i64 = var (000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxx) (n)
%4:i64 = select %1, %2, %3
%5:i32 = trunc %4
%6:i32 = phi %0, %5, 0:i32
infer %6

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 3
%2 = block 4
%3 = block 3
%4:i32 = var (0000000000000000000000000000000x) (n)
%5:i32 = phi %2, 1:i32, 1:i32, 0:i32, %4
%6:i32 = phi %1, 1:i32, 0:i32, %5
%7:i32 = phi %0, 1:i32, 0:i32, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 2
%2 = block 2
%3:i32 = var (000000000000000000000000000000x1) (zn)
%4:i32 = var (000000000000000000000000000000x1) (zn)
%5:i32 = phi %2, %3, %4
%6:i1 = var
%7:i32 = select %6, 1:i32, %5
%8:i32 = phi %1, %5, %7
%9:i32 = phi %0, %8, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32
infer %9

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 1:i32, 0:i32
%4:i32 = phi %1, 0:i32, %3
%5 = block 3
%6 = block 2
%7 = block 2
%8:i32 = var (0000000000000000000000000000000x) (n)
%9:i32 = phi %6, 0:i32, %8
%10:i32 = phi %5, 0:i32, %9, 1:i32
%11:i32 = phi %0, 0:i32, %4, %10
infer %11

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 5
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, 1:i8, %4
%6:i8 = phi %1, 1:i8, %5
%7:i8 = phi %0, 1:i8, %6, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2:i1 = var
%3:i32 = select %2, 3:i32, 2:i32
%4:i32 = phi %1, 1:i32, %3
%5:i32 = phi %0, 1:i32, %4
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i32 = var
%2:i64 = zext %1
%3:i64 = addnw 4:i64, %2
%4:i64 = phi %0, %3, 0:i64, 0:i64
infer %4

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 4
%1 = block 3
%2 = block 2
%3 = block 6
%4:i8 = var (0000000x) (n)
%5:i8 = phi %2, %4, 0:i8
%6:i8 = phi %1, %5, %5, 1:i8
%7:i8 = phi %0, %6, %5, %5, %5
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 3
%1:i8 = var (0000000x) (n)
%2:i8 = var (0000000x) (n)
%3 = block 2
%4:i8 = var
%5:i1 = eq %2, %4
%6:i8 = select %5, 0:i8, %1
%7:i8 = phi %0, %1, %1, %6
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 5
%1 = block 3
%2:i32 = phi %1, 2:i32, 3:i32, 0:i32
%3:i32 = phi %0, 1:i32, 4:i32, 5:i32, 0:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 6
%1 = block 4
%2 = block 3
%3:i8 = phi %2, 0:i8, 0:i8, 1:i8
%4 = block 7
%5:i8 = phi %4, %3, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8, 0:i8
%6:i8 = phi %1, %3, %5, %5, %5
%7:i8 = phi %0, 0:i8, 0:i8, 0:i8, 0:i8, %6, 0:i8
infer %7

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 3
%2:i1 = var
%3:i8 = zext %2
%4:i8 = phi %1, %3, 1:i8, %3
%5:i8 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 8
%1:i32 = var (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00)
%2:i32 = and 252:i32, %1
%3:i32 = var (0000000000000000xxxxxxxx00000000) (n)
%4:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%5:i32 = or %3, %4
%6:i32 = or %2, %5
%7:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%8:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%9:i32 = or %7, %8
%10:i32 = or 1:i32, %9
%11:i32 = var (0000000000000000xxxxxxxxxxxxxx00) (n)
%12:i32 = var (00000000xxxxxxxx0000000000000000) (n)
%13:i32 = or %11, %12
%14:i32 = or 1:i32, %13
%15:i32 = var (000000000000000000000000xxxxxx00) (n)
%16:i32 = or %15, %3
%17:i32 = or 524288:i32, %16
%18:i32 = phi %0, %6, %6, %10, %10, %14, %14, %17, %17
infer %18

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 2:i32, 2:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 4
%2:i32 = phi %1, 1:i32, 1:i32, 1:i32, 0:i32
%3:i32 = phi %0, 1:i32, %2
infer %3

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------

%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 9:i32, 8:i32
%4:i32 = phi %1, %3, 8:i32
%5:i32 = phi %0, %4, %3
infer %5

known from Souper:   n
known from compiler: 
souper is stronger

------------------------------------------------------



Done.
